/*
 * Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
 * 
 * On Sun Nov 10 19:16:48 EST 2019
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkTest_h__
#define __mkTest_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTest module */
class MOD_mkTest : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_check;
  MOD_Reg<tUInt8> INST_feed;
  MOD_Reg<tUInt8> INST_passed;
  MOD_Reg<tUInt8> INST_svsp_compCounter;
  MOD_Fifo<tUWide> INST_svsp_cs_compBlocks;
  MOD_Fifo<tUWide> INST_svsp_cs_refBlocks;
  MOD_Fifo<tUInt8> INST_svsp_cs_scores;
  MOD_Fifo<tUWide> INST_svsp_loadCompBlock_blocks;
  MOD_Fifo<tUInt8> INST_svsp_loadCompBlock_xs;
  MOD_Fifo<tUInt8> INST_svsp_loadCompBlock_ys;
  MOD_Reg<tUInt8> INST_svsp_loadCounter;
  MOD_Fifo<tUWide> INST_svsp_loadRefBlock_blocks;
  MOD_Fifo<tUInt8> INST_svsp_loadRefBlock_xs;
  MOD_Fifo<tUInt8> INST_svsp_loadRefBlock_ys;
  MOD_Fifo<tUInt32> INST_svsp_realDistances;
  MOD_Reg<tUWide> INST_svsp_refBlock;
  MOD_Reg<tUInt8> INST_svsp_referenceBlockLoaded;
  MOD_Reg<tUInt8> INST_svsp_referenceBlockStored;
  MOD_Reg<tUInt32> INST_svsp_us_bestDistance;
  MOD_Reg<tUInt32> INST_svsp_us_bestScore;
  MOD_Fifo<tUInt8> INST_svsp_xs;
  MOD_Fifo<tUInt8> INST_svsp_ys;
 
 /* Constructor */
 public:
  MOD_mkTest(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_finish;
  tUInt8 DEF_CAN_FIRE_RL_finish;
  tUInt8 DEF_WILL_FIRE_RL_c2;
  tUInt8 DEF_CAN_FIRE_RL_c2;
  tUInt8 DEF_WILL_FIRE_RL_c1;
  tUInt8 DEF_CAN_FIRE_RL_c1;
  tUInt8 DEF_WILL_FIRE_RL_c0;
  tUInt8 DEF_CAN_FIRE_RL_c0;
  tUInt8 DEF_WILL_FIRE_RL_f2;
  tUInt8 DEF_CAN_FIRE_RL_f2;
  tUInt8 DEF_WILL_FIRE_RL_f1;
  tUInt8 DEF_CAN_FIRE_RL_f1;
  tUInt8 DEF_WILL_FIRE_RL_f0;
  tUInt8 DEF_CAN_FIRE_RL_f0;
  tUInt8 DEF_WILL_FIRE_RL_svsp_computeRealWorldDistanceRule;
  tUInt8 DEF_CAN_FIRE_RL_svsp_computeRealWorldDistanceRule;
  tUInt8 DEF_WILL_FIRE_RL_svsp_updateScoreRule;
  tUInt8 DEF_CAN_FIRE_RL_svsp_updateScoreRule;
  tUInt8 DEF_WILL_FIRE_RL_svsp_computeScoreRule;
  tUInt8 DEF_CAN_FIRE_RL_svsp_computeScoreRule;
  tUInt8 DEF_WILL_FIRE_RL_svsp_retrieveBlock;
  tUInt8 DEF_CAN_FIRE_RL_svsp_retrieveBlock;
  tUInt8 DEF_WILL_FIRE_RL_svsp_cs_compute;
  tUInt8 DEF_CAN_FIRE_RL_svsp_cs_compute;
  tUInt8 DEF_WILL_FIRE_RL_svsp_loadCompBlock_compute;
  tUInt8 DEF_CAN_FIRE_RL_svsp_loadCompBlock_compute;
  tUInt8 DEF_WILL_FIRE_RL_svsp_loadRefBlock_compute;
  tUInt8 DEF_CAN_FIRE_RL_svsp_loadRefBlock_compute;
  tUInt8 DEF_svsp_compCounter__h74868;
  tUInt8 DEF_b__h38645;
  tUInt8 DEF_x__h78738;
  tUInt8 DEF_x__h78733;
  tUInt8 DEF_svsp_referenceBlockStored__h38972;
  tUInt8 DEF_svsp_referenceBlockLoaded__h38671;
 
 /* Local definitions */
 private:
  tUInt32 DEF_unsigned_svsp_realDistances_first__96_BITS_9__ETC___d607;
  tUInt32 DEF_svsp_realDistances_first__96_BITS_9_TO_0___d600;
  tUInt32 DEF_signed_svsp_realDistances_first__96_BITS_19_T_ETC___d606;
  tUInt32 DEF_svsp_realDistances_first__96_BITS_19_TO_10___d597;
  tUInt8 DEF_unsigned_1___d6;
  tUWide DEF_svsp_cs_compBlocks_first____d35;
  tUWide DEF_svsp_cs_refBlocks_first____d33;
  tUWide DEF_svsp_loadCompBlock_blocks_first____d519;
  tUWide DEF_svsp_loadRefBlock_blocks_first____d517;
  tUWide DEF_svsp_refBlock__h69062;
  tUInt32 DEF_x__h78036;
  tUWide DEF_IF_svsp_referenceBlockStored_07_THEN_svsp_refB_ETC___d518;
  tUWide DEF_IF_svsp_loadCompBlock_xs_first__2_EQ_10_3_THEN_ETC___d27;
  tUWide DEF_IF_svsp_loadCompBlock_ys_first__4_EQ_0_5_THEN__ETC___d23;
  tUWide DEF_IF_svsp_loadCompBlock_ys_first__4_EQ_0_5_THEN__ETC___d24;
  tUWide DEF_IF_svsp_loadCompBlock_ys_first__4_EQ_0_5_THEN__ETC___d25;
  tUInt8 DEF_x__h78245;
  tUInt8 DEF_x__h77746;
 
 /* Rules */
 public:
  void RL_svsp_loadRefBlock_compute();
  void RL_svsp_loadCompBlock_compute();
  void RL_svsp_cs_compute();
  void RL_svsp_retrieveBlock();
  void RL_svsp_computeScoreRule();
  void RL_svsp_updateScoreRule();
  void RL_svsp_computeRealWorldDistanceRule();
  void RL_f0();
  void RL_f1();
  void RL_f2();
  void RL_c0();
  void RL_c1();
  void RL_c2();
  void RL_finish();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTest &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTest &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTest &backing);
};

#endif /* ifndef __mkTest_h__ */
