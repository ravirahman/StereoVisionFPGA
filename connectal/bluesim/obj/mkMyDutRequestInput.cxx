/*
 * Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
 * 
 * On Sat Nov 16 22:39:52 EST 2019
 * 
 */
#include "bluesim_primitives.h"
#include "mkMyDutRequestInput.h"


/* Literal declarations */
static unsigned int const UWide_literal_544_h0_arr[] = { 0u,
							 0u,
							 0u,
							 0u,
							 0u,
							 0u,
							 0u,
							 0u,
							 0u,
							 0u,
							 0u,
							 0u,
							 0u,
							 0u,
							 0u,
							 0u,
							 0u };
static tUWide const UWide_literal_544_h0(544u, UWide_literal_544_h0_arr);


/* Constructor */
MOD_mkMyDutRequestInput::MOD_mkMyDutRequestInput(tSimStateHdl simHdl,
						 char const *name,
						 Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_loadDRAM_requestAdapter_count(simHdl,
				       "loadDRAM_requestAdapter_count",
				       this,
				       5u,
				       (tUInt8)0u,
				       (tUInt8)0u),
    INST_loadDRAM_requestAdapter_fbnbuff(simHdl,
					 "loadDRAM_requestAdapter_fbnbuff",
					 this,
					 544u,
					 UWide_literal_544_h0,
					 (tUInt8)0u),
    INST_loadDRAM_requestAdapter_fifo(simHdl, "loadDRAM_requestAdapter_fifo", this, 544u, 1u, 1u, 0u),
    INST_readDRAM_requestAdapter_fbnbuff(simHdl,
					 "readDRAM_requestAdapter_fbnbuff",
					 this,
					 32u,
					 0u,
					 (tUInt8)0u),
    INST_readDRAM_requestAdapter_fifo(simHdl, "readDRAM_requestAdapter_fifo", this, 32u, 1u, 1u, 0u),
    INST_requestPoints_requestAdapter_fbnbuff(simHdl,
					      "requestPoints_requestAdapter_fbnbuff",
					      this,
					      32u,
					      0u,
					      (tUInt8)0u),
    INST_requestPoints_requestAdapter_fifo(simHdl,
					   "requestPoints_requestAdapter_fifo",
					   this,
					   24u,
					   1u,
					   1u,
					   0u),
    INST_reset_dut_requestAdapter_fbnbuff(simHdl,
					  "reset_dut_requestAdapter_fbnbuff",
					  this,
					  32u,
					  0u,
					  (tUInt8)0u),
    INST_reset_dut_requestAdapter_fifo(simHdl, "reset_dut_requestAdapter_fifo", this, 32u, 1u, 1u, 0u),
    PORT_RST_N((tUInt8)1u),
    DEF__read__h210(544u),
    DEF__read_BITS_511_TO_0___h1052(512u),
    DEF_newbuff__h1028(544u)
{
  PORT_EN_portalIfc_requests_2_enq = false;
  PORT_EN_portalIfc_requests_1_enq = false;
  PORT_EN_portalIfc_requests_0_enq = false;
  PORT_EN_portalIfc_requests_3_enq = false;
  PORT_EN_pipes_reset_dut_PipeOut_deq = false;
  PORT_EN_pipes_requestPoints_PipeOut_deq = false;
  PORT_EN_pipes_loadDRAM_PipeOut_deq = false;
  PORT_EN_pipes_readDRAM_PipeOut_deq = false;
  PORT_portalIfc_requests_2_enq_v = 0u;
  PORT_portalIfc_requests_1_enq_v = 0u;
  PORT_portalIfc_requests_0_enq_v = 0u;
  PORT_portalIfc_messageSize_size_methodNumber = 0u;
  PORT_portalIfc_requests_3_enq_v = 0u;
  PORT_portalIfc_intr_channel = 0u;
  PORT_portalIfc_intr_status = false;
  PORT_portalIfc_requests_2_notFull = false;
  PORT_portalIfc_requests_1_notFull = false;
  PORT_portalIfc_requests_0_notFull = false;
  PORT_portalIfc_messageSize_size = 0u;
  PORT_RDY_portalIfc_messageSize_size = false;
  PORT_RDY_portalIfc_requests_0_enq = false;
  PORT_RDY_portalIfc_requests_0_notFull = false;
  PORT_RDY_portalIfc_requests_1_enq = false;
  PORT_RDY_portalIfc_requests_1_notFull = false;
  PORT_RDY_portalIfc_requests_2_enq = false;
  PORT_RDY_portalIfc_requests_2_notFull = false;
  PORT_RDY_portalIfc_intr_status = false;
  PORT_RDY_portalIfc_intr_channel = false;
  PORT_portalIfc_requests_3_notFull = false;
  PORT_RDY_portalIfc_requests_3_enq = false;
  PORT_RDY_portalIfc_requests_3_notFull = false;
  PORT_pipes_reset_dut_PipeOut_notEmpty = false;
  PORT_pipes_reset_dut_PipeOut_first = 0u;
  PORT_pipes_requestPoints_PipeOut_notEmpty = false;
  PORT_pipes_requestPoints_PipeOut_first = 0u;
  PORT_pipes_loadDRAM_PipeOut_notEmpty = false;
  PORT_pipes_loadDRAM_PipeOut_first.setSize(544u);
  PORT_pipes_loadDRAM_PipeOut_first.clear();
  PORT_pipes_readDRAM_PipeOut_notEmpty = false;
  PORT_pipes_readDRAM_PipeOut_first = 0u;
  PORT_RDY_pipes_readDRAM_PipeOut_first = false;
  PORT_RDY_pipes_readDRAM_PipeOut_deq = false;
  PORT_RDY_pipes_readDRAM_PipeOut_notEmpty = false;
  PORT_RDY_pipes_loadDRAM_PipeOut_first = false;
  PORT_RDY_pipes_loadDRAM_PipeOut_deq = false;
  PORT_RDY_pipes_loadDRAM_PipeOut_notEmpty = false;
  PORT_RDY_pipes_requestPoints_PipeOut_first = false;
  PORT_RDY_pipes_requestPoints_PipeOut_deq = false;
  PORT_RDY_pipes_requestPoints_PipeOut_notEmpty = false;
  PORT_RDY_pipes_reset_dut_PipeOut_first = false;
  PORT_RDY_pipes_reset_dut_PipeOut_deq = false;
  PORT_RDY_pipes_reset_dut_PipeOut_notEmpty = false;
  symbol_count = 92u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkMyDutRequestInput::init_symbols_0()
{
  init_symbol(&symbols[0u], "_read__h246", SYM_DEF, &DEF__read__h246, 5u);
  init_symbol(&symbols[1u],
	      "CAN_FIRE_pipes_loadDRAM_PipeOut_deq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_deq,
	      1u);
  init_symbol(&symbols[2u],
	      "CAN_FIRE_pipes_loadDRAM_PipeOut_first",
	      SYM_DEF,
	      &DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_first,
	      1u);
  init_symbol(&symbols[3u],
	      "CAN_FIRE_pipes_loadDRAM_PipeOut_notEmpty",
	      SYM_DEF,
	      &DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_notEmpty,
	      1u);
  init_symbol(&symbols[4u],
	      "CAN_FIRE_pipes_readDRAM_PipeOut_deq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_pipes_readDRAM_PipeOut_deq,
	      1u);
  init_symbol(&symbols[5u],
	      "CAN_FIRE_pipes_readDRAM_PipeOut_first",
	      SYM_DEF,
	      &DEF_CAN_FIRE_pipes_readDRAM_PipeOut_first,
	      1u);
  init_symbol(&symbols[6u],
	      "CAN_FIRE_pipes_readDRAM_PipeOut_notEmpty",
	      SYM_DEF,
	      &DEF_CAN_FIRE_pipes_readDRAM_PipeOut_notEmpty,
	      1u);
  init_symbol(&symbols[7u],
	      "CAN_FIRE_pipes_requestPoints_PipeOut_deq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_pipes_requestPoints_PipeOut_deq,
	      1u);
  init_symbol(&symbols[8u],
	      "CAN_FIRE_pipes_requestPoints_PipeOut_first",
	      SYM_DEF,
	      &DEF_CAN_FIRE_pipes_requestPoints_PipeOut_first,
	      1u);
  init_symbol(&symbols[9u],
	      "CAN_FIRE_pipes_requestPoints_PipeOut_notEmpty",
	      SYM_DEF,
	      &DEF_CAN_FIRE_pipes_requestPoints_PipeOut_notEmpty,
	      1u);
  init_symbol(&symbols[10u],
	      "CAN_FIRE_pipes_reset_dut_PipeOut_deq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_pipes_reset_dut_PipeOut_deq,
	      1u);
  init_symbol(&symbols[11u],
	      "CAN_FIRE_pipes_reset_dut_PipeOut_first",
	      SYM_DEF,
	      &DEF_CAN_FIRE_pipes_reset_dut_PipeOut_first,
	      1u);
  init_symbol(&symbols[12u],
	      "CAN_FIRE_pipes_reset_dut_PipeOut_notEmpty",
	      SYM_DEF,
	      &DEF_CAN_FIRE_pipes_reset_dut_PipeOut_notEmpty,
	      1u);
  init_symbol(&symbols[13u],
	      "CAN_FIRE_portalIfc_intr_channel",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_intr_channel,
	      1u);
  init_symbol(&symbols[14u],
	      "CAN_FIRE_portalIfc_intr_status",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_intr_status,
	      1u);
  init_symbol(&symbols[15u],
	      "CAN_FIRE_portalIfc_messageSize_size",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_messageSize_size,
	      1u);
  init_symbol(&symbols[16u],
	      "CAN_FIRE_portalIfc_requests_0_enq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_requests_0_enq,
	      1u);
  init_symbol(&symbols[17u],
	      "CAN_FIRE_portalIfc_requests_0_notFull",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_requests_0_notFull,
	      1u);
  init_symbol(&symbols[18u],
	      "CAN_FIRE_portalIfc_requests_1_enq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_requests_1_enq,
	      1u);
  init_symbol(&symbols[19u],
	      "CAN_FIRE_portalIfc_requests_1_notFull",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_requests_1_notFull,
	      1u);
  init_symbol(&symbols[20u],
	      "CAN_FIRE_portalIfc_requests_2_enq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_requests_2_enq,
	      1u);
  init_symbol(&symbols[21u],
	      "CAN_FIRE_portalIfc_requests_2_notFull",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_requests_2_notFull,
	      1u);
  init_symbol(&symbols[22u],
	      "CAN_FIRE_portalIfc_requests_3_enq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_requests_3_enq,
	      1u);
  init_symbol(&symbols[23u],
	      "CAN_FIRE_portalIfc_requests_3_notFull",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_requests_3_notFull,
	      1u);
  init_symbol(&symbols[24u],
	      "EN_pipes_loadDRAM_PipeOut_deq",
	      SYM_PORT,
	      &PORT_EN_pipes_loadDRAM_PipeOut_deq,
	      1u);
  init_symbol(&symbols[25u],
	      "EN_pipes_readDRAM_PipeOut_deq",
	      SYM_PORT,
	      &PORT_EN_pipes_readDRAM_PipeOut_deq,
	      1u);
  init_symbol(&symbols[26u],
	      "EN_pipes_requestPoints_PipeOut_deq",
	      SYM_PORT,
	      &PORT_EN_pipes_requestPoints_PipeOut_deq,
	      1u);
  init_symbol(&symbols[27u],
	      "EN_pipes_reset_dut_PipeOut_deq",
	      SYM_PORT,
	      &PORT_EN_pipes_reset_dut_PipeOut_deq,
	      1u);
  init_symbol(&symbols[28u],
	      "EN_portalIfc_requests_0_enq",
	      SYM_PORT,
	      &PORT_EN_portalIfc_requests_0_enq,
	      1u);
  init_symbol(&symbols[29u],
	      "EN_portalIfc_requests_1_enq",
	      SYM_PORT,
	      &PORT_EN_portalIfc_requests_1_enq,
	      1u);
  init_symbol(&symbols[30u],
	      "EN_portalIfc_requests_2_enq",
	      SYM_PORT,
	      &PORT_EN_portalIfc_requests_2_enq,
	      1u);
  init_symbol(&symbols[31u],
	      "EN_portalIfc_requests_3_enq",
	      SYM_PORT,
	      &PORT_EN_portalIfc_requests_3_enq,
	      1u);
  init_symbol(&symbols[32u],
	      "loadDRAM_requestAdapter_count",
	      SYM_MODULE,
	      &INST_loadDRAM_requestAdapter_count);
  init_symbol(&symbols[33u],
	      "loadDRAM_requestAdapter_fbnbuff",
	      SYM_MODULE,
	      &INST_loadDRAM_requestAdapter_fbnbuff);
  init_symbol(&symbols[34u],
	      "loadDRAM_requestAdapter_fifo",
	      SYM_MODULE,
	      &INST_loadDRAM_requestAdapter_fifo);
  init_symbol(&symbols[35u],
	      "pipes_loadDRAM_PipeOut_first",
	      SYM_PORT,
	      &PORT_pipes_loadDRAM_PipeOut_first,
	      544u);
  init_symbol(&symbols[36u],
	      "pipes_loadDRAM_PipeOut_notEmpty",
	      SYM_PORT,
	      &PORT_pipes_loadDRAM_PipeOut_notEmpty,
	      1u);
  init_symbol(&symbols[37u],
	      "pipes_readDRAM_PipeOut_first",
	      SYM_PORT,
	      &PORT_pipes_readDRAM_PipeOut_first,
	      32u);
  init_symbol(&symbols[38u],
	      "pipes_readDRAM_PipeOut_notEmpty",
	      SYM_PORT,
	      &PORT_pipes_readDRAM_PipeOut_notEmpty,
	      1u);
  init_symbol(&symbols[39u],
	      "pipes_requestPoints_PipeOut_first",
	      SYM_PORT,
	      &PORT_pipes_requestPoints_PipeOut_first,
	      24u);
  init_symbol(&symbols[40u],
	      "pipes_requestPoints_PipeOut_notEmpty",
	      SYM_PORT,
	      &PORT_pipes_requestPoints_PipeOut_notEmpty,
	      1u);
  init_symbol(&symbols[41u],
	      "pipes_reset_dut_PipeOut_first",
	      SYM_PORT,
	      &PORT_pipes_reset_dut_PipeOut_first,
	      32u);
  init_symbol(&symbols[42u],
	      "pipes_reset_dut_PipeOut_notEmpty",
	      SYM_PORT,
	      &PORT_pipes_reset_dut_PipeOut_notEmpty,
	      1u);
  init_symbol(&symbols[43u], "portalIfc_intr_channel", SYM_PORT, &PORT_portalIfc_intr_channel, 32u);
  init_symbol(&symbols[44u], "portalIfc_intr_status", SYM_PORT, &PORT_portalIfc_intr_status, 1u);
  init_symbol(&symbols[45u],
	      "portalIfc_messageSize_size",
	      SYM_PORT,
	      &PORT_portalIfc_messageSize_size,
	      16u);
  init_symbol(&symbols[46u],
	      "portalIfc_messageSize_size_methodNumber",
	      SYM_PORT,
	      &PORT_portalIfc_messageSize_size_methodNumber,
	      16u);
  init_symbol(&symbols[47u],
	      "portalIfc_requests_0_enq_v",
	      SYM_PORT,
	      &PORT_portalIfc_requests_0_enq_v,
	      32u);
  init_symbol(&symbols[48u],
	      "portalIfc_requests_0_notFull",
	      SYM_PORT,
	      &PORT_portalIfc_requests_0_notFull,
	      1u);
  init_symbol(&symbols[49u],
	      "portalIfc_requests_1_enq_v",
	      SYM_PORT,
	      &PORT_portalIfc_requests_1_enq_v,
	      32u);
  init_symbol(&symbols[50u],
	      "portalIfc_requests_1_notFull",
	      SYM_PORT,
	      &PORT_portalIfc_requests_1_notFull,
	      1u);
  init_symbol(&symbols[51u],
	      "portalIfc_requests_2_enq_v",
	      SYM_PORT,
	      &PORT_portalIfc_requests_2_enq_v,
	      32u);
  init_symbol(&symbols[52u],
	      "portalIfc_requests_2_notFull",
	      SYM_PORT,
	      &PORT_portalIfc_requests_2_notFull,
	      1u);
  init_symbol(&symbols[53u],
	      "portalIfc_requests_3_enq_v",
	      SYM_PORT,
	      &PORT_portalIfc_requests_3_enq_v,
	      32u);
  init_symbol(&symbols[54u],
	      "portalIfc_requests_3_notFull",
	      SYM_PORT,
	      &PORT_portalIfc_requests_3_notFull,
	      1u);
  init_symbol(&symbols[55u],
	      "RDY_pipes_loadDRAM_PipeOut_deq",
	      SYM_PORT,
	      &PORT_RDY_pipes_loadDRAM_PipeOut_deq,
	      1u);
  init_symbol(&symbols[56u],
	      "RDY_pipes_loadDRAM_PipeOut_first",
	      SYM_PORT,
	      &PORT_RDY_pipes_loadDRAM_PipeOut_first,
	      1u);
  init_symbol(&symbols[57u],
	      "RDY_pipes_loadDRAM_PipeOut_notEmpty",
	      SYM_PORT,
	      &PORT_RDY_pipes_loadDRAM_PipeOut_notEmpty,
	      1u);
  init_symbol(&symbols[58u],
	      "RDY_pipes_readDRAM_PipeOut_deq",
	      SYM_PORT,
	      &PORT_RDY_pipes_readDRAM_PipeOut_deq,
	      1u);
  init_symbol(&symbols[59u],
	      "RDY_pipes_readDRAM_PipeOut_first",
	      SYM_PORT,
	      &PORT_RDY_pipes_readDRAM_PipeOut_first,
	      1u);
  init_symbol(&symbols[60u],
	      "RDY_pipes_readDRAM_PipeOut_notEmpty",
	      SYM_PORT,
	      &PORT_RDY_pipes_readDRAM_PipeOut_notEmpty,
	      1u);
  init_symbol(&symbols[61u],
	      "RDY_pipes_requestPoints_PipeOut_deq",
	      SYM_PORT,
	      &PORT_RDY_pipes_requestPoints_PipeOut_deq,
	      1u);
  init_symbol(&symbols[62u],
	      "RDY_pipes_requestPoints_PipeOut_first",
	      SYM_PORT,
	      &PORT_RDY_pipes_requestPoints_PipeOut_first,
	      1u);
  init_symbol(&symbols[63u],
	      "RDY_pipes_requestPoints_PipeOut_notEmpty",
	      SYM_PORT,
	      &PORT_RDY_pipes_requestPoints_PipeOut_notEmpty,
	      1u);
  init_symbol(&symbols[64u],
	      "RDY_pipes_reset_dut_PipeOut_deq",
	      SYM_PORT,
	      &PORT_RDY_pipes_reset_dut_PipeOut_deq,
	      1u);
  init_symbol(&symbols[65u],
	      "RDY_pipes_reset_dut_PipeOut_first",
	      SYM_PORT,
	      &PORT_RDY_pipes_reset_dut_PipeOut_first,
	      1u);
  init_symbol(&symbols[66u],
	      "RDY_pipes_reset_dut_PipeOut_notEmpty",
	      SYM_PORT,
	      &PORT_RDY_pipes_reset_dut_PipeOut_notEmpty,
	      1u);
  init_symbol(&symbols[67u],
	      "RDY_portalIfc_intr_channel",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_intr_channel,
	      1u);
  init_symbol(&symbols[68u],
	      "RDY_portalIfc_intr_status",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_intr_status,
	      1u);
  init_symbol(&symbols[69u],
	      "RDY_portalIfc_messageSize_size",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_messageSize_size,
	      1u);
  init_symbol(&symbols[70u],
	      "RDY_portalIfc_requests_0_enq",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_requests_0_enq,
	      1u);
  init_symbol(&symbols[71u],
	      "RDY_portalIfc_requests_0_notFull",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_requests_0_notFull,
	      1u);
  init_symbol(&symbols[72u],
	      "RDY_portalIfc_requests_1_enq",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_requests_1_enq,
	      1u);
  init_symbol(&symbols[73u],
	      "RDY_portalIfc_requests_1_notFull",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_requests_1_notFull,
	      1u);
  init_symbol(&symbols[74u],
	      "RDY_portalIfc_requests_2_enq",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_requests_2_enq,
	      1u);
  init_symbol(&symbols[75u],
	      "RDY_portalIfc_requests_2_notFull",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_requests_2_notFull,
	      1u);
  init_symbol(&symbols[76u],
	      "RDY_portalIfc_requests_3_enq",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_requests_3_enq,
	      1u);
  init_symbol(&symbols[77u],
	      "RDY_portalIfc_requests_3_notFull",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_requests_3_notFull,
	      1u);
  init_symbol(&symbols[78u],
	      "readDRAM_requestAdapter_fbnbuff",
	      SYM_MODULE,
	      &INST_readDRAM_requestAdapter_fbnbuff);
  init_symbol(&symbols[79u],
	      "readDRAM_requestAdapter_fifo",
	      SYM_MODULE,
	      &INST_readDRAM_requestAdapter_fifo);
  init_symbol(&symbols[80u],
	      "requestPoints_requestAdapter_fbnbuff",
	      SYM_MODULE,
	      &INST_requestPoints_requestAdapter_fbnbuff);
  init_symbol(&symbols[81u],
	      "requestPoints_requestAdapter_fifo",
	      SYM_MODULE,
	      &INST_requestPoints_requestAdapter_fifo);
  init_symbol(&symbols[82u],
	      "reset_dut_requestAdapter_fbnbuff",
	      SYM_MODULE,
	      &INST_reset_dut_requestAdapter_fbnbuff);
  init_symbol(&symbols[83u],
	      "reset_dut_requestAdapter_fifo",
	      SYM_MODULE,
	      &INST_reset_dut_requestAdapter_fifo);
  init_symbol(&symbols[84u],
	      "WILL_FIRE_pipes_loadDRAM_PipeOut_deq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_pipes_loadDRAM_PipeOut_deq,
	      1u);
  init_symbol(&symbols[85u],
	      "WILL_FIRE_pipes_readDRAM_PipeOut_deq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_pipes_readDRAM_PipeOut_deq,
	      1u);
  init_symbol(&symbols[86u],
	      "WILL_FIRE_pipes_requestPoints_PipeOut_deq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_pipes_requestPoints_PipeOut_deq,
	      1u);
  init_symbol(&symbols[87u],
	      "WILL_FIRE_pipes_reset_dut_PipeOut_deq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_pipes_reset_dut_PipeOut_deq,
	      1u);
  init_symbol(&symbols[88u],
	      "WILL_FIRE_portalIfc_requests_0_enq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_portalIfc_requests_0_enq,
	      1u);
  init_symbol(&symbols[89u],
	      "WILL_FIRE_portalIfc_requests_1_enq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_portalIfc_requests_1_enq,
	      1u);
  init_symbol(&symbols[90u],
	      "WILL_FIRE_portalIfc_requests_2_enq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_portalIfc_requests_2_enq,
	      1u);
  init_symbol(&symbols[91u],
	      "WILL_FIRE_portalIfc_requests_3_enq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_portalIfc_requests_3_enq,
	      1u);
}


/* Rule actions */


/* Methods */

tUInt32 MOD_mkMyDutRequestInput::METH_portalIfc_messageSize_size(tUInt32 ARG_portalIfc_messageSize_size_methodNumber)
{
  PORT_portalIfc_messageSize_size_methodNumber = ARG_portalIfc_messageSize_size_methodNumber;
  switch (ARG_portalIfc_messageSize_size_methodNumber) {
  case 1u:
    PORT_portalIfc_messageSize_size = 544u;
    break;
  case 2u:
    PORT_portalIfc_messageSize_size = 24u;
    break;
  default:
    PORT_portalIfc_messageSize_size = 32u;
  }
  return PORT_portalIfc_messageSize_size;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_portalIfc_messageSize_size()
{
  DEF_CAN_FIRE_portalIfc_messageSize_size = (tUInt8)1u;
  PORT_RDY_portalIfc_messageSize_size = DEF_CAN_FIRE_portalIfc_messageSize_size;
  return PORT_RDY_portalIfc_messageSize_size;
}

tUInt8 MOD_mkMyDutRequestInput::METH_portalIfc_intr_status()
{
  PORT_portalIfc_intr_status = (tUInt8)0u;
  return PORT_portalIfc_intr_status;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_portalIfc_intr_status()
{
  DEF_CAN_FIRE_portalIfc_intr_status = (tUInt8)1u;
  PORT_RDY_portalIfc_intr_status = DEF_CAN_FIRE_portalIfc_intr_status;
  return PORT_RDY_portalIfc_intr_status;
}

tUInt32 MOD_mkMyDutRequestInput::METH_portalIfc_intr_channel()
{
  PORT_portalIfc_intr_channel = 4294967295u;
  return PORT_portalIfc_intr_channel;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_portalIfc_intr_channel()
{
  DEF_CAN_FIRE_portalIfc_intr_channel = (tUInt8)1u;
  PORT_RDY_portalIfc_intr_channel = DEF_CAN_FIRE_portalIfc_intr_channel;
  return PORT_RDY_portalIfc_intr_channel;
}

void MOD_mkMyDutRequestInput::METH_portalIfc_requests_0_enq(tUInt32 ARG_portalIfc_requests_0_enq_v)
{
  PORT_EN_portalIfc_requests_0_enq = (tUInt8)1u;
  DEF_WILL_FIRE_portalIfc_requests_0_enq = (tUInt8)1u;
  PORT_portalIfc_requests_0_enq_v = ARG_portalIfc_requests_0_enq_v;
  INST_readDRAM_requestAdapter_fbnbuff.METH_write(ARG_portalIfc_requests_0_enq_v);
  INST_readDRAM_requestAdapter_fifo.METH_enq(ARG_portalIfc_requests_0_enq_v);
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_portalIfc_requests_0_enq()
{
  DEF_readDRAM_requestAdapter_fifo_notFull____d6 = INST_readDRAM_requestAdapter_fifo.METH_notFull();
  DEF_CAN_FIRE_portalIfc_requests_0_enq = DEF_readDRAM_requestAdapter_fifo_notFull____d6 && INST_readDRAM_requestAdapter_fifo.METH_i_notFull();
  PORT_RDY_portalIfc_requests_0_enq = DEF_CAN_FIRE_portalIfc_requests_0_enq;
  return PORT_RDY_portalIfc_requests_0_enq;
}

tUInt8 MOD_mkMyDutRequestInput::METH_portalIfc_requests_0_notFull()
{
  DEF_readDRAM_requestAdapter_fifo_notFull____d6 = INST_readDRAM_requestAdapter_fifo.METH_notFull();
  PORT_portalIfc_requests_0_notFull = DEF_readDRAM_requestAdapter_fifo_notFull____d6;
  return PORT_portalIfc_requests_0_notFull;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_portalIfc_requests_0_notFull()
{
  DEF_CAN_FIRE_portalIfc_requests_0_notFull = (tUInt8)1u;
  PORT_RDY_portalIfc_requests_0_notFull = DEF_CAN_FIRE_portalIfc_requests_0_notFull;
  return PORT_RDY_portalIfc_requests_0_notFull;
}

void MOD_mkMyDutRequestInput::METH_portalIfc_requests_1_enq(tUInt32 ARG_portalIfc_requests_1_enq_v)
{
  tUInt8 DEF_x__h1062;
  tUInt8 DEF_IF_loadDRAM_requestAdapter_count_1_EQ_16_2_THE_ETC___d14;
  PORT_EN_portalIfc_requests_1_enq = (tUInt8)1u;
  DEF_WILL_FIRE_portalIfc_requests_1_enq = (tUInt8)1u;
  PORT_portalIfc_requests_1_enq_v = ARG_portalIfc_requests_1_enq_v;
  DEF__read__h210 = INST_loadDRAM_requestAdapter_fbnbuff.METH_read();
  DEF__read__h246 = INST_loadDRAM_requestAdapter_count.METH_read();
  wop_primExtractWide(512u,
		      544u,
		      DEF__read__h210,
		      32u,
		      511u,
		      32u,
		      0u,
		      DEF__read_BITS_511_TO_0___h1052);
  DEF_loadDRAM_requestAdapter_count_1_EQ_16___d12 = DEF__read__h246 == (tUInt8)16u;
  DEF_x__h1062 = (tUInt8)31u & (DEF__read__h246 + (tUInt8)1u);
  DEF_IF_loadDRAM_requestAdapter_count_1_EQ_16_2_THE_ETC___d14 = DEF_loadDRAM_requestAdapter_count_1_EQ_16___d12 ? (tUInt8)0u : DEF_x__h1062;
  DEF_newbuff__h1028.set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(15u),
				    16u).set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(14u),
							15u).set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(13u),
									    14u).set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(12u),
												13u).set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(11u),
														    12u).set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(10u),
																	11u).set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(9u),
																			    10u).set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(8u),
																						9u).set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(7u),
																								   8u).set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(6u),
																										      7u).set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(5u),
																													 6u).set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(4u),
																															    5u).set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(3u),
																																	       4u).set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(2u),
																																				  3u).set_whole_word(DEF__read_BITS_511_TO_0___h1052.get_whole_word(1u),
																																						     2u).build_concat((((tUInt64)(DEF__read_BITS_511_TO_0___h1052.get_whole_word(0u))) << 32u) | (tUInt64)(ARG_portalIfc_requests_1_enq_v),
																																								      0u,
																																								      64u);
  INST_loadDRAM_requestAdapter_fbnbuff.METH_write(DEF_newbuff__h1028);
  INST_loadDRAM_requestAdapter_count.METH_write(DEF_IF_loadDRAM_requestAdapter_count_1_EQ_16_2_THE_ETC___d14);
  if (DEF_loadDRAM_requestAdapter_count_1_EQ_16___d12)
    INST_loadDRAM_requestAdapter_fifo.METH_enq(DEF_newbuff__h1028);
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_portalIfc_requests_1_enq()
{
  DEF__read__h246 = INST_loadDRAM_requestAdapter_count.METH_read();
  DEF_loadDRAM_requestAdapter_fifo_notFull____d16 = INST_loadDRAM_requestAdapter_fifo.METH_notFull();
  DEF_loadDRAM_requestAdapter_count_1_EQ_16___d12 = DEF__read__h246 == (tUInt8)16u;
  DEF_CAN_FIRE_portalIfc_requests_1_enq = (DEF__read__h246 < (tUInt8)16u || DEF_loadDRAM_requestAdapter_fifo_notFull____d16) && (!DEF_loadDRAM_requestAdapter_count_1_EQ_16___d12 || INST_loadDRAM_requestAdapter_fifo.METH_i_notFull());
  PORT_RDY_portalIfc_requests_1_enq = DEF_CAN_FIRE_portalIfc_requests_1_enq;
  return PORT_RDY_portalIfc_requests_1_enq;
}

tUInt8 MOD_mkMyDutRequestInput::METH_portalIfc_requests_1_notFull()
{
  DEF_loadDRAM_requestAdapter_fifo_notFull____d16 = INST_loadDRAM_requestAdapter_fifo.METH_notFull();
  PORT_portalIfc_requests_1_notFull = DEF_loadDRAM_requestAdapter_fifo_notFull____d16;
  return PORT_portalIfc_requests_1_notFull;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_portalIfc_requests_1_notFull()
{
  DEF_CAN_FIRE_portalIfc_requests_1_notFull = (tUInt8)1u;
  PORT_RDY_portalIfc_requests_1_notFull = DEF_CAN_FIRE_portalIfc_requests_1_notFull;
  return PORT_RDY_portalIfc_requests_1_notFull;
}

void MOD_mkMyDutRequestInput::METH_portalIfc_requests_2_enq(tUInt32 ARG_portalIfc_requests_2_enq_v)
{
  tUInt32 DEF_x__h1191;
  PORT_EN_portalIfc_requests_2_enq = (tUInt8)1u;
  DEF_WILL_FIRE_portalIfc_requests_2_enq = (tUInt8)1u;
  PORT_portalIfc_requests_2_enq_v = ARG_portalIfc_requests_2_enq_v;
  DEF_x__h1191 = (tUInt32)(16777215u & ARG_portalIfc_requests_2_enq_v);
  INST_requestPoints_requestAdapter_fbnbuff.METH_write(ARG_portalIfc_requests_2_enq_v);
  INST_requestPoints_requestAdapter_fifo.METH_enq(DEF_x__h1191);
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_portalIfc_requests_2_enq()
{
  DEF_requestPoints_requestAdapter_fifo_notFull____d22 = INST_requestPoints_requestAdapter_fifo.METH_notFull();
  DEF_CAN_FIRE_portalIfc_requests_2_enq = DEF_requestPoints_requestAdapter_fifo_notFull____d22 && INST_requestPoints_requestAdapter_fifo.METH_i_notFull();
  PORT_RDY_portalIfc_requests_2_enq = DEF_CAN_FIRE_portalIfc_requests_2_enq;
  return PORT_RDY_portalIfc_requests_2_enq;
}

tUInt8 MOD_mkMyDutRequestInput::METH_portalIfc_requests_2_notFull()
{
  DEF_requestPoints_requestAdapter_fifo_notFull____d22 = INST_requestPoints_requestAdapter_fifo.METH_notFull();
  PORT_portalIfc_requests_2_notFull = DEF_requestPoints_requestAdapter_fifo_notFull____d22;
  return PORT_portalIfc_requests_2_notFull;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_portalIfc_requests_2_notFull()
{
  DEF_CAN_FIRE_portalIfc_requests_2_notFull = (tUInt8)1u;
  PORT_RDY_portalIfc_requests_2_notFull = DEF_CAN_FIRE_portalIfc_requests_2_notFull;
  return PORT_RDY_portalIfc_requests_2_notFull;
}

void MOD_mkMyDutRequestInput::METH_portalIfc_requests_3_enq(tUInt32 ARG_portalIfc_requests_3_enq_v)
{
  PORT_EN_portalIfc_requests_3_enq = (tUInt8)1u;
  DEF_WILL_FIRE_portalIfc_requests_3_enq = (tUInt8)1u;
  PORT_portalIfc_requests_3_enq_v = ARG_portalIfc_requests_3_enq_v;
  INST_reset_dut_requestAdapter_fbnbuff.METH_write(ARG_portalIfc_requests_3_enq_v);
  INST_reset_dut_requestAdapter_fifo.METH_enq(ARG_portalIfc_requests_3_enq_v);
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_portalIfc_requests_3_enq()
{
  DEF_reset_dut_requestAdapter_fifo_notFull____d24 = INST_reset_dut_requestAdapter_fifo.METH_notFull();
  DEF_CAN_FIRE_portalIfc_requests_3_enq = DEF_reset_dut_requestAdapter_fifo_notFull____d24 && INST_reset_dut_requestAdapter_fifo.METH_i_notFull();
  PORT_RDY_portalIfc_requests_3_enq = DEF_CAN_FIRE_portalIfc_requests_3_enq;
  return PORT_RDY_portalIfc_requests_3_enq;
}

tUInt8 MOD_mkMyDutRequestInput::METH_portalIfc_requests_3_notFull()
{
  DEF_reset_dut_requestAdapter_fifo_notFull____d24 = INST_reset_dut_requestAdapter_fifo.METH_notFull();
  PORT_portalIfc_requests_3_notFull = DEF_reset_dut_requestAdapter_fifo_notFull____d24;
  return PORT_portalIfc_requests_3_notFull;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_portalIfc_requests_3_notFull()
{
  DEF_CAN_FIRE_portalIfc_requests_3_notFull = (tUInt8)1u;
  PORT_RDY_portalIfc_requests_3_notFull = DEF_CAN_FIRE_portalIfc_requests_3_notFull;
  return PORT_RDY_portalIfc_requests_3_notFull;
}

tUInt32 MOD_mkMyDutRequestInput::METH_pipes_readDRAM_PipeOut_first()
{
  PORT_pipes_readDRAM_PipeOut_first = INST_readDRAM_requestAdapter_fifo.METH_first();
  return PORT_pipes_readDRAM_PipeOut_first;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_pipes_readDRAM_PipeOut_first()
{
  DEF_readDRAM_requestAdapter_fifo_i_notEmpty____d26 = INST_readDRAM_requestAdapter_fifo.METH_i_notEmpty();
  DEF_CAN_FIRE_pipes_readDRAM_PipeOut_first = DEF_readDRAM_requestAdapter_fifo_i_notEmpty____d26;
  PORT_RDY_pipes_readDRAM_PipeOut_first = DEF_CAN_FIRE_pipes_readDRAM_PipeOut_first;
  return PORT_RDY_pipes_readDRAM_PipeOut_first;
}

void MOD_mkMyDutRequestInput::METH_pipes_readDRAM_PipeOut_deq()
{
  PORT_EN_pipes_readDRAM_PipeOut_deq = (tUInt8)1u;
  DEF_WILL_FIRE_pipes_readDRAM_PipeOut_deq = (tUInt8)1u;
  INST_readDRAM_requestAdapter_fifo.METH_deq();
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_pipes_readDRAM_PipeOut_deq()
{
  DEF_readDRAM_requestAdapter_fifo_i_notEmpty____d26 = INST_readDRAM_requestAdapter_fifo.METH_i_notEmpty();
  DEF_CAN_FIRE_pipes_readDRAM_PipeOut_deq = DEF_readDRAM_requestAdapter_fifo_i_notEmpty____d26;
  PORT_RDY_pipes_readDRAM_PipeOut_deq = DEF_CAN_FIRE_pipes_readDRAM_PipeOut_deq;
  return PORT_RDY_pipes_readDRAM_PipeOut_deq;
}

tUInt8 MOD_mkMyDutRequestInput::METH_pipes_readDRAM_PipeOut_notEmpty()
{
  PORT_pipes_readDRAM_PipeOut_notEmpty = INST_readDRAM_requestAdapter_fifo.METH_notEmpty();
  return PORT_pipes_readDRAM_PipeOut_notEmpty;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_pipes_readDRAM_PipeOut_notEmpty()
{
  DEF_CAN_FIRE_pipes_readDRAM_PipeOut_notEmpty = (tUInt8)1u;
  PORT_RDY_pipes_readDRAM_PipeOut_notEmpty = DEF_CAN_FIRE_pipes_readDRAM_PipeOut_notEmpty;
  return PORT_RDY_pipes_readDRAM_PipeOut_notEmpty;
}

tUWide MOD_mkMyDutRequestInput::METH_pipes_loadDRAM_PipeOut_first()
{
  PORT_pipes_loadDRAM_PipeOut_first = INST_loadDRAM_requestAdapter_fifo.METH_first();
  return PORT_pipes_loadDRAM_PipeOut_first;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_pipes_loadDRAM_PipeOut_first()
{
  DEF_loadDRAM_requestAdapter_fifo_i_notEmpty____d27 = INST_loadDRAM_requestAdapter_fifo.METH_i_notEmpty();
  DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_first = DEF_loadDRAM_requestAdapter_fifo_i_notEmpty____d27;
  PORT_RDY_pipes_loadDRAM_PipeOut_first = DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_first;
  return PORT_RDY_pipes_loadDRAM_PipeOut_first;
}

void MOD_mkMyDutRequestInput::METH_pipes_loadDRAM_PipeOut_deq()
{
  PORT_EN_pipes_loadDRAM_PipeOut_deq = (tUInt8)1u;
  DEF_WILL_FIRE_pipes_loadDRAM_PipeOut_deq = (tUInt8)1u;
  INST_loadDRAM_requestAdapter_fifo.METH_deq();
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_pipes_loadDRAM_PipeOut_deq()
{
  DEF_loadDRAM_requestAdapter_fifo_i_notEmpty____d27 = INST_loadDRAM_requestAdapter_fifo.METH_i_notEmpty();
  DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_deq = DEF_loadDRAM_requestAdapter_fifo_i_notEmpty____d27;
  PORT_RDY_pipes_loadDRAM_PipeOut_deq = DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_deq;
  return PORT_RDY_pipes_loadDRAM_PipeOut_deq;
}

tUInt8 MOD_mkMyDutRequestInput::METH_pipes_loadDRAM_PipeOut_notEmpty()
{
  PORT_pipes_loadDRAM_PipeOut_notEmpty = INST_loadDRAM_requestAdapter_fifo.METH_notEmpty();
  return PORT_pipes_loadDRAM_PipeOut_notEmpty;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_pipes_loadDRAM_PipeOut_notEmpty()
{
  DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_notEmpty = (tUInt8)1u;
  PORT_RDY_pipes_loadDRAM_PipeOut_notEmpty = DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_notEmpty;
  return PORT_RDY_pipes_loadDRAM_PipeOut_notEmpty;
}

tUInt32 MOD_mkMyDutRequestInput::METH_pipes_requestPoints_PipeOut_first()
{
  PORT_pipes_requestPoints_PipeOut_first = INST_requestPoints_requestAdapter_fifo.METH_first();
  return PORT_pipes_requestPoints_PipeOut_first;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_pipes_requestPoints_PipeOut_first()
{
  DEF_requestPoints_requestAdapter_fifo_i_notEmpty____d28 = INST_requestPoints_requestAdapter_fifo.METH_i_notEmpty();
  DEF_CAN_FIRE_pipes_requestPoints_PipeOut_first = DEF_requestPoints_requestAdapter_fifo_i_notEmpty____d28;
  PORT_RDY_pipes_requestPoints_PipeOut_first = DEF_CAN_FIRE_pipes_requestPoints_PipeOut_first;
  return PORT_RDY_pipes_requestPoints_PipeOut_first;
}

void MOD_mkMyDutRequestInput::METH_pipes_requestPoints_PipeOut_deq()
{
  PORT_EN_pipes_requestPoints_PipeOut_deq = (tUInt8)1u;
  DEF_WILL_FIRE_pipes_requestPoints_PipeOut_deq = (tUInt8)1u;
  INST_requestPoints_requestAdapter_fifo.METH_deq();
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_pipes_requestPoints_PipeOut_deq()
{
  DEF_requestPoints_requestAdapter_fifo_i_notEmpty____d28 = INST_requestPoints_requestAdapter_fifo.METH_i_notEmpty();
  DEF_CAN_FIRE_pipes_requestPoints_PipeOut_deq = DEF_requestPoints_requestAdapter_fifo_i_notEmpty____d28;
  PORT_RDY_pipes_requestPoints_PipeOut_deq = DEF_CAN_FIRE_pipes_requestPoints_PipeOut_deq;
  return PORT_RDY_pipes_requestPoints_PipeOut_deq;
}

tUInt8 MOD_mkMyDutRequestInput::METH_pipes_requestPoints_PipeOut_notEmpty()
{
  PORT_pipes_requestPoints_PipeOut_notEmpty = INST_requestPoints_requestAdapter_fifo.METH_notEmpty();
  return PORT_pipes_requestPoints_PipeOut_notEmpty;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_pipes_requestPoints_PipeOut_notEmpty()
{
  DEF_CAN_FIRE_pipes_requestPoints_PipeOut_notEmpty = (tUInt8)1u;
  PORT_RDY_pipes_requestPoints_PipeOut_notEmpty = DEF_CAN_FIRE_pipes_requestPoints_PipeOut_notEmpty;
  return PORT_RDY_pipes_requestPoints_PipeOut_notEmpty;
}

tUInt32 MOD_mkMyDutRequestInput::METH_pipes_reset_dut_PipeOut_first()
{
  PORT_pipes_reset_dut_PipeOut_first = INST_reset_dut_requestAdapter_fifo.METH_first();
  return PORT_pipes_reset_dut_PipeOut_first;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_pipes_reset_dut_PipeOut_first()
{
  DEF_reset_dut_requestAdapter_fifo_i_notEmpty____d29 = INST_reset_dut_requestAdapter_fifo.METH_i_notEmpty();
  DEF_CAN_FIRE_pipes_reset_dut_PipeOut_first = DEF_reset_dut_requestAdapter_fifo_i_notEmpty____d29;
  PORT_RDY_pipes_reset_dut_PipeOut_first = DEF_CAN_FIRE_pipes_reset_dut_PipeOut_first;
  return PORT_RDY_pipes_reset_dut_PipeOut_first;
}

void MOD_mkMyDutRequestInput::METH_pipes_reset_dut_PipeOut_deq()
{
  PORT_EN_pipes_reset_dut_PipeOut_deq = (tUInt8)1u;
  DEF_WILL_FIRE_pipes_reset_dut_PipeOut_deq = (tUInt8)1u;
  INST_reset_dut_requestAdapter_fifo.METH_deq();
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_pipes_reset_dut_PipeOut_deq()
{
  DEF_reset_dut_requestAdapter_fifo_i_notEmpty____d29 = INST_reset_dut_requestAdapter_fifo.METH_i_notEmpty();
  DEF_CAN_FIRE_pipes_reset_dut_PipeOut_deq = DEF_reset_dut_requestAdapter_fifo_i_notEmpty____d29;
  PORT_RDY_pipes_reset_dut_PipeOut_deq = DEF_CAN_FIRE_pipes_reset_dut_PipeOut_deq;
  return PORT_RDY_pipes_reset_dut_PipeOut_deq;
}

tUInt8 MOD_mkMyDutRequestInput::METH_pipes_reset_dut_PipeOut_notEmpty()
{
  PORT_pipes_reset_dut_PipeOut_notEmpty = INST_reset_dut_requestAdapter_fifo.METH_notEmpty();
  return PORT_pipes_reset_dut_PipeOut_notEmpty;
}

tUInt8 MOD_mkMyDutRequestInput::METH_RDY_pipes_reset_dut_PipeOut_notEmpty()
{
  DEF_CAN_FIRE_pipes_reset_dut_PipeOut_notEmpty = (tUInt8)1u;
  PORT_RDY_pipes_reset_dut_PipeOut_notEmpty = DEF_CAN_FIRE_pipes_reset_dut_PipeOut_notEmpty;
  return PORT_RDY_pipes_reset_dut_PipeOut_notEmpty;
}


/* Reset routines */

void MOD_mkMyDutRequestInput::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_reset_dut_requestAdapter_fifo.reset_RST(ARG_rst_in);
  INST_reset_dut_requestAdapter_fbnbuff.reset_RST(ARG_rst_in);
  INST_requestPoints_requestAdapter_fifo.reset_RST(ARG_rst_in);
  INST_requestPoints_requestAdapter_fbnbuff.reset_RST(ARG_rst_in);
  INST_readDRAM_requestAdapter_fifo.reset_RST(ARG_rst_in);
  INST_readDRAM_requestAdapter_fbnbuff.reset_RST(ARG_rst_in);
  INST_loadDRAM_requestAdapter_fifo.reset_RST(ARG_rst_in);
  INST_loadDRAM_requestAdapter_fbnbuff.reset_RST(ARG_rst_in);
  INST_loadDRAM_requestAdapter_count.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkMyDutRequestInput::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkMyDutRequestInput::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_loadDRAM_requestAdapter_count.dump_state(indent + 2u);
  INST_loadDRAM_requestAdapter_fbnbuff.dump_state(indent + 2u);
  INST_loadDRAM_requestAdapter_fifo.dump_state(indent + 2u);
  INST_readDRAM_requestAdapter_fbnbuff.dump_state(indent + 2u);
  INST_readDRAM_requestAdapter_fifo.dump_state(indent + 2u);
  INST_requestPoints_requestAdapter_fbnbuff.dump_state(indent + 2u);
  INST_requestPoints_requestAdapter_fifo.dump_state(indent + 2u);
  INST_reset_dut_requestAdapter_fbnbuff.dump_state(indent + 2u);
  INST_reset_dut_requestAdapter_fifo.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkMyDutRequestInput::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 105u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_pipes_loadDRAM_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_pipes_loadDRAM_PipeOut_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_pipes_loadDRAM_PipeOut_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_pipes_readDRAM_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_pipes_readDRAM_PipeOut_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_pipes_readDRAM_PipeOut_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_pipes_requestPoints_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_pipes_requestPoints_PipeOut_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_pipes_requestPoints_PipeOut_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_pipes_reset_dut_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_pipes_reset_dut_PipeOut_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_pipes_reset_dut_PipeOut_notEmpty", 1u);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_intr_channel", 1u);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_intr_status", 1u);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_messageSize_size", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_requests_0_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_requests_0_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_requests_1_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_requests_1_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_requests_2_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_requests_2_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_requests_3_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_requests_3_notFull", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_pipes_loadDRAM_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_pipes_readDRAM_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_pipes_requestPoints_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_pipes_reset_dut_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_portalIfc_requests_0_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_portalIfc_requests_1_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_portalIfc_requests_2_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_portalIfc_requests_3_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_read_BITS_511_TO_0___h1052", 512u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_read__h210", 544u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_read__h246", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "loadDRAM_requestAdapter_count_1_EQ_16___d12", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "loadDRAM_requestAdapter_fifo_i_notEmpty____d27", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "loadDRAM_requestAdapter_fifo_notFull____d16", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "newbuff__h1028", 544u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "readDRAM_requestAdapter_fifo_i_notEmpty____d26", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "readDRAM_requestAdapter_fifo_notFull____d6", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "requestPoints_requestAdapter_fifo_i_notEmpty____d28", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "requestPoints_requestAdapter_fifo_notFull____d22", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "reset_dut_requestAdapter_fifo_i_notEmpty____d29", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "reset_dut_requestAdapter_fifo_notFull____d24", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_pipes_loadDRAM_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_pipes_readDRAM_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_pipes_requestPoints_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_pipes_reset_dut_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_portalIfc_requests_0_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_portalIfc_requests_1_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_portalIfc_requests_2_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_portalIfc_requests_3_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_pipes_loadDRAM_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_pipes_loadDRAM_PipeOut_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_pipes_loadDRAM_PipeOut_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_pipes_readDRAM_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_pipes_readDRAM_PipeOut_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_pipes_readDRAM_PipeOut_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_pipes_requestPoints_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_pipes_requestPoints_PipeOut_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_pipes_requestPoints_PipeOut_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_pipes_reset_dut_PipeOut_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_pipes_reset_dut_PipeOut_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_pipes_reset_dut_PipeOut_notEmpty", 1u);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_intr_channel", 1u);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_intr_status", 1u);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_messageSize_size", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_requests_0_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_requests_0_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_requests_1_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_requests_1_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_requests_2_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_requests_2_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_requests_3_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_requests_3_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "pipes_loadDRAM_PipeOut_first", 544u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "pipes_loadDRAM_PipeOut_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "pipes_readDRAM_PipeOut_first", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "pipes_readDRAM_PipeOut_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "pipes_requestPoints_PipeOut_first", 24u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "pipes_requestPoints_PipeOut_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "pipes_reset_dut_PipeOut_first", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "pipes_reset_dut_PipeOut_notEmpty", 1u);
  vcd_write_def(sim_hdl, num++, "portalIfc_intr_channel", 32u);
  vcd_write_def(sim_hdl, num++, "portalIfc_intr_status", 1u);
  vcd_write_def(sim_hdl, num++, "portalIfc_messageSize_size", 16u);
  vcd_write_def(sim_hdl, num++, "portalIfc_messageSize_size_methodNumber", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_requests_0_enq_v", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_requests_0_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_requests_1_enq_v", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_requests_1_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_requests_2_enq_v", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_requests_2_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_requests_3_enq_v", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_requests_3_notFull", 1u);
  num = INST_loadDRAM_requestAdapter_count.dump_VCD_defs(num);
  num = INST_loadDRAM_requestAdapter_fbnbuff.dump_VCD_defs(num);
  num = INST_loadDRAM_requestAdapter_fifo.dump_VCD_defs(num);
  num = INST_readDRAM_requestAdapter_fbnbuff.dump_VCD_defs(num);
  num = INST_readDRAM_requestAdapter_fifo.dump_VCD_defs(num);
  num = INST_requestPoints_requestAdapter_fbnbuff.dump_VCD_defs(num);
  num = INST_requestPoints_requestAdapter_fifo.dump_VCD_defs(num);
  num = INST_reset_dut_requestAdapter_fbnbuff.dump_VCD_defs(num);
  num = INST_reset_dut_requestAdapter_fifo.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkMyDutRequestInput::dump_VCD(tVCDDumpType dt,
				       unsigned int levels,
				       MOD_mkMyDutRequestInput &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkMyDutRequestInput::vcd_defs(tVCDDumpType dt, MOD_mkMyDutRequestInput &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 512u);
    vcd_write_x(sim_hdl, num++, 544u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 544u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 544u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 24u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_deq) != DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_deq, 1u);
	backing.DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_deq = DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_deq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_first) != DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_first)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_first, 1u);
	backing.DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_first = DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_first;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_notEmpty) != DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_notEmpty)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_notEmpty, 1u);
	backing.DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_notEmpty = DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_notEmpty;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_pipes_readDRAM_PipeOut_deq) != DEF_CAN_FIRE_pipes_readDRAM_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_pipes_readDRAM_PipeOut_deq, 1u);
	backing.DEF_CAN_FIRE_pipes_readDRAM_PipeOut_deq = DEF_CAN_FIRE_pipes_readDRAM_PipeOut_deq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_pipes_readDRAM_PipeOut_first) != DEF_CAN_FIRE_pipes_readDRAM_PipeOut_first)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_pipes_readDRAM_PipeOut_first, 1u);
	backing.DEF_CAN_FIRE_pipes_readDRAM_PipeOut_first = DEF_CAN_FIRE_pipes_readDRAM_PipeOut_first;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_pipes_readDRAM_PipeOut_notEmpty) != DEF_CAN_FIRE_pipes_readDRAM_PipeOut_notEmpty)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_pipes_readDRAM_PipeOut_notEmpty, 1u);
	backing.DEF_CAN_FIRE_pipes_readDRAM_PipeOut_notEmpty = DEF_CAN_FIRE_pipes_readDRAM_PipeOut_notEmpty;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_pipes_requestPoints_PipeOut_deq) != DEF_CAN_FIRE_pipes_requestPoints_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_pipes_requestPoints_PipeOut_deq, 1u);
	backing.DEF_CAN_FIRE_pipes_requestPoints_PipeOut_deq = DEF_CAN_FIRE_pipes_requestPoints_PipeOut_deq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_pipes_requestPoints_PipeOut_first) != DEF_CAN_FIRE_pipes_requestPoints_PipeOut_first)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_pipes_requestPoints_PipeOut_first, 1u);
	backing.DEF_CAN_FIRE_pipes_requestPoints_PipeOut_first = DEF_CAN_FIRE_pipes_requestPoints_PipeOut_first;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_pipes_requestPoints_PipeOut_notEmpty) != DEF_CAN_FIRE_pipes_requestPoints_PipeOut_notEmpty)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_pipes_requestPoints_PipeOut_notEmpty, 1u);
	backing.DEF_CAN_FIRE_pipes_requestPoints_PipeOut_notEmpty = DEF_CAN_FIRE_pipes_requestPoints_PipeOut_notEmpty;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_pipes_reset_dut_PipeOut_deq) != DEF_CAN_FIRE_pipes_reset_dut_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_pipes_reset_dut_PipeOut_deq, 1u);
	backing.DEF_CAN_FIRE_pipes_reset_dut_PipeOut_deq = DEF_CAN_FIRE_pipes_reset_dut_PipeOut_deq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_pipes_reset_dut_PipeOut_first) != DEF_CAN_FIRE_pipes_reset_dut_PipeOut_first)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_pipes_reset_dut_PipeOut_first, 1u);
	backing.DEF_CAN_FIRE_pipes_reset_dut_PipeOut_first = DEF_CAN_FIRE_pipes_reset_dut_PipeOut_first;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_pipes_reset_dut_PipeOut_notEmpty) != DEF_CAN_FIRE_pipes_reset_dut_PipeOut_notEmpty)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_pipes_reset_dut_PipeOut_notEmpty, 1u);
	backing.DEF_CAN_FIRE_pipes_reset_dut_PipeOut_notEmpty = DEF_CAN_FIRE_pipes_reset_dut_PipeOut_notEmpty;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_intr_channel) != DEF_CAN_FIRE_portalIfc_intr_channel)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_intr_channel, 1u);
	backing.DEF_CAN_FIRE_portalIfc_intr_channel = DEF_CAN_FIRE_portalIfc_intr_channel;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_intr_status) != DEF_CAN_FIRE_portalIfc_intr_status)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_intr_status, 1u);
	backing.DEF_CAN_FIRE_portalIfc_intr_status = DEF_CAN_FIRE_portalIfc_intr_status;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_messageSize_size) != DEF_CAN_FIRE_portalIfc_messageSize_size)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_messageSize_size, 1u);
	backing.DEF_CAN_FIRE_portalIfc_messageSize_size = DEF_CAN_FIRE_portalIfc_messageSize_size;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_requests_0_enq) != DEF_CAN_FIRE_portalIfc_requests_0_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_requests_0_enq, 1u);
	backing.DEF_CAN_FIRE_portalIfc_requests_0_enq = DEF_CAN_FIRE_portalIfc_requests_0_enq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_requests_0_notFull) != DEF_CAN_FIRE_portalIfc_requests_0_notFull)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_requests_0_notFull, 1u);
	backing.DEF_CAN_FIRE_portalIfc_requests_0_notFull = DEF_CAN_FIRE_portalIfc_requests_0_notFull;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_requests_1_enq) != DEF_CAN_FIRE_portalIfc_requests_1_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_requests_1_enq, 1u);
	backing.DEF_CAN_FIRE_portalIfc_requests_1_enq = DEF_CAN_FIRE_portalIfc_requests_1_enq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_requests_1_notFull) != DEF_CAN_FIRE_portalIfc_requests_1_notFull)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_requests_1_notFull, 1u);
	backing.DEF_CAN_FIRE_portalIfc_requests_1_notFull = DEF_CAN_FIRE_portalIfc_requests_1_notFull;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_requests_2_enq) != DEF_CAN_FIRE_portalIfc_requests_2_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_requests_2_enq, 1u);
	backing.DEF_CAN_FIRE_portalIfc_requests_2_enq = DEF_CAN_FIRE_portalIfc_requests_2_enq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_requests_2_notFull) != DEF_CAN_FIRE_portalIfc_requests_2_notFull)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_requests_2_notFull, 1u);
	backing.DEF_CAN_FIRE_portalIfc_requests_2_notFull = DEF_CAN_FIRE_portalIfc_requests_2_notFull;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_requests_3_enq) != DEF_CAN_FIRE_portalIfc_requests_3_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_requests_3_enq, 1u);
	backing.DEF_CAN_FIRE_portalIfc_requests_3_enq = DEF_CAN_FIRE_portalIfc_requests_3_enq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_requests_3_notFull) != DEF_CAN_FIRE_portalIfc_requests_3_notFull)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_requests_3_notFull, 1u);
	backing.DEF_CAN_FIRE_portalIfc_requests_3_notFull = DEF_CAN_FIRE_portalIfc_requests_3_notFull;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_pipes_loadDRAM_PipeOut_deq) != DEF_WILL_FIRE_pipes_loadDRAM_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_pipes_loadDRAM_PipeOut_deq, 1u);
	backing.DEF_WILL_FIRE_pipes_loadDRAM_PipeOut_deq = DEF_WILL_FIRE_pipes_loadDRAM_PipeOut_deq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_pipes_readDRAM_PipeOut_deq) != DEF_WILL_FIRE_pipes_readDRAM_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_pipes_readDRAM_PipeOut_deq, 1u);
	backing.DEF_WILL_FIRE_pipes_readDRAM_PipeOut_deq = DEF_WILL_FIRE_pipes_readDRAM_PipeOut_deq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_pipes_requestPoints_PipeOut_deq) != DEF_WILL_FIRE_pipes_requestPoints_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_pipes_requestPoints_PipeOut_deq, 1u);
	backing.DEF_WILL_FIRE_pipes_requestPoints_PipeOut_deq = DEF_WILL_FIRE_pipes_requestPoints_PipeOut_deq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_pipes_reset_dut_PipeOut_deq) != DEF_WILL_FIRE_pipes_reset_dut_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_pipes_reset_dut_PipeOut_deq, 1u);
	backing.DEF_WILL_FIRE_pipes_reset_dut_PipeOut_deq = DEF_WILL_FIRE_pipes_reset_dut_PipeOut_deq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_portalIfc_requests_0_enq) != DEF_WILL_FIRE_portalIfc_requests_0_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_portalIfc_requests_0_enq, 1u);
	backing.DEF_WILL_FIRE_portalIfc_requests_0_enq = DEF_WILL_FIRE_portalIfc_requests_0_enq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_portalIfc_requests_1_enq) != DEF_WILL_FIRE_portalIfc_requests_1_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_portalIfc_requests_1_enq, 1u);
	backing.DEF_WILL_FIRE_portalIfc_requests_1_enq = DEF_WILL_FIRE_portalIfc_requests_1_enq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_portalIfc_requests_2_enq) != DEF_WILL_FIRE_portalIfc_requests_2_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_portalIfc_requests_2_enq, 1u);
	backing.DEF_WILL_FIRE_portalIfc_requests_2_enq = DEF_WILL_FIRE_portalIfc_requests_2_enq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_portalIfc_requests_3_enq) != DEF_WILL_FIRE_portalIfc_requests_3_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_portalIfc_requests_3_enq, 1u);
	backing.DEF_WILL_FIRE_portalIfc_requests_3_enq = DEF_WILL_FIRE_portalIfc_requests_3_enq;
      }
      ++num;
      if ((backing.DEF__read_BITS_511_TO_0___h1052) != DEF__read_BITS_511_TO_0___h1052)
      {
	vcd_write_val(sim_hdl, num, DEF__read_BITS_511_TO_0___h1052, 512u);
	backing.DEF__read_BITS_511_TO_0___h1052 = DEF__read_BITS_511_TO_0___h1052;
      }
      ++num;
      if ((backing.DEF__read__h210) != DEF__read__h210)
      {
	vcd_write_val(sim_hdl, num, DEF__read__h210, 544u);
	backing.DEF__read__h210 = DEF__read__h210;
      }
      ++num;
      if ((backing.DEF__read__h246) != DEF__read__h246)
      {
	vcd_write_val(sim_hdl, num, DEF__read__h246, 5u);
	backing.DEF__read__h246 = DEF__read__h246;
      }
      ++num;
      if ((backing.DEF_loadDRAM_requestAdapter_count_1_EQ_16___d12) != DEF_loadDRAM_requestAdapter_count_1_EQ_16___d12)
      {
	vcd_write_val(sim_hdl, num, DEF_loadDRAM_requestAdapter_count_1_EQ_16___d12, 1u);
	backing.DEF_loadDRAM_requestAdapter_count_1_EQ_16___d12 = DEF_loadDRAM_requestAdapter_count_1_EQ_16___d12;
      }
      ++num;
      if ((backing.DEF_loadDRAM_requestAdapter_fifo_i_notEmpty____d27) != DEF_loadDRAM_requestAdapter_fifo_i_notEmpty____d27)
      {
	vcd_write_val(sim_hdl, num, DEF_loadDRAM_requestAdapter_fifo_i_notEmpty____d27, 1u);
	backing.DEF_loadDRAM_requestAdapter_fifo_i_notEmpty____d27 = DEF_loadDRAM_requestAdapter_fifo_i_notEmpty____d27;
      }
      ++num;
      if ((backing.DEF_loadDRAM_requestAdapter_fifo_notFull____d16) != DEF_loadDRAM_requestAdapter_fifo_notFull____d16)
      {
	vcd_write_val(sim_hdl, num, DEF_loadDRAM_requestAdapter_fifo_notFull____d16, 1u);
	backing.DEF_loadDRAM_requestAdapter_fifo_notFull____d16 = DEF_loadDRAM_requestAdapter_fifo_notFull____d16;
      }
      ++num;
      if ((backing.DEF_newbuff__h1028) != DEF_newbuff__h1028)
      {
	vcd_write_val(sim_hdl, num, DEF_newbuff__h1028, 544u);
	backing.DEF_newbuff__h1028 = DEF_newbuff__h1028;
      }
      ++num;
      if ((backing.DEF_readDRAM_requestAdapter_fifo_i_notEmpty____d26) != DEF_readDRAM_requestAdapter_fifo_i_notEmpty____d26)
      {
	vcd_write_val(sim_hdl, num, DEF_readDRAM_requestAdapter_fifo_i_notEmpty____d26, 1u);
	backing.DEF_readDRAM_requestAdapter_fifo_i_notEmpty____d26 = DEF_readDRAM_requestAdapter_fifo_i_notEmpty____d26;
      }
      ++num;
      if ((backing.DEF_readDRAM_requestAdapter_fifo_notFull____d6) != DEF_readDRAM_requestAdapter_fifo_notFull____d6)
      {
	vcd_write_val(sim_hdl, num, DEF_readDRAM_requestAdapter_fifo_notFull____d6, 1u);
	backing.DEF_readDRAM_requestAdapter_fifo_notFull____d6 = DEF_readDRAM_requestAdapter_fifo_notFull____d6;
      }
      ++num;
      if ((backing.DEF_requestPoints_requestAdapter_fifo_i_notEmpty____d28) != DEF_requestPoints_requestAdapter_fifo_i_notEmpty____d28)
      {
	vcd_write_val(sim_hdl, num, DEF_requestPoints_requestAdapter_fifo_i_notEmpty____d28, 1u);
	backing.DEF_requestPoints_requestAdapter_fifo_i_notEmpty____d28 = DEF_requestPoints_requestAdapter_fifo_i_notEmpty____d28;
      }
      ++num;
      if ((backing.DEF_requestPoints_requestAdapter_fifo_notFull____d22) != DEF_requestPoints_requestAdapter_fifo_notFull____d22)
      {
	vcd_write_val(sim_hdl, num, DEF_requestPoints_requestAdapter_fifo_notFull____d22, 1u);
	backing.DEF_requestPoints_requestAdapter_fifo_notFull____d22 = DEF_requestPoints_requestAdapter_fifo_notFull____d22;
      }
      ++num;
      if ((backing.DEF_reset_dut_requestAdapter_fifo_i_notEmpty____d29) != DEF_reset_dut_requestAdapter_fifo_i_notEmpty____d29)
      {
	vcd_write_val(sim_hdl, num, DEF_reset_dut_requestAdapter_fifo_i_notEmpty____d29, 1u);
	backing.DEF_reset_dut_requestAdapter_fifo_i_notEmpty____d29 = DEF_reset_dut_requestAdapter_fifo_i_notEmpty____d29;
      }
      ++num;
      if ((backing.DEF_reset_dut_requestAdapter_fifo_notFull____d24) != DEF_reset_dut_requestAdapter_fifo_notFull____d24)
      {
	vcd_write_val(sim_hdl, num, DEF_reset_dut_requestAdapter_fifo_notFull____d24, 1u);
	backing.DEF_reset_dut_requestAdapter_fifo_notFull____d24 = DEF_reset_dut_requestAdapter_fifo_notFull____d24;
      }
      ++num;
      if ((backing.PORT_EN_pipes_loadDRAM_PipeOut_deq) != PORT_EN_pipes_loadDRAM_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_pipes_loadDRAM_PipeOut_deq, 1u);
	backing.PORT_EN_pipes_loadDRAM_PipeOut_deq = PORT_EN_pipes_loadDRAM_PipeOut_deq;
      }
      ++num;
      if ((backing.PORT_EN_pipes_readDRAM_PipeOut_deq) != PORT_EN_pipes_readDRAM_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_pipes_readDRAM_PipeOut_deq, 1u);
	backing.PORT_EN_pipes_readDRAM_PipeOut_deq = PORT_EN_pipes_readDRAM_PipeOut_deq;
      }
      ++num;
      if ((backing.PORT_EN_pipes_requestPoints_PipeOut_deq) != PORT_EN_pipes_requestPoints_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_pipes_requestPoints_PipeOut_deq, 1u);
	backing.PORT_EN_pipes_requestPoints_PipeOut_deq = PORT_EN_pipes_requestPoints_PipeOut_deq;
      }
      ++num;
      if ((backing.PORT_EN_pipes_reset_dut_PipeOut_deq) != PORT_EN_pipes_reset_dut_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_pipes_reset_dut_PipeOut_deq, 1u);
	backing.PORT_EN_pipes_reset_dut_PipeOut_deq = PORT_EN_pipes_reset_dut_PipeOut_deq;
      }
      ++num;
      if ((backing.PORT_EN_portalIfc_requests_0_enq) != PORT_EN_portalIfc_requests_0_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_portalIfc_requests_0_enq, 1u);
	backing.PORT_EN_portalIfc_requests_0_enq = PORT_EN_portalIfc_requests_0_enq;
      }
      ++num;
      if ((backing.PORT_EN_portalIfc_requests_1_enq) != PORT_EN_portalIfc_requests_1_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_portalIfc_requests_1_enq, 1u);
	backing.PORT_EN_portalIfc_requests_1_enq = PORT_EN_portalIfc_requests_1_enq;
      }
      ++num;
      if ((backing.PORT_EN_portalIfc_requests_2_enq) != PORT_EN_portalIfc_requests_2_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_portalIfc_requests_2_enq, 1u);
	backing.PORT_EN_portalIfc_requests_2_enq = PORT_EN_portalIfc_requests_2_enq;
      }
      ++num;
      if ((backing.PORT_EN_portalIfc_requests_3_enq) != PORT_EN_portalIfc_requests_3_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_portalIfc_requests_3_enq, 1u);
	backing.PORT_EN_portalIfc_requests_3_enq = PORT_EN_portalIfc_requests_3_enq;
      }
      ++num;
      if ((backing.PORT_RDY_pipes_loadDRAM_PipeOut_deq) != PORT_RDY_pipes_loadDRAM_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_pipes_loadDRAM_PipeOut_deq, 1u);
	backing.PORT_RDY_pipes_loadDRAM_PipeOut_deq = PORT_RDY_pipes_loadDRAM_PipeOut_deq;
      }
      ++num;
      if ((backing.PORT_RDY_pipes_loadDRAM_PipeOut_first) != PORT_RDY_pipes_loadDRAM_PipeOut_first)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_pipes_loadDRAM_PipeOut_first, 1u);
	backing.PORT_RDY_pipes_loadDRAM_PipeOut_first = PORT_RDY_pipes_loadDRAM_PipeOut_first;
      }
      ++num;
      if ((backing.PORT_RDY_pipes_loadDRAM_PipeOut_notEmpty) != PORT_RDY_pipes_loadDRAM_PipeOut_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_pipes_loadDRAM_PipeOut_notEmpty, 1u);
	backing.PORT_RDY_pipes_loadDRAM_PipeOut_notEmpty = PORT_RDY_pipes_loadDRAM_PipeOut_notEmpty;
      }
      ++num;
      if ((backing.PORT_RDY_pipes_readDRAM_PipeOut_deq) != PORT_RDY_pipes_readDRAM_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_pipes_readDRAM_PipeOut_deq, 1u);
	backing.PORT_RDY_pipes_readDRAM_PipeOut_deq = PORT_RDY_pipes_readDRAM_PipeOut_deq;
      }
      ++num;
      if ((backing.PORT_RDY_pipes_readDRAM_PipeOut_first) != PORT_RDY_pipes_readDRAM_PipeOut_first)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_pipes_readDRAM_PipeOut_first, 1u);
	backing.PORT_RDY_pipes_readDRAM_PipeOut_first = PORT_RDY_pipes_readDRAM_PipeOut_first;
      }
      ++num;
      if ((backing.PORT_RDY_pipes_readDRAM_PipeOut_notEmpty) != PORT_RDY_pipes_readDRAM_PipeOut_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_pipes_readDRAM_PipeOut_notEmpty, 1u);
	backing.PORT_RDY_pipes_readDRAM_PipeOut_notEmpty = PORT_RDY_pipes_readDRAM_PipeOut_notEmpty;
      }
      ++num;
      if ((backing.PORT_RDY_pipes_requestPoints_PipeOut_deq) != PORT_RDY_pipes_requestPoints_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_pipes_requestPoints_PipeOut_deq, 1u);
	backing.PORT_RDY_pipes_requestPoints_PipeOut_deq = PORT_RDY_pipes_requestPoints_PipeOut_deq;
      }
      ++num;
      if ((backing.PORT_RDY_pipes_requestPoints_PipeOut_first) != PORT_RDY_pipes_requestPoints_PipeOut_first)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_pipes_requestPoints_PipeOut_first, 1u);
	backing.PORT_RDY_pipes_requestPoints_PipeOut_first = PORT_RDY_pipes_requestPoints_PipeOut_first;
      }
      ++num;
      if ((backing.PORT_RDY_pipes_requestPoints_PipeOut_notEmpty) != PORT_RDY_pipes_requestPoints_PipeOut_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_pipes_requestPoints_PipeOut_notEmpty, 1u);
	backing.PORT_RDY_pipes_requestPoints_PipeOut_notEmpty = PORT_RDY_pipes_requestPoints_PipeOut_notEmpty;
      }
      ++num;
      if ((backing.PORT_RDY_pipes_reset_dut_PipeOut_deq) != PORT_RDY_pipes_reset_dut_PipeOut_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_pipes_reset_dut_PipeOut_deq, 1u);
	backing.PORT_RDY_pipes_reset_dut_PipeOut_deq = PORT_RDY_pipes_reset_dut_PipeOut_deq;
      }
      ++num;
      if ((backing.PORT_RDY_pipes_reset_dut_PipeOut_first) != PORT_RDY_pipes_reset_dut_PipeOut_first)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_pipes_reset_dut_PipeOut_first, 1u);
	backing.PORT_RDY_pipes_reset_dut_PipeOut_first = PORT_RDY_pipes_reset_dut_PipeOut_first;
      }
      ++num;
      if ((backing.PORT_RDY_pipes_reset_dut_PipeOut_notEmpty) != PORT_RDY_pipes_reset_dut_PipeOut_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_pipes_reset_dut_PipeOut_notEmpty, 1u);
	backing.PORT_RDY_pipes_reset_dut_PipeOut_notEmpty = PORT_RDY_pipes_reset_dut_PipeOut_notEmpty;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_intr_channel) != PORT_RDY_portalIfc_intr_channel)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_intr_channel, 1u);
	backing.PORT_RDY_portalIfc_intr_channel = PORT_RDY_portalIfc_intr_channel;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_intr_status) != PORT_RDY_portalIfc_intr_status)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_intr_status, 1u);
	backing.PORT_RDY_portalIfc_intr_status = PORT_RDY_portalIfc_intr_status;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_messageSize_size) != PORT_RDY_portalIfc_messageSize_size)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_messageSize_size, 1u);
	backing.PORT_RDY_portalIfc_messageSize_size = PORT_RDY_portalIfc_messageSize_size;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_requests_0_enq) != PORT_RDY_portalIfc_requests_0_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_requests_0_enq, 1u);
	backing.PORT_RDY_portalIfc_requests_0_enq = PORT_RDY_portalIfc_requests_0_enq;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_requests_0_notFull) != PORT_RDY_portalIfc_requests_0_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_requests_0_notFull, 1u);
	backing.PORT_RDY_portalIfc_requests_0_notFull = PORT_RDY_portalIfc_requests_0_notFull;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_requests_1_enq) != PORT_RDY_portalIfc_requests_1_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_requests_1_enq, 1u);
	backing.PORT_RDY_portalIfc_requests_1_enq = PORT_RDY_portalIfc_requests_1_enq;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_requests_1_notFull) != PORT_RDY_portalIfc_requests_1_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_requests_1_notFull, 1u);
	backing.PORT_RDY_portalIfc_requests_1_notFull = PORT_RDY_portalIfc_requests_1_notFull;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_requests_2_enq) != PORT_RDY_portalIfc_requests_2_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_requests_2_enq, 1u);
	backing.PORT_RDY_portalIfc_requests_2_enq = PORT_RDY_portalIfc_requests_2_enq;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_requests_2_notFull) != PORT_RDY_portalIfc_requests_2_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_requests_2_notFull, 1u);
	backing.PORT_RDY_portalIfc_requests_2_notFull = PORT_RDY_portalIfc_requests_2_notFull;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_requests_3_enq) != PORT_RDY_portalIfc_requests_3_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_requests_3_enq, 1u);
	backing.PORT_RDY_portalIfc_requests_3_enq = PORT_RDY_portalIfc_requests_3_enq;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_requests_3_notFull) != PORT_RDY_portalIfc_requests_3_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_requests_3_notFull, 1u);
	backing.PORT_RDY_portalIfc_requests_3_notFull = PORT_RDY_portalIfc_requests_3_notFull;
      }
      ++num;
      if ((backing.PORT_pipes_loadDRAM_PipeOut_first) != PORT_pipes_loadDRAM_PipeOut_first)
      {
	vcd_write_val(sim_hdl, num, PORT_pipes_loadDRAM_PipeOut_first, 544u);
	backing.PORT_pipes_loadDRAM_PipeOut_first = PORT_pipes_loadDRAM_PipeOut_first;
      }
      ++num;
      if ((backing.PORT_pipes_loadDRAM_PipeOut_notEmpty) != PORT_pipes_loadDRAM_PipeOut_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_pipes_loadDRAM_PipeOut_notEmpty, 1u);
	backing.PORT_pipes_loadDRAM_PipeOut_notEmpty = PORT_pipes_loadDRAM_PipeOut_notEmpty;
      }
      ++num;
      if ((backing.PORT_pipes_readDRAM_PipeOut_first) != PORT_pipes_readDRAM_PipeOut_first)
      {
	vcd_write_val(sim_hdl, num, PORT_pipes_readDRAM_PipeOut_first, 32u);
	backing.PORT_pipes_readDRAM_PipeOut_first = PORT_pipes_readDRAM_PipeOut_first;
      }
      ++num;
      if ((backing.PORT_pipes_readDRAM_PipeOut_notEmpty) != PORT_pipes_readDRAM_PipeOut_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_pipes_readDRAM_PipeOut_notEmpty, 1u);
	backing.PORT_pipes_readDRAM_PipeOut_notEmpty = PORT_pipes_readDRAM_PipeOut_notEmpty;
      }
      ++num;
      if ((backing.PORT_pipes_requestPoints_PipeOut_first) != PORT_pipes_requestPoints_PipeOut_first)
      {
	vcd_write_val(sim_hdl, num, PORT_pipes_requestPoints_PipeOut_first, 24u);
	backing.PORT_pipes_requestPoints_PipeOut_first = PORT_pipes_requestPoints_PipeOut_first;
      }
      ++num;
      if ((backing.PORT_pipes_requestPoints_PipeOut_notEmpty) != PORT_pipes_requestPoints_PipeOut_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_pipes_requestPoints_PipeOut_notEmpty, 1u);
	backing.PORT_pipes_requestPoints_PipeOut_notEmpty = PORT_pipes_requestPoints_PipeOut_notEmpty;
      }
      ++num;
      if ((backing.PORT_pipes_reset_dut_PipeOut_first) != PORT_pipes_reset_dut_PipeOut_first)
      {
	vcd_write_val(sim_hdl, num, PORT_pipes_reset_dut_PipeOut_first, 32u);
	backing.PORT_pipes_reset_dut_PipeOut_first = PORT_pipes_reset_dut_PipeOut_first;
      }
      ++num;
      if ((backing.PORT_pipes_reset_dut_PipeOut_notEmpty) != PORT_pipes_reset_dut_PipeOut_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_pipes_reset_dut_PipeOut_notEmpty, 1u);
	backing.PORT_pipes_reset_dut_PipeOut_notEmpty = PORT_pipes_reset_dut_PipeOut_notEmpty;
      }
      ++num;
      if ((backing.PORT_portalIfc_intr_channel) != PORT_portalIfc_intr_channel)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_intr_channel, 32u);
	backing.PORT_portalIfc_intr_channel = PORT_portalIfc_intr_channel;
      }
      ++num;
      if ((backing.PORT_portalIfc_intr_status) != PORT_portalIfc_intr_status)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_intr_status, 1u);
	backing.PORT_portalIfc_intr_status = PORT_portalIfc_intr_status;
      }
      ++num;
      if ((backing.PORT_portalIfc_messageSize_size) != PORT_portalIfc_messageSize_size)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_messageSize_size, 16u);
	backing.PORT_portalIfc_messageSize_size = PORT_portalIfc_messageSize_size;
      }
      ++num;
      if ((backing.PORT_portalIfc_messageSize_size_methodNumber) != PORT_portalIfc_messageSize_size_methodNumber)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_messageSize_size_methodNumber, 16u);
	backing.PORT_portalIfc_messageSize_size_methodNumber = PORT_portalIfc_messageSize_size_methodNumber;
      }
      ++num;
      if ((backing.PORT_portalIfc_requests_0_enq_v) != PORT_portalIfc_requests_0_enq_v)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_requests_0_enq_v, 32u);
	backing.PORT_portalIfc_requests_0_enq_v = PORT_portalIfc_requests_0_enq_v;
      }
      ++num;
      if ((backing.PORT_portalIfc_requests_0_notFull) != PORT_portalIfc_requests_0_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_requests_0_notFull, 1u);
	backing.PORT_portalIfc_requests_0_notFull = PORT_portalIfc_requests_0_notFull;
      }
      ++num;
      if ((backing.PORT_portalIfc_requests_1_enq_v) != PORT_portalIfc_requests_1_enq_v)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_requests_1_enq_v, 32u);
	backing.PORT_portalIfc_requests_1_enq_v = PORT_portalIfc_requests_1_enq_v;
      }
      ++num;
      if ((backing.PORT_portalIfc_requests_1_notFull) != PORT_portalIfc_requests_1_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_requests_1_notFull, 1u);
	backing.PORT_portalIfc_requests_1_notFull = PORT_portalIfc_requests_1_notFull;
      }
      ++num;
      if ((backing.PORT_portalIfc_requests_2_enq_v) != PORT_portalIfc_requests_2_enq_v)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_requests_2_enq_v, 32u);
	backing.PORT_portalIfc_requests_2_enq_v = PORT_portalIfc_requests_2_enq_v;
      }
      ++num;
      if ((backing.PORT_portalIfc_requests_2_notFull) != PORT_portalIfc_requests_2_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_requests_2_notFull, 1u);
	backing.PORT_portalIfc_requests_2_notFull = PORT_portalIfc_requests_2_notFull;
      }
      ++num;
      if ((backing.PORT_portalIfc_requests_3_enq_v) != PORT_portalIfc_requests_3_enq_v)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_requests_3_enq_v, 32u);
	backing.PORT_portalIfc_requests_3_enq_v = PORT_portalIfc_requests_3_enq_v;
      }
      ++num;
      if ((backing.PORT_portalIfc_requests_3_notFull) != PORT_portalIfc_requests_3_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_requests_3_notFull, 1u);
	backing.PORT_portalIfc_requests_3_notFull = PORT_portalIfc_requests_3_notFull;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_deq, 1u);
      backing.DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_deq = DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_first, 1u);
      backing.DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_first = DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_first;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_notEmpty, 1u);
      backing.DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_notEmpty = DEF_CAN_FIRE_pipes_loadDRAM_PipeOut_notEmpty;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_pipes_readDRAM_PipeOut_deq, 1u);
      backing.DEF_CAN_FIRE_pipes_readDRAM_PipeOut_deq = DEF_CAN_FIRE_pipes_readDRAM_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_pipes_readDRAM_PipeOut_first, 1u);
      backing.DEF_CAN_FIRE_pipes_readDRAM_PipeOut_first = DEF_CAN_FIRE_pipes_readDRAM_PipeOut_first;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_pipes_readDRAM_PipeOut_notEmpty, 1u);
      backing.DEF_CAN_FIRE_pipes_readDRAM_PipeOut_notEmpty = DEF_CAN_FIRE_pipes_readDRAM_PipeOut_notEmpty;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_pipes_requestPoints_PipeOut_deq, 1u);
      backing.DEF_CAN_FIRE_pipes_requestPoints_PipeOut_deq = DEF_CAN_FIRE_pipes_requestPoints_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_pipes_requestPoints_PipeOut_first, 1u);
      backing.DEF_CAN_FIRE_pipes_requestPoints_PipeOut_first = DEF_CAN_FIRE_pipes_requestPoints_PipeOut_first;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_pipes_requestPoints_PipeOut_notEmpty, 1u);
      backing.DEF_CAN_FIRE_pipes_requestPoints_PipeOut_notEmpty = DEF_CAN_FIRE_pipes_requestPoints_PipeOut_notEmpty;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_pipes_reset_dut_PipeOut_deq, 1u);
      backing.DEF_CAN_FIRE_pipes_reset_dut_PipeOut_deq = DEF_CAN_FIRE_pipes_reset_dut_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_pipes_reset_dut_PipeOut_first, 1u);
      backing.DEF_CAN_FIRE_pipes_reset_dut_PipeOut_first = DEF_CAN_FIRE_pipes_reset_dut_PipeOut_first;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_pipes_reset_dut_PipeOut_notEmpty, 1u);
      backing.DEF_CAN_FIRE_pipes_reset_dut_PipeOut_notEmpty = DEF_CAN_FIRE_pipes_reset_dut_PipeOut_notEmpty;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_intr_channel, 1u);
      backing.DEF_CAN_FIRE_portalIfc_intr_channel = DEF_CAN_FIRE_portalIfc_intr_channel;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_intr_status, 1u);
      backing.DEF_CAN_FIRE_portalIfc_intr_status = DEF_CAN_FIRE_portalIfc_intr_status;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_messageSize_size, 1u);
      backing.DEF_CAN_FIRE_portalIfc_messageSize_size = DEF_CAN_FIRE_portalIfc_messageSize_size;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_requests_0_enq, 1u);
      backing.DEF_CAN_FIRE_portalIfc_requests_0_enq = DEF_CAN_FIRE_portalIfc_requests_0_enq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_requests_0_notFull, 1u);
      backing.DEF_CAN_FIRE_portalIfc_requests_0_notFull = DEF_CAN_FIRE_portalIfc_requests_0_notFull;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_requests_1_enq, 1u);
      backing.DEF_CAN_FIRE_portalIfc_requests_1_enq = DEF_CAN_FIRE_portalIfc_requests_1_enq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_requests_1_notFull, 1u);
      backing.DEF_CAN_FIRE_portalIfc_requests_1_notFull = DEF_CAN_FIRE_portalIfc_requests_1_notFull;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_requests_2_enq, 1u);
      backing.DEF_CAN_FIRE_portalIfc_requests_2_enq = DEF_CAN_FIRE_portalIfc_requests_2_enq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_requests_2_notFull, 1u);
      backing.DEF_CAN_FIRE_portalIfc_requests_2_notFull = DEF_CAN_FIRE_portalIfc_requests_2_notFull;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_requests_3_enq, 1u);
      backing.DEF_CAN_FIRE_portalIfc_requests_3_enq = DEF_CAN_FIRE_portalIfc_requests_3_enq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_requests_3_notFull, 1u);
      backing.DEF_CAN_FIRE_portalIfc_requests_3_notFull = DEF_CAN_FIRE_portalIfc_requests_3_notFull;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_pipes_loadDRAM_PipeOut_deq, 1u);
      backing.DEF_WILL_FIRE_pipes_loadDRAM_PipeOut_deq = DEF_WILL_FIRE_pipes_loadDRAM_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_pipes_readDRAM_PipeOut_deq, 1u);
      backing.DEF_WILL_FIRE_pipes_readDRAM_PipeOut_deq = DEF_WILL_FIRE_pipes_readDRAM_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_pipes_requestPoints_PipeOut_deq, 1u);
      backing.DEF_WILL_FIRE_pipes_requestPoints_PipeOut_deq = DEF_WILL_FIRE_pipes_requestPoints_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_pipes_reset_dut_PipeOut_deq, 1u);
      backing.DEF_WILL_FIRE_pipes_reset_dut_PipeOut_deq = DEF_WILL_FIRE_pipes_reset_dut_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_portalIfc_requests_0_enq, 1u);
      backing.DEF_WILL_FIRE_portalIfc_requests_0_enq = DEF_WILL_FIRE_portalIfc_requests_0_enq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_portalIfc_requests_1_enq, 1u);
      backing.DEF_WILL_FIRE_portalIfc_requests_1_enq = DEF_WILL_FIRE_portalIfc_requests_1_enq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_portalIfc_requests_2_enq, 1u);
      backing.DEF_WILL_FIRE_portalIfc_requests_2_enq = DEF_WILL_FIRE_portalIfc_requests_2_enq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_portalIfc_requests_3_enq, 1u);
      backing.DEF_WILL_FIRE_portalIfc_requests_3_enq = DEF_WILL_FIRE_portalIfc_requests_3_enq;
      vcd_write_val(sim_hdl, num++, DEF__read_BITS_511_TO_0___h1052, 512u);
      backing.DEF__read_BITS_511_TO_0___h1052 = DEF__read_BITS_511_TO_0___h1052;
      vcd_write_val(sim_hdl, num++, DEF__read__h210, 544u);
      backing.DEF__read__h210 = DEF__read__h210;
      vcd_write_val(sim_hdl, num++, DEF__read__h246, 5u);
      backing.DEF__read__h246 = DEF__read__h246;
      vcd_write_val(sim_hdl, num++, DEF_loadDRAM_requestAdapter_count_1_EQ_16___d12, 1u);
      backing.DEF_loadDRAM_requestAdapter_count_1_EQ_16___d12 = DEF_loadDRAM_requestAdapter_count_1_EQ_16___d12;
      vcd_write_val(sim_hdl, num++, DEF_loadDRAM_requestAdapter_fifo_i_notEmpty____d27, 1u);
      backing.DEF_loadDRAM_requestAdapter_fifo_i_notEmpty____d27 = DEF_loadDRAM_requestAdapter_fifo_i_notEmpty____d27;
      vcd_write_val(sim_hdl, num++, DEF_loadDRAM_requestAdapter_fifo_notFull____d16, 1u);
      backing.DEF_loadDRAM_requestAdapter_fifo_notFull____d16 = DEF_loadDRAM_requestAdapter_fifo_notFull____d16;
      vcd_write_val(sim_hdl, num++, DEF_newbuff__h1028, 544u);
      backing.DEF_newbuff__h1028 = DEF_newbuff__h1028;
      vcd_write_val(sim_hdl, num++, DEF_readDRAM_requestAdapter_fifo_i_notEmpty____d26, 1u);
      backing.DEF_readDRAM_requestAdapter_fifo_i_notEmpty____d26 = DEF_readDRAM_requestAdapter_fifo_i_notEmpty____d26;
      vcd_write_val(sim_hdl, num++, DEF_readDRAM_requestAdapter_fifo_notFull____d6, 1u);
      backing.DEF_readDRAM_requestAdapter_fifo_notFull____d6 = DEF_readDRAM_requestAdapter_fifo_notFull____d6;
      vcd_write_val(sim_hdl, num++, DEF_requestPoints_requestAdapter_fifo_i_notEmpty____d28, 1u);
      backing.DEF_requestPoints_requestAdapter_fifo_i_notEmpty____d28 = DEF_requestPoints_requestAdapter_fifo_i_notEmpty____d28;
      vcd_write_val(sim_hdl, num++, DEF_requestPoints_requestAdapter_fifo_notFull____d22, 1u);
      backing.DEF_requestPoints_requestAdapter_fifo_notFull____d22 = DEF_requestPoints_requestAdapter_fifo_notFull____d22;
      vcd_write_val(sim_hdl, num++, DEF_reset_dut_requestAdapter_fifo_i_notEmpty____d29, 1u);
      backing.DEF_reset_dut_requestAdapter_fifo_i_notEmpty____d29 = DEF_reset_dut_requestAdapter_fifo_i_notEmpty____d29;
      vcd_write_val(sim_hdl, num++, DEF_reset_dut_requestAdapter_fifo_notFull____d24, 1u);
      backing.DEF_reset_dut_requestAdapter_fifo_notFull____d24 = DEF_reset_dut_requestAdapter_fifo_notFull____d24;
      vcd_write_val(sim_hdl, num++, PORT_EN_pipes_loadDRAM_PipeOut_deq, 1u);
      backing.PORT_EN_pipes_loadDRAM_PipeOut_deq = PORT_EN_pipes_loadDRAM_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, PORT_EN_pipes_readDRAM_PipeOut_deq, 1u);
      backing.PORT_EN_pipes_readDRAM_PipeOut_deq = PORT_EN_pipes_readDRAM_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, PORT_EN_pipes_requestPoints_PipeOut_deq, 1u);
      backing.PORT_EN_pipes_requestPoints_PipeOut_deq = PORT_EN_pipes_requestPoints_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, PORT_EN_pipes_reset_dut_PipeOut_deq, 1u);
      backing.PORT_EN_pipes_reset_dut_PipeOut_deq = PORT_EN_pipes_reset_dut_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, PORT_EN_portalIfc_requests_0_enq, 1u);
      backing.PORT_EN_portalIfc_requests_0_enq = PORT_EN_portalIfc_requests_0_enq;
      vcd_write_val(sim_hdl, num++, PORT_EN_portalIfc_requests_1_enq, 1u);
      backing.PORT_EN_portalIfc_requests_1_enq = PORT_EN_portalIfc_requests_1_enq;
      vcd_write_val(sim_hdl, num++, PORT_EN_portalIfc_requests_2_enq, 1u);
      backing.PORT_EN_portalIfc_requests_2_enq = PORT_EN_portalIfc_requests_2_enq;
      vcd_write_val(sim_hdl, num++, PORT_EN_portalIfc_requests_3_enq, 1u);
      backing.PORT_EN_portalIfc_requests_3_enq = PORT_EN_portalIfc_requests_3_enq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_pipes_loadDRAM_PipeOut_deq, 1u);
      backing.PORT_RDY_pipes_loadDRAM_PipeOut_deq = PORT_RDY_pipes_loadDRAM_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_pipes_loadDRAM_PipeOut_first, 1u);
      backing.PORT_RDY_pipes_loadDRAM_PipeOut_first = PORT_RDY_pipes_loadDRAM_PipeOut_first;
      vcd_write_val(sim_hdl, num++, PORT_RDY_pipes_loadDRAM_PipeOut_notEmpty, 1u);
      backing.PORT_RDY_pipes_loadDRAM_PipeOut_notEmpty = PORT_RDY_pipes_loadDRAM_PipeOut_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_RDY_pipes_readDRAM_PipeOut_deq, 1u);
      backing.PORT_RDY_pipes_readDRAM_PipeOut_deq = PORT_RDY_pipes_readDRAM_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_pipes_readDRAM_PipeOut_first, 1u);
      backing.PORT_RDY_pipes_readDRAM_PipeOut_first = PORT_RDY_pipes_readDRAM_PipeOut_first;
      vcd_write_val(sim_hdl, num++, PORT_RDY_pipes_readDRAM_PipeOut_notEmpty, 1u);
      backing.PORT_RDY_pipes_readDRAM_PipeOut_notEmpty = PORT_RDY_pipes_readDRAM_PipeOut_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_RDY_pipes_requestPoints_PipeOut_deq, 1u);
      backing.PORT_RDY_pipes_requestPoints_PipeOut_deq = PORT_RDY_pipes_requestPoints_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_pipes_requestPoints_PipeOut_first, 1u);
      backing.PORT_RDY_pipes_requestPoints_PipeOut_first = PORT_RDY_pipes_requestPoints_PipeOut_first;
      vcd_write_val(sim_hdl, num++, PORT_RDY_pipes_requestPoints_PipeOut_notEmpty, 1u);
      backing.PORT_RDY_pipes_requestPoints_PipeOut_notEmpty = PORT_RDY_pipes_requestPoints_PipeOut_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_RDY_pipes_reset_dut_PipeOut_deq, 1u);
      backing.PORT_RDY_pipes_reset_dut_PipeOut_deq = PORT_RDY_pipes_reset_dut_PipeOut_deq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_pipes_reset_dut_PipeOut_first, 1u);
      backing.PORT_RDY_pipes_reset_dut_PipeOut_first = PORT_RDY_pipes_reset_dut_PipeOut_first;
      vcd_write_val(sim_hdl, num++, PORT_RDY_pipes_reset_dut_PipeOut_notEmpty, 1u);
      backing.PORT_RDY_pipes_reset_dut_PipeOut_notEmpty = PORT_RDY_pipes_reset_dut_PipeOut_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_intr_channel, 1u);
      backing.PORT_RDY_portalIfc_intr_channel = PORT_RDY_portalIfc_intr_channel;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_intr_status, 1u);
      backing.PORT_RDY_portalIfc_intr_status = PORT_RDY_portalIfc_intr_status;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_messageSize_size, 1u);
      backing.PORT_RDY_portalIfc_messageSize_size = PORT_RDY_portalIfc_messageSize_size;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_requests_0_enq, 1u);
      backing.PORT_RDY_portalIfc_requests_0_enq = PORT_RDY_portalIfc_requests_0_enq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_requests_0_notFull, 1u);
      backing.PORT_RDY_portalIfc_requests_0_notFull = PORT_RDY_portalIfc_requests_0_notFull;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_requests_1_enq, 1u);
      backing.PORT_RDY_portalIfc_requests_1_enq = PORT_RDY_portalIfc_requests_1_enq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_requests_1_notFull, 1u);
      backing.PORT_RDY_portalIfc_requests_1_notFull = PORT_RDY_portalIfc_requests_1_notFull;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_requests_2_enq, 1u);
      backing.PORT_RDY_portalIfc_requests_2_enq = PORT_RDY_portalIfc_requests_2_enq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_requests_2_notFull, 1u);
      backing.PORT_RDY_portalIfc_requests_2_notFull = PORT_RDY_portalIfc_requests_2_notFull;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_requests_3_enq, 1u);
      backing.PORT_RDY_portalIfc_requests_3_enq = PORT_RDY_portalIfc_requests_3_enq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_requests_3_notFull, 1u);
      backing.PORT_RDY_portalIfc_requests_3_notFull = PORT_RDY_portalIfc_requests_3_notFull;
      vcd_write_val(sim_hdl, num++, PORT_pipes_loadDRAM_PipeOut_first, 544u);
      backing.PORT_pipes_loadDRAM_PipeOut_first = PORT_pipes_loadDRAM_PipeOut_first;
      vcd_write_val(sim_hdl, num++, PORT_pipes_loadDRAM_PipeOut_notEmpty, 1u);
      backing.PORT_pipes_loadDRAM_PipeOut_notEmpty = PORT_pipes_loadDRAM_PipeOut_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_pipes_readDRAM_PipeOut_first, 32u);
      backing.PORT_pipes_readDRAM_PipeOut_first = PORT_pipes_readDRAM_PipeOut_first;
      vcd_write_val(sim_hdl, num++, PORT_pipes_readDRAM_PipeOut_notEmpty, 1u);
      backing.PORT_pipes_readDRAM_PipeOut_notEmpty = PORT_pipes_readDRAM_PipeOut_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_pipes_requestPoints_PipeOut_first, 24u);
      backing.PORT_pipes_requestPoints_PipeOut_first = PORT_pipes_requestPoints_PipeOut_first;
      vcd_write_val(sim_hdl, num++, PORT_pipes_requestPoints_PipeOut_notEmpty, 1u);
      backing.PORT_pipes_requestPoints_PipeOut_notEmpty = PORT_pipes_requestPoints_PipeOut_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_pipes_reset_dut_PipeOut_first, 32u);
      backing.PORT_pipes_reset_dut_PipeOut_first = PORT_pipes_reset_dut_PipeOut_first;
      vcd_write_val(sim_hdl, num++, PORT_pipes_reset_dut_PipeOut_notEmpty, 1u);
      backing.PORT_pipes_reset_dut_PipeOut_notEmpty = PORT_pipes_reset_dut_PipeOut_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_intr_channel, 32u);
      backing.PORT_portalIfc_intr_channel = PORT_portalIfc_intr_channel;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_intr_status, 1u);
      backing.PORT_portalIfc_intr_status = PORT_portalIfc_intr_status;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_messageSize_size, 16u);
      backing.PORT_portalIfc_messageSize_size = PORT_portalIfc_messageSize_size;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_messageSize_size_methodNumber, 16u);
      backing.PORT_portalIfc_messageSize_size_methodNumber = PORT_portalIfc_messageSize_size_methodNumber;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_requests_0_enq_v, 32u);
      backing.PORT_portalIfc_requests_0_enq_v = PORT_portalIfc_requests_0_enq_v;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_requests_0_notFull, 1u);
      backing.PORT_portalIfc_requests_0_notFull = PORT_portalIfc_requests_0_notFull;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_requests_1_enq_v, 32u);
      backing.PORT_portalIfc_requests_1_enq_v = PORT_portalIfc_requests_1_enq_v;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_requests_1_notFull, 1u);
      backing.PORT_portalIfc_requests_1_notFull = PORT_portalIfc_requests_1_notFull;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_requests_2_enq_v, 32u);
      backing.PORT_portalIfc_requests_2_enq_v = PORT_portalIfc_requests_2_enq_v;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_requests_2_notFull, 1u);
      backing.PORT_portalIfc_requests_2_notFull = PORT_portalIfc_requests_2_notFull;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_requests_3_enq_v, 32u);
      backing.PORT_portalIfc_requests_3_enq_v = PORT_portalIfc_requests_3_enq_v;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_requests_3_notFull, 1u);
      backing.PORT_portalIfc_requests_3_notFull = PORT_portalIfc_requests_3_notFull;
    }
}

void MOD_mkMyDutRequestInput::vcd_prims(tVCDDumpType dt, MOD_mkMyDutRequestInput &backing)
{
  INST_loadDRAM_requestAdapter_count.dump_VCD(dt, backing.INST_loadDRAM_requestAdapter_count);
  INST_loadDRAM_requestAdapter_fbnbuff.dump_VCD(dt, backing.INST_loadDRAM_requestAdapter_fbnbuff);
  INST_loadDRAM_requestAdapter_fifo.dump_VCD(dt, backing.INST_loadDRAM_requestAdapter_fifo);
  INST_readDRAM_requestAdapter_fbnbuff.dump_VCD(dt, backing.INST_readDRAM_requestAdapter_fbnbuff);
  INST_readDRAM_requestAdapter_fifo.dump_VCD(dt, backing.INST_readDRAM_requestAdapter_fifo);
  INST_requestPoints_requestAdapter_fbnbuff.dump_VCD(dt,
						     backing.INST_requestPoints_requestAdapter_fbnbuff);
  INST_requestPoints_requestAdapter_fifo.dump_VCD(dt, backing.INST_requestPoints_requestAdapter_fifo);
  INST_reset_dut_requestAdapter_fbnbuff.dump_VCD(dt, backing.INST_reset_dut_requestAdapter_fbnbuff);
  INST_reset_dut_requestAdapter_fifo.dump_VCD(dt, backing.INST_reset_dut_requestAdapter_fifo);
}
