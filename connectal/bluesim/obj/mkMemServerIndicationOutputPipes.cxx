/*
 * Generated by Bluespec Compiler, version 2017.07.A (build 1da80f1, 2017-07-21)
 * 
 * On Sat Nov 16 22:39:52 EST 2019
 * 
 */
#include "bluesim_primitives.h"
#include "mkMemServerIndicationOutputPipes.h"


/* Literal declarations */
static unsigned int const UWide_literal_128_h0_arr[] = { 0u, 0u, 0u, 0u };
static tUWide const UWide_literal_128_h0(128u, UWide_literal_128_h0_arr);
static unsigned int const UWide_literal_192_h0_arr[] = { 0u, 0u, 0u, 0u, 0u, 0u };
static tUWide const UWide_literal_192_h0(192u, UWide_literal_192_h0_arr);


/* Constructor */
MOD_mkMemServerIndicationOutputPipes::MOD_mkMemServerIndicationOutputPipes(tSimStateHdl simHdl,
									   char const *name,
									   Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_addrResponse_responseAdapter_bits(simHdl,
					   "addrResponse_responseAdapter_bits",
					   this,
					   64u,
					   0llu,
					   (tUInt8)0u),
    INST_addrResponse_responseAdapter_count(simHdl,
					    "addrResponse_responseAdapter_count",
					    this,
					    1u,
					    (tUInt8)0u,
					    (tUInt8)0u),
    INST_addrResponse_responseAdapter_notEmptyReg(simHdl,
						  "addrResponse_responseAdapter_notEmptyReg",
						  this,
						  1u,
						  (tUInt8)0u,
						  (tUInt8)0u),
    INST_addrResponse_responseAdapter_shift(simHdl,
					    "addrResponse_responseAdapter_shift",
					    this,
					    7u,
					    (tUInt8)0u,
					    (tUInt8)0u),
    INST_error_responseAdapter_bits(simHdl,
				    "error_responseAdapter_bits",
				    this,
				    192u,
				    UWide_literal_192_h0,
				    (tUInt8)0u),
    INST_error_responseAdapter_count(simHdl,
				     "error_responseAdapter_count",
				     this,
				     3u,
				     (tUInt8)0u,
				     (tUInt8)0u),
    INST_error_responseAdapter_notEmptyReg(simHdl,
					   "error_responseAdapter_notEmptyReg",
					   this,
					   1u,
					   (tUInt8)0u,
					   (tUInt8)0u),
    INST_error_responseAdapter_shift(simHdl, "error_responseAdapter_shift", this, 9u, 0u, (tUInt8)0u),
    INST_reportMemoryTraffic_responseAdapter_bits(simHdl,
						  "reportMemoryTraffic_responseAdapter_bits",
						  this,
						  64u,
						  0llu,
						  (tUInt8)0u),
    INST_reportMemoryTraffic_responseAdapter_count(simHdl,
						   "reportMemoryTraffic_responseAdapter_count",
						   this,
						   1u,
						   (tUInt8)0u,
						   (tUInt8)0u),
    INST_reportMemoryTraffic_responseAdapter_notEmptyReg(simHdl,
							 "reportMemoryTraffic_responseAdapter_notEmptyReg",
							 this,
							 1u,
							 (tUInt8)0u,
							 (tUInt8)0u),
    INST_reportMemoryTraffic_responseAdapter_shift(simHdl,
						   "reportMemoryTraffic_responseAdapter_shift",
						   this,
						   7u,
						   (tUInt8)0u,
						   (tUInt8)0u),
    INST_reportStateDbg_responseAdapter_bits(simHdl,
					     "reportStateDbg_responseAdapter_bits",
					     this,
					     128u,
					     UWide_literal_128_h0,
					     (tUInt8)0u),
    INST_reportStateDbg_responseAdapter_count(simHdl,
					      "reportStateDbg_responseAdapter_count",
					      this,
					      2u,
					      (tUInt8)0u,
					      (tUInt8)0u),
    INST_reportStateDbg_responseAdapter_notEmptyReg(simHdl,
						    "reportStateDbg_responseAdapter_notEmptyReg",
						    this,
						    1u,
						    (tUInt8)0u,
						    (tUInt8)0u),
    INST_reportStateDbg_responseAdapter_shift(simHdl,
					      "reportStateDbg_responseAdapter_shift",
					      this,
					      8u,
					      (tUInt8)0u,
					      (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_x__h1578(192u),
    DEF_x__h1314(128u),
    DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689(160u),
    DEF_reportStateDbg_responseAdapter_bits_BITS_95_TO_0___h1425(96u),
    DEF_x__h1682(192u),
    DEF_x__h1418(128u)
{
  PORT_EN_methods_error_enq = false;
  PORT_EN_portalIfc_indications_0_deq = false;
  PORT_EN_portalIfc_indications_1_deq = false;
  PORT_EN_portalIfc_indications_2_deq = false;
  PORT_EN_portalIfc_indications_3_deq = false;
  PORT_EN_methods_addrResponse_enq = false;
  PORT_EN_methods_reportStateDbg_enq = false;
  PORT_EN_methods_reportMemoryTraffic_enq = false;
  PORT_portalIfc_messageSize_size_methodNumber = 0u;
  PORT_methods_error_enq_v.setSize(192u);
  PORT_methods_error_enq_v.clear();
  PORT_methods_addrResponse_enq_v = 0llu;
  PORT_methods_reportStateDbg_enq_v.setSize(128u);
  PORT_methods_reportStateDbg_enq_v.clear();
  PORT_methods_reportMemoryTraffic_enq_v = 0llu;
  PORT_portalIfc_intr_channel = 0u;
  PORT_portalIfc_intr_status = false;
  PORT_portalIfc_messageSize_size = 0u;
  PORT_RDY_portalIfc_messageSize_size = false;
  PORT_RDY_portalIfc_intr_status = false;
  PORT_RDY_portalIfc_intr_channel = false;
  PORT_RDY_methods_error_enq = false;
  PORT_methods_error_notFull = false;
  PORT_RDY_methods_error_notFull = false;
  PORT_portalIfc_indications_0_first = 0u;
  PORT_RDY_portalIfc_indications_0_first = false;
  PORT_RDY_portalIfc_indications_0_deq = false;
  PORT_portalIfc_indications_0_notEmpty = false;
  PORT_RDY_portalIfc_indications_0_notEmpty = false;
  PORT_portalIfc_indications_1_first = 0u;
  PORT_RDY_portalIfc_indications_1_first = false;
  PORT_RDY_portalIfc_indications_1_deq = false;
  PORT_portalIfc_indications_1_notEmpty = false;
  PORT_RDY_portalIfc_indications_1_notEmpty = false;
  PORT_portalIfc_indications_2_first = 0u;
  PORT_RDY_portalIfc_indications_2_first = false;
  PORT_RDY_portalIfc_indications_2_deq = false;
  PORT_portalIfc_indications_2_notEmpty = false;
  PORT_RDY_portalIfc_indications_2_notEmpty = false;
  PORT_portalIfc_indications_3_first = 0u;
  PORT_RDY_portalIfc_indications_3_first = false;
  PORT_RDY_portalIfc_indications_3_deq = false;
  PORT_portalIfc_indications_3_notEmpty = false;
  PORT_RDY_portalIfc_indications_3_notEmpty = false;
  PORT_RDY_methods_addrResponse_enq = false;
  PORT_methods_addrResponse_notFull = false;
  PORT_RDY_methods_addrResponse_notFull = false;
  PORT_RDY_methods_reportStateDbg_enq = false;
  PORT_methods_reportStateDbg_notFull = false;
  PORT_RDY_methods_reportStateDbg_notFull = false;
  PORT_RDY_methods_reportMemoryTraffic_enq = false;
  PORT_methods_reportMemoryTraffic_notFull = false;
  PORT_RDY_methods_reportMemoryTraffic_notFull = false;
  symbol_count = 102u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkMemServerIndicationOutputPipes::init_symbols_0()
{
  init_symbol(&symbols[0u],
	      "addrResponse_responseAdapter_bits",
	      SYM_MODULE,
	      &INST_addrResponse_responseAdapter_bits);
  init_symbol(&symbols[1u],
	      "addrResponse_responseAdapter_count",
	      SYM_MODULE,
	      &INST_addrResponse_responseAdapter_count);
  init_symbol(&symbols[2u],
	      "addrResponse_responseAdapter_notEmptyReg",
	      SYM_MODULE,
	      &INST_addrResponse_responseAdapter_notEmptyReg);
  init_symbol(&symbols[3u],
	      "addrResponse_responseAdapter_notEmptyReg__h723",
	      SYM_DEF,
	      &DEF_addrResponse_responseAdapter_notEmptyReg__h723,
	      1u);
  init_symbol(&symbols[4u],
	      "addrResponse_responseAdapter_shift",
	      SYM_MODULE,
	      &INST_addrResponse_responseAdapter_shift);
  init_symbol(&symbols[5u],
	      "CAN_FIRE_methods_addrResponse_enq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_methods_addrResponse_enq,
	      1u);
  init_symbol(&symbols[6u],
	      "CAN_FIRE_methods_addrResponse_notFull",
	      SYM_DEF,
	      &DEF_CAN_FIRE_methods_addrResponse_notFull,
	      1u);
  init_symbol(&symbols[7u],
	      "CAN_FIRE_methods_error_enq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_methods_error_enq,
	      1u);
  init_symbol(&symbols[8u],
	      "CAN_FIRE_methods_error_notFull",
	      SYM_DEF,
	      &DEF_CAN_FIRE_methods_error_notFull,
	      1u);
  init_symbol(&symbols[9u],
	      "CAN_FIRE_methods_reportMemoryTraffic_enq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_methods_reportMemoryTraffic_enq,
	      1u);
  init_symbol(&symbols[10u],
	      "CAN_FIRE_methods_reportMemoryTraffic_notFull",
	      SYM_DEF,
	      &DEF_CAN_FIRE_methods_reportMemoryTraffic_notFull,
	      1u);
  init_symbol(&symbols[11u],
	      "CAN_FIRE_methods_reportStateDbg_enq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_methods_reportStateDbg_enq,
	      1u);
  init_symbol(&symbols[12u],
	      "CAN_FIRE_methods_reportStateDbg_notFull",
	      SYM_DEF,
	      &DEF_CAN_FIRE_methods_reportStateDbg_notFull,
	      1u);
  init_symbol(&symbols[13u],
	      "CAN_FIRE_portalIfc_indications_0_deq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_0_deq,
	      1u);
  init_symbol(&symbols[14u],
	      "CAN_FIRE_portalIfc_indications_0_first",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_0_first,
	      1u);
  init_symbol(&symbols[15u],
	      "CAN_FIRE_portalIfc_indications_0_notEmpty",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_0_notEmpty,
	      1u);
  init_symbol(&symbols[16u],
	      "CAN_FIRE_portalIfc_indications_1_deq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_1_deq,
	      1u);
  init_symbol(&symbols[17u],
	      "CAN_FIRE_portalIfc_indications_1_first",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_1_first,
	      1u);
  init_symbol(&symbols[18u],
	      "CAN_FIRE_portalIfc_indications_1_notEmpty",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_1_notEmpty,
	      1u);
  init_symbol(&symbols[19u],
	      "CAN_FIRE_portalIfc_indications_2_deq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_2_deq,
	      1u);
  init_symbol(&symbols[20u],
	      "CAN_FIRE_portalIfc_indications_2_first",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_2_first,
	      1u);
  init_symbol(&symbols[21u],
	      "CAN_FIRE_portalIfc_indications_2_notEmpty",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_2_notEmpty,
	      1u);
  init_symbol(&symbols[22u],
	      "CAN_FIRE_portalIfc_indications_3_deq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_3_deq,
	      1u);
  init_symbol(&symbols[23u],
	      "CAN_FIRE_portalIfc_indications_3_first",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_3_first,
	      1u);
  init_symbol(&symbols[24u],
	      "CAN_FIRE_portalIfc_indications_3_notEmpty",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_indications_3_notEmpty,
	      1u);
  init_symbol(&symbols[25u],
	      "CAN_FIRE_portalIfc_intr_channel",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_intr_channel,
	      1u);
  init_symbol(&symbols[26u],
	      "CAN_FIRE_portalIfc_intr_status",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_intr_status,
	      1u);
  init_symbol(&symbols[27u],
	      "CAN_FIRE_portalIfc_messageSize_size",
	      SYM_DEF,
	      &DEF_CAN_FIRE_portalIfc_messageSize_size,
	      1u);
  init_symbol(&symbols[28u],
	      "EN_methods_addrResponse_enq",
	      SYM_PORT,
	      &PORT_EN_methods_addrResponse_enq,
	      1u);
  init_symbol(&symbols[29u], "EN_methods_error_enq", SYM_PORT, &PORT_EN_methods_error_enq, 1u);
  init_symbol(&symbols[30u],
	      "EN_methods_reportMemoryTraffic_enq",
	      SYM_PORT,
	      &PORT_EN_methods_reportMemoryTraffic_enq,
	      1u);
  init_symbol(&symbols[31u],
	      "EN_methods_reportStateDbg_enq",
	      SYM_PORT,
	      &PORT_EN_methods_reportStateDbg_enq,
	      1u);
  init_symbol(&symbols[32u],
	      "EN_portalIfc_indications_0_deq",
	      SYM_PORT,
	      &PORT_EN_portalIfc_indications_0_deq,
	      1u);
  init_symbol(&symbols[33u],
	      "EN_portalIfc_indications_1_deq",
	      SYM_PORT,
	      &PORT_EN_portalIfc_indications_1_deq,
	      1u);
  init_symbol(&symbols[34u],
	      "EN_portalIfc_indications_2_deq",
	      SYM_PORT,
	      &PORT_EN_portalIfc_indications_2_deq,
	      1u);
  init_symbol(&symbols[35u],
	      "EN_portalIfc_indications_3_deq",
	      SYM_PORT,
	      &PORT_EN_portalIfc_indications_3_deq,
	      1u);
  init_symbol(&symbols[36u],
	      "error_responseAdapter_bits",
	      SYM_MODULE,
	      &INST_error_responseAdapter_bits);
  init_symbol(&symbols[37u],
	      "error_responseAdapter_count",
	      SYM_MODULE,
	      &INST_error_responseAdapter_count);
  init_symbol(&symbols[38u],
	      "error_responseAdapter_notEmptyReg",
	      SYM_MODULE,
	      &INST_error_responseAdapter_notEmptyReg);
  init_symbol(&symbols[39u],
	      "error_responseAdapter_notEmptyReg__h894",
	      SYM_DEF,
	      &DEF_error_responseAdapter_notEmptyReg__h894,
	      1u);
  init_symbol(&symbols[40u],
	      "error_responseAdapter_shift",
	      SYM_MODULE,
	      &INST_error_responseAdapter_shift);
  init_symbol(&symbols[41u],
	      "methods_addrResponse_enq_v",
	      SYM_PORT,
	      &PORT_methods_addrResponse_enq_v,
	      64u);
  init_symbol(&symbols[42u],
	      "methods_addrResponse_notFull",
	      SYM_PORT,
	      &PORT_methods_addrResponse_notFull,
	      1u);
  init_symbol(&symbols[43u], "methods_error_enq_v", SYM_PORT, &PORT_methods_error_enq_v, 192u);
  init_symbol(&symbols[44u], "methods_error_notFull", SYM_PORT, &PORT_methods_error_notFull, 1u);
  init_symbol(&symbols[45u],
	      "methods_reportMemoryTraffic_enq_v",
	      SYM_PORT,
	      &PORT_methods_reportMemoryTraffic_enq_v,
	      64u);
  init_symbol(&symbols[46u],
	      "methods_reportMemoryTraffic_notFull",
	      SYM_PORT,
	      &PORT_methods_reportMemoryTraffic_notFull,
	      1u);
  init_symbol(&symbols[47u],
	      "methods_reportStateDbg_enq_v",
	      SYM_PORT,
	      &PORT_methods_reportStateDbg_enq_v,
	      128u);
  init_symbol(&symbols[48u],
	      "methods_reportStateDbg_notFull",
	      SYM_PORT,
	      &PORT_methods_reportStateDbg_notFull,
	      1u);
  init_symbol(&symbols[49u],
	      "portalIfc_indications_0_first",
	      SYM_PORT,
	      &PORT_portalIfc_indications_0_first,
	      32u);
  init_symbol(&symbols[50u],
	      "portalIfc_indications_0_notEmpty",
	      SYM_PORT,
	      &PORT_portalIfc_indications_0_notEmpty,
	      1u);
  init_symbol(&symbols[51u],
	      "portalIfc_indications_1_first",
	      SYM_PORT,
	      &PORT_portalIfc_indications_1_first,
	      32u);
  init_symbol(&symbols[52u],
	      "portalIfc_indications_1_notEmpty",
	      SYM_PORT,
	      &PORT_portalIfc_indications_1_notEmpty,
	      1u);
  init_symbol(&symbols[53u],
	      "portalIfc_indications_2_first",
	      SYM_PORT,
	      &PORT_portalIfc_indications_2_first,
	      32u);
  init_symbol(&symbols[54u],
	      "portalIfc_indications_2_notEmpty",
	      SYM_PORT,
	      &PORT_portalIfc_indications_2_notEmpty,
	      1u);
  init_symbol(&symbols[55u],
	      "portalIfc_indications_3_first",
	      SYM_PORT,
	      &PORT_portalIfc_indications_3_first,
	      32u);
  init_symbol(&symbols[56u],
	      "portalIfc_indications_3_notEmpty",
	      SYM_PORT,
	      &PORT_portalIfc_indications_3_notEmpty,
	      1u);
  init_symbol(&symbols[57u], "portalIfc_intr_channel", SYM_PORT, &PORT_portalIfc_intr_channel, 32u);
  init_symbol(&symbols[58u], "portalIfc_intr_status", SYM_PORT, &PORT_portalIfc_intr_status, 1u);
  init_symbol(&symbols[59u],
	      "portalIfc_messageSize_size",
	      SYM_PORT,
	      &PORT_portalIfc_messageSize_size,
	      16u);
  init_symbol(&symbols[60u],
	      "portalIfc_messageSize_size_methodNumber",
	      SYM_PORT,
	      &PORT_portalIfc_messageSize_size_methodNumber,
	      16u);
  init_symbol(&symbols[61u],
	      "RDY_methods_addrResponse_enq",
	      SYM_PORT,
	      &PORT_RDY_methods_addrResponse_enq,
	      1u);
  init_symbol(&symbols[62u],
	      "RDY_methods_addrResponse_notFull",
	      SYM_PORT,
	      &PORT_RDY_methods_addrResponse_notFull,
	      1u);
  init_symbol(&symbols[63u], "RDY_methods_error_enq", SYM_PORT, &PORT_RDY_methods_error_enq, 1u);
  init_symbol(&symbols[64u],
	      "RDY_methods_error_notFull",
	      SYM_PORT,
	      &PORT_RDY_methods_error_notFull,
	      1u);
  init_symbol(&symbols[65u],
	      "RDY_methods_reportMemoryTraffic_enq",
	      SYM_PORT,
	      &PORT_RDY_methods_reportMemoryTraffic_enq,
	      1u);
  init_symbol(&symbols[66u],
	      "RDY_methods_reportMemoryTraffic_notFull",
	      SYM_PORT,
	      &PORT_RDY_methods_reportMemoryTraffic_notFull,
	      1u);
  init_symbol(&symbols[67u],
	      "RDY_methods_reportStateDbg_enq",
	      SYM_PORT,
	      &PORT_RDY_methods_reportStateDbg_enq,
	      1u);
  init_symbol(&symbols[68u],
	      "RDY_methods_reportStateDbg_notFull",
	      SYM_PORT,
	      &PORT_RDY_methods_reportStateDbg_notFull,
	      1u);
  init_symbol(&symbols[69u],
	      "RDY_portalIfc_indications_0_deq",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_0_deq,
	      1u);
  init_symbol(&symbols[70u],
	      "RDY_portalIfc_indications_0_first",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_0_first,
	      1u);
  init_symbol(&symbols[71u],
	      "RDY_portalIfc_indications_0_notEmpty",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_0_notEmpty,
	      1u);
  init_symbol(&symbols[72u],
	      "RDY_portalIfc_indications_1_deq",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_1_deq,
	      1u);
  init_symbol(&symbols[73u],
	      "RDY_portalIfc_indications_1_first",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_1_first,
	      1u);
  init_symbol(&symbols[74u],
	      "RDY_portalIfc_indications_1_notEmpty",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_1_notEmpty,
	      1u);
  init_symbol(&symbols[75u],
	      "RDY_portalIfc_indications_2_deq",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_2_deq,
	      1u);
  init_symbol(&symbols[76u],
	      "RDY_portalIfc_indications_2_first",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_2_first,
	      1u);
  init_symbol(&symbols[77u],
	      "RDY_portalIfc_indications_2_notEmpty",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_2_notEmpty,
	      1u);
  init_symbol(&symbols[78u],
	      "RDY_portalIfc_indications_3_deq",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_3_deq,
	      1u);
  init_symbol(&symbols[79u],
	      "RDY_portalIfc_indications_3_first",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_3_first,
	      1u);
  init_symbol(&symbols[80u],
	      "RDY_portalIfc_indications_3_notEmpty",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_indications_3_notEmpty,
	      1u);
  init_symbol(&symbols[81u],
	      "RDY_portalIfc_intr_channel",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_intr_channel,
	      1u);
  init_symbol(&symbols[82u],
	      "RDY_portalIfc_intr_status",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_intr_status,
	      1u);
  init_symbol(&symbols[83u],
	      "RDY_portalIfc_messageSize_size",
	      SYM_PORT,
	      &PORT_RDY_portalIfc_messageSize_size,
	      1u);
  init_symbol(&symbols[84u],
	      "reportMemoryTraffic_responseAdapter_bits",
	      SYM_MODULE,
	      &INST_reportMemoryTraffic_responseAdapter_bits);
  init_symbol(&symbols[85u],
	      "reportMemoryTraffic_responseAdapter_count",
	      SYM_MODULE,
	      &INST_reportMemoryTraffic_responseAdapter_count);
  init_symbol(&symbols[86u],
	      "reportMemoryTraffic_responseAdapter_notEmptyReg",
	      SYM_MODULE,
	      &INST_reportMemoryTraffic_responseAdapter_notEmptyReg);
  init_symbol(&symbols[87u],
	      "reportMemoryTraffic_responseAdapter_notEmptyReg__h846",
	      SYM_DEF,
	      &DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846,
	      1u);
  init_symbol(&symbols[88u],
	      "reportMemoryTraffic_responseAdapter_shift",
	      SYM_MODULE,
	      &INST_reportMemoryTraffic_responseAdapter_shift);
  init_symbol(&symbols[89u],
	      "reportStateDbg_responseAdapter_bits",
	      SYM_MODULE,
	      &INST_reportStateDbg_responseAdapter_bits);
  init_symbol(&symbols[90u],
	      "reportStateDbg_responseAdapter_count",
	      SYM_MODULE,
	      &INST_reportStateDbg_responseAdapter_count);
  init_symbol(&symbols[91u],
	      "reportStateDbg_responseAdapter_notEmptyReg",
	      SYM_MODULE,
	      &INST_reportStateDbg_responseAdapter_notEmptyReg);
  init_symbol(&symbols[92u],
	      "reportStateDbg_responseAdapter_notEmptyReg__h774",
	      SYM_DEF,
	      &DEF_reportStateDbg_responseAdapter_notEmptyReg__h774,
	      1u);
  init_symbol(&symbols[93u],
	      "reportStateDbg_responseAdapter_shift",
	      SYM_MODULE,
	      &INST_reportStateDbg_responseAdapter_shift);
  init_symbol(&symbols[94u],
	      "WILL_FIRE_methods_addrResponse_enq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_methods_addrResponse_enq,
	      1u);
  init_symbol(&symbols[95u],
	      "WILL_FIRE_methods_error_enq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_methods_error_enq,
	      1u);
  init_symbol(&symbols[96u],
	      "WILL_FIRE_methods_reportMemoryTraffic_enq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_methods_reportMemoryTraffic_enq,
	      1u);
  init_symbol(&symbols[97u],
	      "WILL_FIRE_methods_reportStateDbg_enq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_methods_reportStateDbg_enq,
	      1u);
  init_symbol(&symbols[98u],
	      "WILL_FIRE_portalIfc_indications_0_deq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_portalIfc_indications_0_deq,
	      1u);
  init_symbol(&symbols[99u],
	      "WILL_FIRE_portalIfc_indications_1_deq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_portalIfc_indications_1_deq,
	      1u);
  init_symbol(&symbols[100u],
	      "WILL_FIRE_portalIfc_indications_2_deq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_portalIfc_indications_2_deq,
	      1u);
  init_symbol(&symbols[101u],
	      "WILL_FIRE_portalIfc_indications_3_deq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_portalIfc_indications_3_deq,
	      1u);
}


/* Rule actions */


/* Methods */

tUInt32 MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_messageSize_size(tUInt32 ARG_portalIfc_messageSize_size_methodNumber)
{
  PORT_portalIfc_messageSize_size_methodNumber = ARG_portalIfc_messageSize_size_methodNumber;
  switch (ARG_portalIfc_messageSize_size_methodNumber) {
  case 0u:
  case 2u:
    PORT_portalIfc_messageSize_size = 64u;
    break;
  case 1u:
    PORT_portalIfc_messageSize_size = 128u;
    break;
  default:
    PORT_portalIfc_messageSize_size = 192u;
  }
  return PORT_portalIfc_messageSize_size;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_messageSize_size()
{
  DEF_CAN_FIRE_portalIfc_messageSize_size = (tUInt8)1u;
  PORT_RDY_portalIfc_messageSize_size = DEF_CAN_FIRE_portalIfc_messageSize_size;
  return PORT_RDY_portalIfc_messageSize_size;
}

void MOD_mkMemServerIndicationOutputPipes::METH_methods_addrResponse_enq(tUInt64 ARG_methods_addrResponse_enq_v)
{
  PORT_EN_methods_addrResponse_enq = (tUInt8)1u;
  DEF_WILL_FIRE_methods_addrResponse_enq = (tUInt8)1u;
  PORT_methods_addrResponse_enq_v = ARG_methods_addrResponse_enq_v;
  INST_addrResponse_responseAdapter_bits.METH_write(ARG_methods_addrResponse_enq_v);
  INST_addrResponse_responseAdapter_notEmptyReg.METH_write((tUInt8)1u);
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_methods_addrResponse_enq()
{
  DEF_addrResponse_responseAdapter_notEmptyReg__h723 = INST_addrResponse_responseAdapter_notEmptyReg.METH_read();
  DEF_NOT_addrResponse_responseAdapter_notEmptyReg___d2 = !DEF_addrResponse_responseAdapter_notEmptyReg__h723;
  DEF_CAN_FIRE_methods_addrResponse_enq = DEF_NOT_addrResponse_responseAdapter_notEmptyReg___d2;
  PORT_RDY_methods_addrResponse_enq = DEF_CAN_FIRE_methods_addrResponse_enq;
  return PORT_RDY_methods_addrResponse_enq;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_methods_addrResponse_notFull()
{
  DEF_addrResponse_responseAdapter_notEmptyReg__h723 = INST_addrResponse_responseAdapter_notEmptyReg.METH_read();
  DEF_NOT_addrResponse_responseAdapter_notEmptyReg___d2 = !DEF_addrResponse_responseAdapter_notEmptyReg__h723;
  PORT_methods_addrResponse_notFull = DEF_NOT_addrResponse_responseAdapter_notEmptyReg___d2;
  return PORT_methods_addrResponse_notFull;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_methods_addrResponse_notFull()
{
  DEF_CAN_FIRE_methods_addrResponse_notFull = (tUInt8)1u;
  PORT_RDY_methods_addrResponse_notFull = DEF_CAN_FIRE_methods_addrResponse_notFull;
  return PORT_RDY_methods_addrResponse_notFull;
}

void MOD_mkMemServerIndicationOutputPipes::METH_methods_reportStateDbg_enq(tUWide ARG_methods_reportStateDbg_enq_v)
{
  PORT_EN_methods_reportStateDbg_enq = (tUInt8)1u;
  DEF_WILL_FIRE_methods_reportStateDbg_enq = (tUInt8)1u;
  PORT_methods_reportStateDbg_enq_v = ARG_methods_reportStateDbg_enq_v;
  INST_reportStateDbg_responseAdapter_bits.METH_write(ARG_methods_reportStateDbg_enq_v);
  INST_reportStateDbg_responseAdapter_notEmptyReg.METH_write((tUInt8)1u);
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_methods_reportStateDbg_enq()
{
  DEF_reportStateDbg_responseAdapter_notEmptyReg__h774 = INST_reportStateDbg_responseAdapter_notEmptyReg.METH_read();
  DEF_NOT_reportStateDbg_responseAdapter_notEmptyReg___d4 = !DEF_reportStateDbg_responseAdapter_notEmptyReg__h774;
  DEF_CAN_FIRE_methods_reportStateDbg_enq = DEF_NOT_reportStateDbg_responseAdapter_notEmptyReg___d4;
  PORT_RDY_methods_reportStateDbg_enq = DEF_CAN_FIRE_methods_reportStateDbg_enq;
  return PORT_RDY_methods_reportStateDbg_enq;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_methods_reportStateDbg_notFull()
{
  DEF_reportStateDbg_responseAdapter_notEmptyReg__h774 = INST_reportStateDbg_responseAdapter_notEmptyReg.METH_read();
  DEF_NOT_reportStateDbg_responseAdapter_notEmptyReg___d4 = !DEF_reportStateDbg_responseAdapter_notEmptyReg__h774;
  PORT_methods_reportStateDbg_notFull = DEF_NOT_reportStateDbg_responseAdapter_notEmptyReg___d4;
  return PORT_methods_reportStateDbg_notFull;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_methods_reportStateDbg_notFull()
{
  DEF_CAN_FIRE_methods_reportStateDbg_notFull = (tUInt8)1u;
  PORT_RDY_methods_reportStateDbg_notFull = DEF_CAN_FIRE_methods_reportStateDbg_notFull;
  return PORT_RDY_methods_reportStateDbg_notFull;
}

void MOD_mkMemServerIndicationOutputPipes::METH_methods_reportMemoryTraffic_enq(tUInt64 ARG_methods_reportMemoryTraffic_enq_v)
{
  PORT_EN_methods_reportMemoryTraffic_enq = (tUInt8)1u;
  DEF_WILL_FIRE_methods_reportMemoryTraffic_enq = (tUInt8)1u;
  PORT_methods_reportMemoryTraffic_enq_v = ARG_methods_reportMemoryTraffic_enq_v;
  INST_reportMemoryTraffic_responseAdapter_bits.METH_write(ARG_methods_reportMemoryTraffic_enq_v);
  INST_reportMemoryTraffic_responseAdapter_notEmptyReg.METH_write((tUInt8)1u);
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_methods_reportMemoryTraffic_enq()
{
  DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846 = INST_reportMemoryTraffic_responseAdapter_notEmptyReg.METH_read();
  DEF_NOT_reportMemoryTraffic_responseAdapter_notEmp_ETC___d6 = !DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846;
  DEF_CAN_FIRE_methods_reportMemoryTraffic_enq = DEF_NOT_reportMemoryTraffic_responseAdapter_notEmp_ETC___d6;
  PORT_RDY_methods_reportMemoryTraffic_enq = DEF_CAN_FIRE_methods_reportMemoryTraffic_enq;
  return PORT_RDY_methods_reportMemoryTraffic_enq;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_methods_reportMemoryTraffic_notFull()
{
  DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846 = INST_reportMemoryTraffic_responseAdapter_notEmptyReg.METH_read();
  DEF_NOT_reportMemoryTraffic_responseAdapter_notEmp_ETC___d6 = !DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846;
  PORT_methods_reportMemoryTraffic_notFull = DEF_NOT_reportMemoryTraffic_responseAdapter_notEmp_ETC___d6;
  return PORT_methods_reportMemoryTraffic_notFull;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_methods_reportMemoryTraffic_notFull()
{
  DEF_CAN_FIRE_methods_reportMemoryTraffic_notFull = (tUInt8)1u;
  PORT_RDY_methods_reportMemoryTraffic_notFull = DEF_CAN_FIRE_methods_reportMemoryTraffic_notFull;
  return PORT_RDY_methods_reportMemoryTraffic_notFull;
}

void MOD_mkMemServerIndicationOutputPipes::METH_methods_error_enq(tUWide ARG_methods_error_enq_v)
{
  PORT_EN_methods_error_enq = (tUInt8)1u;
  DEF_WILL_FIRE_methods_error_enq = (tUInt8)1u;
  PORT_methods_error_enq_v = ARG_methods_error_enq_v;
  INST_error_responseAdapter_bits.METH_write(ARG_methods_error_enq_v);
  INST_error_responseAdapter_notEmptyReg.METH_write((tUInt8)1u);
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_methods_error_enq()
{
  DEF_error_responseAdapter_notEmptyReg__h894 = INST_error_responseAdapter_notEmptyReg.METH_read();
  DEF_NOT_error_responseAdapter_notEmptyReg___d8 = !DEF_error_responseAdapter_notEmptyReg__h894;
  DEF_CAN_FIRE_methods_error_enq = DEF_NOT_error_responseAdapter_notEmptyReg___d8;
  PORT_RDY_methods_error_enq = DEF_CAN_FIRE_methods_error_enq;
  return PORT_RDY_methods_error_enq;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_methods_error_notFull()
{
  DEF_error_responseAdapter_notEmptyReg__h894 = INST_error_responseAdapter_notEmptyReg.METH_read();
  DEF_NOT_error_responseAdapter_notEmptyReg___d8 = !DEF_error_responseAdapter_notEmptyReg__h894;
  PORT_methods_error_notFull = DEF_NOT_error_responseAdapter_notEmptyReg___d8;
  return PORT_methods_error_notFull;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_methods_error_notFull()
{
  DEF_CAN_FIRE_methods_error_notFull = (tUInt8)1u;
  PORT_RDY_methods_error_notFull = DEF_CAN_FIRE_methods_error_notFull;
  return PORT_RDY_methods_error_notFull;
}

tUInt32 MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_indications_0_first()
{
  DEF_x__h1181 = INST_addrResponse_responseAdapter_bits.METH_read();
  PORT_portalIfc_indications_0_first = (tUInt32)(DEF_x__h1181 >> 32u);
  return PORT_portalIfc_indications_0_first;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_indications_0_first()
{
  DEF_addrResponse_responseAdapter_notEmptyReg__h723 = INST_addrResponse_responseAdapter_notEmptyReg.METH_read();
  DEF_CAN_FIRE_portalIfc_indications_0_first = DEF_addrResponse_responseAdapter_notEmptyReg__h723;
  PORT_RDY_portalIfc_indications_0_first = DEF_CAN_FIRE_portalIfc_indications_0_first;
  return PORT_RDY_portalIfc_indications_0_first;
}

void MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_indications_0_deq()
{
  tUInt64 DEF_x__h1285;
  tUInt8 DEF_x__h1270;
  tUInt8 DEF_x__h1240;
  tUInt8 DEF_NOT_addrResponse_responseAdapter_count_5___d16;
  tUInt8 DEF_NOT_addrResponse_responseAdapter_count_5_6_AND_ETC___d18;
  tUInt32 DEF_addrResponse_responseAdapter_bits_BITS_31_TO_0___h1293;
  tUInt8 DEF_addrResponse_responseAdapter_count__h1204;
  tUInt8 DEF__read__h169;
  PORT_EN_portalIfc_indications_0_deq = (tUInt8)1u;
  DEF_WILL_FIRE_portalIfc_indications_0_deq = (tUInt8)1u;
  DEF_x__h1181 = INST_addrResponse_responseAdapter_bits.METH_read();
  DEF__read__h169 = INST_addrResponse_responseAdapter_shift.METH_read();
  DEF_addrResponse_responseAdapter_count__h1204 = INST_addrResponse_responseAdapter_count.METH_read();
  DEF_addrResponse_responseAdapter_bits_BITS_31_TO_0___h1293 = (tUInt32)(DEF_x__h1181);
  DEF_NOT_addrResponse_responseAdapter_count_5___d16 = !DEF_addrResponse_responseAdapter_count__h1204;
  DEF_x__h1240 = (tUInt8)1u & (DEF_addrResponse_responseAdapter_count__h1204 + (tUInt8)1u);
  DEF_NOT_addrResponse_responseAdapter_count_5_6_AND_ETC___d18 = DEF_NOT_addrResponse_responseAdapter_count_5___d16 && DEF_x__h1240;
  DEF_x__h1270 = (tUInt8)127u & (DEF__read__h169 + (tUInt8)32u);
  DEF_x__h1285 = (((tUInt64)(DEF_addrResponse_responseAdapter_bits_BITS_31_TO_0___h1293)) << 32u) | (tUInt64)(0u);
  INST_addrResponse_responseAdapter_count.METH_write(DEF_NOT_addrResponse_responseAdapter_count_5_6_AND_ETC___d18);
  if (DEF_addrResponse_responseAdapter_count__h1204)
    INST_addrResponse_responseAdapter_notEmptyReg.METH_write((tUInt8)0u);
  if (DEF_NOT_addrResponse_responseAdapter_count_5___d16)
    INST_addrResponse_responseAdapter_shift.METH_write(DEF_x__h1270);
  if (DEF_NOT_addrResponse_responseAdapter_count_5___d16)
    INST_addrResponse_responseAdapter_bits.METH_write(DEF_x__h1285);
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_indications_0_deq()
{
  DEF_addrResponse_responseAdapter_notEmptyReg__h723 = INST_addrResponse_responseAdapter_notEmptyReg.METH_read();
  DEF_CAN_FIRE_portalIfc_indications_0_deq = DEF_addrResponse_responseAdapter_notEmptyReg__h723;
  PORT_RDY_portalIfc_indications_0_deq = DEF_CAN_FIRE_portalIfc_indications_0_deq;
  return PORT_RDY_portalIfc_indications_0_deq;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_indications_0_notEmpty()
{
  DEF_addrResponse_responseAdapter_notEmptyReg__h723 = INST_addrResponse_responseAdapter_notEmptyReg.METH_read();
  PORT_portalIfc_indications_0_notEmpty = DEF_addrResponse_responseAdapter_notEmptyReg__h723;
  return PORT_portalIfc_indications_0_notEmpty;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_indications_0_notEmpty()
{
  DEF_CAN_FIRE_portalIfc_indications_0_notEmpty = (tUInt8)1u;
  PORT_RDY_portalIfc_indications_0_notEmpty = DEF_CAN_FIRE_portalIfc_indications_0_notEmpty;
  return PORT_RDY_portalIfc_indications_0_notEmpty;
}

tUInt32 MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_indications_1_first()
{
  DEF_x__h1314 = INST_reportStateDbg_responseAdapter_bits.METH_read();
  PORT_portalIfc_indications_1_first = DEF_x__h1314.get_whole_word(3u);
  return PORT_portalIfc_indications_1_first;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_indications_1_first()
{
  DEF_reportStateDbg_responseAdapter_notEmptyReg__h774 = INST_reportStateDbg_responseAdapter_notEmptyReg.METH_read();
  DEF_CAN_FIRE_portalIfc_indications_1_first = DEF_reportStateDbg_responseAdapter_notEmptyReg__h774;
  PORT_RDY_portalIfc_indications_1_first = DEF_CAN_FIRE_portalIfc_indications_1_first;
  return PORT_RDY_portalIfc_indications_1_first;
}

void MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_indications_1_deq()
{
  tUInt8 DEF_x__h1403;
  tUInt8 DEF_NOT_reportStateDbg_responseAdapter_count_4_EQ_3_5___d28;
  tUInt8 DEF_x__h1373;
  tUInt8 DEF_reportStateDbg_responseAdapter_count_4_EQ_3___d25;
  tUInt8 DEF_IF_reportStateDbg_responseAdapter_count_4_EQ_3_ETC___d27;
  tUInt8 DEF__read__h290;
  tUInt8 DEF__read__h326;
  PORT_EN_portalIfc_indications_1_deq = (tUInt8)1u;
  DEF_WILL_FIRE_portalIfc_indications_1_deq = (tUInt8)1u;
  DEF_x__h1314 = INST_reportStateDbg_responseAdapter_bits.METH_read();
  DEF__read__h326 = INST_reportStateDbg_responseAdapter_shift.METH_read();
  DEF__read__h290 = INST_reportStateDbg_responseAdapter_count.METH_read();
  wop_primExtractWide(96u,
		      128u,
		      DEF_x__h1314,
		      32u,
		      95u,
		      32u,
		      0u,
		      DEF_reportStateDbg_responseAdapter_bits_BITS_95_TO_0___h1425);
  DEF_reportStateDbg_responseAdapter_count_4_EQ_3___d25 = DEF__read__h290 == (tUInt8)3u;
  DEF_x__h1373 = (tUInt8)3u & (DEF__read__h290 + (tUInt8)1u);
  DEF_IF_reportStateDbg_responseAdapter_count_4_EQ_3_ETC___d27 = DEF_reportStateDbg_responseAdapter_count_4_EQ_3___d25 ? (tUInt8)0u : DEF_x__h1373;
  DEF_NOT_reportStateDbg_responseAdapter_count_4_EQ_3_5___d28 = !DEF_reportStateDbg_responseAdapter_count_4_EQ_3___d25;
  DEF_x__h1403 = (tUInt8)255u & (DEF__read__h326 + (tUInt8)32u);
  DEF_x__h1418.set_whole_word(DEF_reportStateDbg_responseAdapter_bits_BITS_95_TO_0___h1425.get_whole_word(2u),
			      3u).set_whole_word(DEF_reportStateDbg_responseAdapter_bits_BITS_95_TO_0___h1425.get_whole_word(1u),
						 2u).build_concat((((tUInt64)(DEF_reportStateDbg_responseAdapter_bits_BITS_95_TO_0___h1425.get_whole_word(0u))) << 32u) | (tUInt64)(0u),
								  0u,
								  64u);
  INST_reportStateDbg_responseAdapter_count.METH_write(DEF_IF_reportStateDbg_responseAdapter_count_4_EQ_3_ETC___d27);
  if (DEF_reportStateDbg_responseAdapter_count_4_EQ_3___d25)
    INST_reportStateDbg_responseAdapter_notEmptyReg.METH_write((tUInt8)0u);
  if (DEF_NOT_reportStateDbg_responseAdapter_count_4_EQ_3_5___d28)
    INST_reportStateDbg_responseAdapter_shift.METH_write(DEF_x__h1403);
  if (DEF_NOT_reportStateDbg_responseAdapter_count_4_EQ_3_5___d28)
    INST_reportStateDbg_responseAdapter_bits.METH_write(DEF_x__h1418);
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_indications_1_deq()
{
  DEF_reportStateDbg_responseAdapter_notEmptyReg__h774 = INST_reportStateDbg_responseAdapter_notEmptyReg.METH_read();
  DEF_CAN_FIRE_portalIfc_indications_1_deq = DEF_reportStateDbg_responseAdapter_notEmptyReg__h774;
  PORT_RDY_portalIfc_indications_1_deq = DEF_CAN_FIRE_portalIfc_indications_1_deq;
  return PORT_RDY_portalIfc_indications_1_deq;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_indications_1_notEmpty()
{
  DEF_reportStateDbg_responseAdapter_notEmptyReg__h774 = INST_reportStateDbg_responseAdapter_notEmptyReg.METH_read();
  PORT_portalIfc_indications_1_notEmpty = DEF_reportStateDbg_responseAdapter_notEmptyReg__h774;
  return PORT_portalIfc_indications_1_notEmpty;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_indications_1_notEmpty()
{
  DEF_CAN_FIRE_portalIfc_indications_1_notEmpty = (tUInt8)1u;
  PORT_RDY_portalIfc_indications_1_notEmpty = DEF_CAN_FIRE_portalIfc_indications_1_notEmpty;
  return PORT_RDY_portalIfc_indications_1_notEmpty;
}

tUInt32 MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_indications_2_first()
{
  DEF_x__h1446 = INST_reportMemoryTraffic_responseAdapter_bits.METH_read();
  PORT_portalIfc_indications_2_first = (tUInt32)(DEF_x__h1446 >> 32u);
  return PORT_portalIfc_indications_2_first;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_indications_2_first()
{
  DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846 = INST_reportMemoryTraffic_responseAdapter_notEmptyReg.METH_read();
  DEF_CAN_FIRE_portalIfc_indications_2_first = DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846;
  PORT_RDY_portalIfc_indications_2_first = DEF_CAN_FIRE_portalIfc_indications_2_first;
  return PORT_RDY_portalIfc_indications_2_first;
}

void MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_indications_2_deq()
{
  tUInt64 DEF_x__h1550;
  tUInt8 DEF_x__h1535;
  tUInt8 DEF_x__h1505;
  tUInt8 DEF_NOT_reportMemoryTraffic_responseAdapter_count_4___d35;
  tUInt8 DEF_NOT_reportMemoryTraffic_responseAdapter_count__ETC___d37;
  tUInt32 DEF_reportMemoryTraffic_responseAdapter_bits_BITS_31_TO_0___h1557;
  tUInt8 DEF_reportMemoryTraffic_responseAdapter_count__h1469;
  tUInt8 DEF__read__h478;
  PORT_EN_portalIfc_indications_2_deq = (tUInt8)1u;
  DEF_WILL_FIRE_portalIfc_indications_2_deq = (tUInt8)1u;
  DEF_x__h1446 = INST_reportMemoryTraffic_responseAdapter_bits.METH_read();
  DEF__read__h478 = INST_reportMemoryTraffic_responseAdapter_shift.METH_read();
  DEF_reportMemoryTraffic_responseAdapter_count__h1469 = INST_reportMemoryTraffic_responseAdapter_count.METH_read();
  DEF_reportMemoryTraffic_responseAdapter_bits_BITS_31_TO_0___h1557 = (tUInt32)(DEF_x__h1446);
  DEF_NOT_reportMemoryTraffic_responseAdapter_count_4___d35 = !DEF_reportMemoryTraffic_responseAdapter_count__h1469;
  DEF_x__h1505 = (tUInt8)1u & (DEF_reportMemoryTraffic_responseAdapter_count__h1469 + (tUInt8)1u);
  DEF_NOT_reportMemoryTraffic_responseAdapter_count__ETC___d37 = DEF_NOT_reportMemoryTraffic_responseAdapter_count_4___d35 && DEF_x__h1505;
  DEF_x__h1535 = (tUInt8)127u & (DEF__read__h478 + (tUInt8)32u);
  DEF_x__h1550 = (((tUInt64)(DEF_reportMemoryTraffic_responseAdapter_bits_BITS_31_TO_0___h1557)) << 32u) | (tUInt64)(0u);
  INST_reportMemoryTraffic_responseAdapter_count.METH_write(DEF_NOT_reportMemoryTraffic_responseAdapter_count__ETC___d37);
  if (DEF_reportMemoryTraffic_responseAdapter_count__h1469)
    INST_reportMemoryTraffic_responseAdapter_notEmptyReg.METH_write((tUInt8)0u);
  if (DEF_NOT_reportMemoryTraffic_responseAdapter_count_4___d35)
    INST_reportMemoryTraffic_responseAdapter_shift.METH_write(DEF_x__h1535);
  if (DEF_NOT_reportMemoryTraffic_responseAdapter_count_4___d35)
    INST_reportMemoryTraffic_responseAdapter_bits.METH_write(DEF_x__h1550);
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_indications_2_deq()
{
  DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846 = INST_reportMemoryTraffic_responseAdapter_notEmptyReg.METH_read();
  DEF_CAN_FIRE_portalIfc_indications_2_deq = DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846;
  PORT_RDY_portalIfc_indications_2_deq = DEF_CAN_FIRE_portalIfc_indications_2_deq;
  return PORT_RDY_portalIfc_indications_2_deq;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_indications_2_notEmpty()
{
  DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846 = INST_reportMemoryTraffic_responseAdapter_notEmptyReg.METH_read();
  PORT_portalIfc_indications_2_notEmpty = DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846;
  return PORT_portalIfc_indications_2_notEmpty;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_indications_2_notEmpty()
{
  DEF_CAN_FIRE_portalIfc_indications_2_notEmpty = (tUInt8)1u;
  PORT_RDY_portalIfc_indications_2_notEmpty = DEF_CAN_FIRE_portalIfc_indications_2_notEmpty;
  return PORT_RDY_portalIfc_indications_2_notEmpty;
}

tUInt32 MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_indications_3_first()
{
  DEF_x__h1578 = INST_error_responseAdapter_bits.METH_read();
  PORT_portalIfc_indications_3_first = DEF_x__h1578.get_whole_word(5u);
  return PORT_portalIfc_indications_3_first;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_indications_3_first()
{
  DEF_error_responseAdapter_notEmptyReg__h894 = INST_error_responseAdapter_notEmptyReg.METH_read();
  DEF_CAN_FIRE_portalIfc_indications_3_first = DEF_error_responseAdapter_notEmptyReg__h894;
  PORT_RDY_portalIfc_indications_3_first = DEF_CAN_FIRE_portalIfc_indications_3_first;
  return PORT_RDY_portalIfc_indications_3_first;
}

void MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_indications_3_deq()
{
  tUInt32 DEF_x__h1667;
  tUInt8 DEF_NOT_error_responseAdapter_count_3_EQ_5_4___d47;
  tUInt8 DEF_x__h1637;
  tUInt8 DEF_error_responseAdapter_count_3_EQ_5___d44;
  tUInt8 DEF_IF_error_responseAdapter_count_3_EQ_5_4_THEN_0_ETC___d46;
  tUInt8 DEF__read__h599;
  tUInt32 DEF__read__h635;
  PORT_EN_portalIfc_indications_3_deq = (tUInt8)1u;
  DEF_WILL_FIRE_portalIfc_indications_3_deq = (tUInt8)1u;
  DEF_x__h1578 = INST_error_responseAdapter_bits.METH_read();
  DEF__read__h635 = INST_error_responseAdapter_shift.METH_read();
  DEF__read__h599 = INST_error_responseAdapter_count.METH_read();
  wop_primExtractWide(160u,
		      192u,
		      DEF_x__h1578,
		      32u,
		      159u,
		      32u,
		      0u,
		      DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689);
  DEF_error_responseAdapter_count_3_EQ_5___d44 = DEF__read__h599 == (tUInt8)5u;
  DEF_x__h1637 = (tUInt8)7u & (DEF__read__h599 + (tUInt8)1u);
  DEF_IF_error_responseAdapter_count_3_EQ_5_4_THEN_0_ETC___d46 = DEF_error_responseAdapter_count_3_EQ_5___d44 ? (tUInt8)0u : DEF_x__h1637;
  DEF_NOT_error_responseAdapter_count_3_EQ_5_4___d47 = !DEF_error_responseAdapter_count_3_EQ_5___d44;
  DEF_x__h1667 = 511u & (DEF__read__h635 + 32u);
  DEF_x__h1682.set_whole_word(DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689.get_whole_word(4u),
			      5u).set_whole_word(DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689.get_whole_word(3u),
						 4u).set_whole_word(DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689.get_whole_word(2u),
								    3u).set_whole_word(DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689.get_whole_word(1u),
										       2u).build_concat((((tUInt64)(DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689.get_whole_word(0u))) << 32u) | (tUInt64)(0u),
													0u,
													64u);
  INST_error_responseAdapter_count.METH_write(DEF_IF_error_responseAdapter_count_3_EQ_5_4_THEN_0_ETC___d46);
  if (DEF_error_responseAdapter_count_3_EQ_5___d44)
    INST_error_responseAdapter_notEmptyReg.METH_write((tUInt8)0u);
  if (DEF_NOT_error_responseAdapter_count_3_EQ_5_4___d47)
    INST_error_responseAdapter_shift.METH_write(DEF_x__h1667);
  if (DEF_NOT_error_responseAdapter_count_3_EQ_5_4___d47)
    INST_error_responseAdapter_bits.METH_write(DEF_x__h1682);
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_indications_3_deq()
{
  DEF_error_responseAdapter_notEmptyReg__h894 = INST_error_responseAdapter_notEmptyReg.METH_read();
  DEF_CAN_FIRE_portalIfc_indications_3_deq = DEF_error_responseAdapter_notEmptyReg__h894;
  PORT_RDY_portalIfc_indications_3_deq = DEF_CAN_FIRE_portalIfc_indications_3_deq;
  return PORT_RDY_portalIfc_indications_3_deq;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_indications_3_notEmpty()
{
  DEF_error_responseAdapter_notEmptyReg__h894 = INST_error_responseAdapter_notEmptyReg.METH_read();
  PORT_portalIfc_indications_3_notEmpty = DEF_error_responseAdapter_notEmptyReg__h894;
  return PORT_portalIfc_indications_3_notEmpty;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_indications_3_notEmpty()
{
  DEF_CAN_FIRE_portalIfc_indications_3_notEmpty = (tUInt8)1u;
  PORT_RDY_portalIfc_indications_3_notEmpty = DEF_CAN_FIRE_portalIfc_indications_3_notEmpty;
  return PORT_RDY_portalIfc_indications_3_notEmpty;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_intr_status()
{
  tUInt8 DEF_reportStateDbg_responseAdapter_notEmptyReg_OR__ETC___d53;
  DEF_error_responseAdapter_notEmptyReg__h894 = INST_error_responseAdapter_notEmptyReg.METH_read();
  DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846 = INST_reportMemoryTraffic_responseAdapter_notEmptyReg.METH_read();
  DEF_reportStateDbg_responseAdapter_notEmptyReg__h774 = INST_reportStateDbg_responseAdapter_notEmptyReg.METH_read();
  DEF_addrResponse_responseAdapter_notEmptyReg__h723 = INST_addrResponse_responseAdapter_notEmptyReg.METH_read();
  DEF_reportStateDbg_responseAdapter_notEmptyReg_OR__ETC___d53 = DEF_reportStateDbg_responseAdapter_notEmptyReg__h774 || (DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846 || DEF_error_responseAdapter_notEmptyReg__h894);
  PORT_portalIfc_intr_status = DEF_addrResponse_responseAdapter_notEmptyReg__h723 || DEF_reportStateDbg_responseAdapter_notEmptyReg_OR__ETC___d53;
  return PORT_portalIfc_intr_status;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_intr_status()
{
  DEF_CAN_FIRE_portalIfc_intr_status = (tUInt8)1u;
  PORT_RDY_portalIfc_intr_status = DEF_CAN_FIRE_portalIfc_intr_status;
  return PORT_RDY_portalIfc_intr_status;
}

tUInt32 MOD_mkMemServerIndicationOutputPipes::METH_portalIfc_intr_channel()
{
  tUInt32 DEF_IF_reportStateDbg_responseAdapter_notEmptyReg__ETC___d56;
  DEF_error_responseAdapter_notEmptyReg__h894 = INST_error_responseAdapter_notEmptyReg.METH_read();
  DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846 = INST_reportMemoryTraffic_responseAdapter_notEmptyReg.METH_read();
  DEF_reportStateDbg_responseAdapter_notEmptyReg__h774 = INST_reportStateDbg_responseAdapter_notEmptyReg.METH_read();
  DEF_addrResponse_responseAdapter_notEmptyReg__h723 = INST_addrResponse_responseAdapter_notEmptyReg.METH_read();
  DEF_IF_reportStateDbg_responseAdapter_notEmptyReg__ETC___d56 = DEF_reportStateDbg_responseAdapter_notEmptyReg__h774 ? 1u : (DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846 ? 2u : (DEF_error_responseAdapter_notEmptyReg__h894 ? 3u : 4294967295u));
  PORT_portalIfc_intr_channel = DEF_addrResponse_responseAdapter_notEmptyReg__h723 ? 0u : DEF_IF_reportStateDbg_responseAdapter_notEmptyReg__ETC___d56;
  return PORT_portalIfc_intr_channel;
}

tUInt8 MOD_mkMemServerIndicationOutputPipes::METH_RDY_portalIfc_intr_channel()
{
  DEF_CAN_FIRE_portalIfc_intr_channel = (tUInt8)1u;
  PORT_RDY_portalIfc_intr_channel = DEF_CAN_FIRE_portalIfc_intr_channel;
  return PORT_RDY_portalIfc_intr_channel;
}


/* Reset routines */

void MOD_mkMemServerIndicationOutputPipes::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_reportStateDbg_responseAdapter_shift.reset_RST(ARG_rst_in);
  INST_reportStateDbg_responseAdapter_notEmptyReg.reset_RST(ARG_rst_in);
  INST_reportStateDbg_responseAdapter_count.reset_RST(ARG_rst_in);
  INST_reportStateDbg_responseAdapter_bits.reset_RST(ARG_rst_in);
  INST_reportMemoryTraffic_responseAdapter_shift.reset_RST(ARG_rst_in);
  INST_reportMemoryTraffic_responseAdapter_notEmptyReg.reset_RST(ARG_rst_in);
  INST_reportMemoryTraffic_responseAdapter_count.reset_RST(ARG_rst_in);
  INST_reportMemoryTraffic_responseAdapter_bits.reset_RST(ARG_rst_in);
  INST_error_responseAdapter_shift.reset_RST(ARG_rst_in);
  INST_error_responseAdapter_notEmptyReg.reset_RST(ARG_rst_in);
  INST_error_responseAdapter_count.reset_RST(ARG_rst_in);
  INST_error_responseAdapter_bits.reset_RST(ARG_rst_in);
  INST_addrResponse_responseAdapter_shift.reset_RST(ARG_rst_in);
  INST_addrResponse_responseAdapter_notEmptyReg.reset_RST(ARG_rst_in);
  INST_addrResponse_responseAdapter_count.reset_RST(ARG_rst_in);
  INST_addrResponse_responseAdapter_bits.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkMemServerIndicationOutputPipes::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkMemServerIndicationOutputPipes::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_addrResponse_responseAdapter_bits.dump_state(indent + 2u);
  INST_addrResponse_responseAdapter_count.dump_state(indent + 2u);
  INST_addrResponse_responseAdapter_notEmptyReg.dump_state(indent + 2u);
  INST_addrResponse_responseAdapter_shift.dump_state(indent + 2u);
  INST_error_responseAdapter_bits.dump_state(indent + 2u);
  INST_error_responseAdapter_count.dump_state(indent + 2u);
  INST_error_responseAdapter_notEmptyReg.dump_state(indent + 2u);
  INST_error_responseAdapter_shift.dump_state(indent + 2u);
  INST_reportMemoryTraffic_responseAdapter_bits.dump_state(indent + 2u);
  INST_reportMemoryTraffic_responseAdapter_count.dump_state(indent + 2u);
  INST_reportMemoryTraffic_responseAdapter_notEmptyReg.dump_state(indent + 2u);
  INST_reportMemoryTraffic_responseAdapter_shift.dump_state(indent + 2u);
  INST_reportStateDbg_responseAdapter_bits.dump_state(indent + 2u);
  INST_reportStateDbg_responseAdapter_count.dump_state(indent + 2u);
  INST_reportStateDbg_responseAdapter_notEmptyReg.dump_state(indent + 2u);
  INST_reportStateDbg_responseAdapter_shift.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkMemServerIndicationOutputPipes::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 115u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_methods_addrResponse_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_methods_addrResponse_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_methods_error_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_methods_error_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_methods_reportMemoryTraffic_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_methods_reportMemoryTraffic_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_methods_reportStateDbg_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_methods_reportStateDbg_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_0_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_0_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_0_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_1_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_1_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_1_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_2_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_2_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_2_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_3_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_3_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_indications_3_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_intr_channel", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_intr_status", 1u);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_portalIfc_messageSize_size", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_addrResponse_responseAdapter_notEmptyReg___d2", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_error_responseAdapter_notEmptyReg___d8", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_reportMemoryTraffic_responseAdapter_notEmp_ETC___d6", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_reportStateDbg_responseAdapter_notEmptyReg___d4", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_methods_addrResponse_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_methods_error_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_methods_reportMemoryTraffic_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_methods_reportStateDbg_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_portalIfc_indications_0_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_portalIfc_indications_1_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_portalIfc_indications_2_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_portalIfc_indications_3_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "addrResponse_responseAdapter_notEmptyReg__h723", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "error_responseAdapter_bits_BITS_159_TO_0___h1689", 160u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "error_responseAdapter_notEmptyReg__h894", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "reportMemoryTraffic_responseAdapter_notEmptyReg__h846", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "reportStateDbg_responseAdapter_bits_BITS_95_TO_0___h1425", 96u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "reportStateDbg_responseAdapter_notEmptyReg__h774", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1181", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1314", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1418", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1446", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1578", 192u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1682", 192u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_methods_addrResponse_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_methods_error_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_methods_reportMemoryTraffic_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_methods_reportStateDbg_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_portalIfc_indications_0_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_portalIfc_indications_1_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_portalIfc_indications_2_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_portalIfc_indications_3_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_methods_addrResponse_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_methods_addrResponse_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_methods_error_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_methods_error_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_methods_reportMemoryTraffic_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_methods_reportMemoryTraffic_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_methods_reportStateDbg_enq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_methods_reportStateDbg_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_0_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_0_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_0_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_1_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_1_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_1_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_2_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_2_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_2_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_3_deq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_3_first", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_indications_3_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_intr_channel", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_intr_status", 1u);
  vcd_write_def(sim_hdl, num++, "RDY_portalIfc_messageSize_size", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "methods_addrResponse_enq_v", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "methods_addrResponse_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "methods_error_enq_v", 192u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "methods_error_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "methods_reportMemoryTraffic_enq_v", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "methods_reportMemoryTraffic_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "methods_reportStateDbg_enq_v", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "methods_reportStateDbg_notFull", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_indications_0_first", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_indications_0_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_indications_1_first", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_indications_1_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_indications_2_first", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_indications_2_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_indications_3_first", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_indications_3_notEmpty", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_intr_channel", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "portalIfc_intr_status", 1u);
  vcd_write_def(sim_hdl, num++, "portalIfc_messageSize_size", 16u);
  vcd_write_def(sim_hdl, num++, "portalIfc_messageSize_size_methodNumber", 16u);
  num = INST_addrResponse_responseAdapter_bits.dump_VCD_defs(num);
  num = INST_addrResponse_responseAdapter_count.dump_VCD_defs(num);
  num = INST_addrResponse_responseAdapter_notEmptyReg.dump_VCD_defs(num);
  num = INST_addrResponse_responseAdapter_shift.dump_VCD_defs(num);
  num = INST_error_responseAdapter_bits.dump_VCD_defs(num);
  num = INST_error_responseAdapter_count.dump_VCD_defs(num);
  num = INST_error_responseAdapter_notEmptyReg.dump_VCD_defs(num);
  num = INST_error_responseAdapter_shift.dump_VCD_defs(num);
  num = INST_reportMemoryTraffic_responseAdapter_bits.dump_VCD_defs(num);
  num = INST_reportMemoryTraffic_responseAdapter_count.dump_VCD_defs(num);
  num = INST_reportMemoryTraffic_responseAdapter_notEmptyReg.dump_VCD_defs(num);
  num = INST_reportMemoryTraffic_responseAdapter_shift.dump_VCD_defs(num);
  num = INST_reportStateDbg_responseAdapter_bits.dump_VCD_defs(num);
  num = INST_reportStateDbg_responseAdapter_count.dump_VCD_defs(num);
  num = INST_reportStateDbg_responseAdapter_notEmptyReg.dump_VCD_defs(num);
  num = INST_reportStateDbg_responseAdapter_shift.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkMemServerIndicationOutputPipes::dump_VCD(tVCDDumpType dt,
						    unsigned int levels,
						    MOD_mkMemServerIndicationOutputPipes &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkMemServerIndicationOutputPipes::vcd_defs(tVCDDumpType dt,
						    MOD_mkMemServerIndicationOutputPipes &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 160u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 96u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 192u);
    vcd_write_x(sim_hdl, num++, 192u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 192u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 16u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_methods_addrResponse_enq) != DEF_CAN_FIRE_methods_addrResponse_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_methods_addrResponse_enq, 1u);
	backing.DEF_CAN_FIRE_methods_addrResponse_enq = DEF_CAN_FIRE_methods_addrResponse_enq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_methods_addrResponse_notFull) != DEF_CAN_FIRE_methods_addrResponse_notFull)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_methods_addrResponse_notFull, 1u);
	backing.DEF_CAN_FIRE_methods_addrResponse_notFull = DEF_CAN_FIRE_methods_addrResponse_notFull;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_methods_error_enq) != DEF_CAN_FIRE_methods_error_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_methods_error_enq, 1u);
	backing.DEF_CAN_FIRE_methods_error_enq = DEF_CAN_FIRE_methods_error_enq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_methods_error_notFull) != DEF_CAN_FIRE_methods_error_notFull)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_methods_error_notFull, 1u);
	backing.DEF_CAN_FIRE_methods_error_notFull = DEF_CAN_FIRE_methods_error_notFull;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_methods_reportMemoryTraffic_enq) != DEF_CAN_FIRE_methods_reportMemoryTraffic_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_methods_reportMemoryTraffic_enq, 1u);
	backing.DEF_CAN_FIRE_methods_reportMemoryTraffic_enq = DEF_CAN_FIRE_methods_reportMemoryTraffic_enq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_methods_reportMemoryTraffic_notFull) != DEF_CAN_FIRE_methods_reportMemoryTraffic_notFull)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_methods_reportMemoryTraffic_notFull, 1u);
	backing.DEF_CAN_FIRE_methods_reportMemoryTraffic_notFull = DEF_CAN_FIRE_methods_reportMemoryTraffic_notFull;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_methods_reportStateDbg_enq) != DEF_CAN_FIRE_methods_reportStateDbg_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_methods_reportStateDbg_enq, 1u);
	backing.DEF_CAN_FIRE_methods_reportStateDbg_enq = DEF_CAN_FIRE_methods_reportStateDbg_enq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_methods_reportStateDbg_notFull) != DEF_CAN_FIRE_methods_reportStateDbg_notFull)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_methods_reportStateDbg_notFull, 1u);
	backing.DEF_CAN_FIRE_methods_reportStateDbg_notFull = DEF_CAN_FIRE_methods_reportStateDbg_notFull;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_0_deq) != DEF_CAN_FIRE_portalIfc_indications_0_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_0_deq, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_0_deq = DEF_CAN_FIRE_portalIfc_indications_0_deq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_0_first) != DEF_CAN_FIRE_portalIfc_indications_0_first)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_0_first, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_0_first = DEF_CAN_FIRE_portalIfc_indications_0_first;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_0_notEmpty) != DEF_CAN_FIRE_portalIfc_indications_0_notEmpty)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_0_notEmpty, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_0_notEmpty = DEF_CAN_FIRE_portalIfc_indications_0_notEmpty;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_1_deq) != DEF_CAN_FIRE_portalIfc_indications_1_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_1_deq, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_1_deq = DEF_CAN_FIRE_portalIfc_indications_1_deq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_1_first) != DEF_CAN_FIRE_portalIfc_indications_1_first)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_1_first, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_1_first = DEF_CAN_FIRE_portalIfc_indications_1_first;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_1_notEmpty) != DEF_CAN_FIRE_portalIfc_indications_1_notEmpty)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_1_notEmpty, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_1_notEmpty = DEF_CAN_FIRE_portalIfc_indications_1_notEmpty;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_2_deq) != DEF_CAN_FIRE_portalIfc_indications_2_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_2_deq, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_2_deq = DEF_CAN_FIRE_portalIfc_indications_2_deq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_2_first) != DEF_CAN_FIRE_portalIfc_indications_2_first)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_2_first, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_2_first = DEF_CAN_FIRE_portalIfc_indications_2_first;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_2_notEmpty) != DEF_CAN_FIRE_portalIfc_indications_2_notEmpty)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_2_notEmpty, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_2_notEmpty = DEF_CAN_FIRE_portalIfc_indications_2_notEmpty;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_3_deq) != DEF_CAN_FIRE_portalIfc_indications_3_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_3_deq, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_3_deq = DEF_CAN_FIRE_portalIfc_indications_3_deq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_3_first) != DEF_CAN_FIRE_portalIfc_indications_3_first)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_3_first, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_3_first = DEF_CAN_FIRE_portalIfc_indications_3_first;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_indications_3_notEmpty) != DEF_CAN_FIRE_portalIfc_indications_3_notEmpty)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_indications_3_notEmpty, 1u);
	backing.DEF_CAN_FIRE_portalIfc_indications_3_notEmpty = DEF_CAN_FIRE_portalIfc_indications_3_notEmpty;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_intr_channel) != DEF_CAN_FIRE_portalIfc_intr_channel)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_intr_channel, 1u);
	backing.DEF_CAN_FIRE_portalIfc_intr_channel = DEF_CAN_FIRE_portalIfc_intr_channel;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_intr_status) != DEF_CAN_FIRE_portalIfc_intr_status)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_intr_status, 1u);
	backing.DEF_CAN_FIRE_portalIfc_intr_status = DEF_CAN_FIRE_portalIfc_intr_status;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_portalIfc_messageSize_size) != DEF_CAN_FIRE_portalIfc_messageSize_size)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_portalIfc_messageSize_size, 1u);
	backing.DEF_CAN_FIRE_portalIfc_messageSize_size = DEF_CAN_FIRE_portalIfc_messageSize_size;
      }
      ++num;
      if ((backing.DEF_NOT_addrResponse_responseAdapter_notEmptyReg___d2) != DEF_NOT_addrResponse_responseAdapter_notEmptyReg___d2)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_addrResponse_responseAdapter_notEmptyReg___d2, 1u);
	backing.DEF_NOT_addrResponse_responseAdapter_notEmptyReg___d2 = DEF_NOT_addrResponse_responseAdapter_notEmptyReg___d2;
      }
      ++num;
      if ((backing.DEF_NOT_error_responseAdapter_notEmptyReg___d8) != DEF_NOT_error_responseAdapter_notEmptyReg___d8)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_error_responseAdapter_notEmptyReg___d8, 1u);
	backing.DEF_NOT_error_responseAdapter_notEmptyReg___d8 = DEF_NOT_error_responseAdapter_notEmptyReg___d8;
      }
      ++num;
      if ((backing.DEF_NOT_reportMemoryTraffic_responseAdapter_notEmp_ETC___d6) != DEF_NOT_reportMemoryTraffic_responseAdapter_notEmp_ETC___d6)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_reportMemoryTraffic_responseAdapter_notEmp_ETC___d6, 1u);
	backing.DEF_NOT_reportMemoryTraffic_responseAdapter_notEmp_ETC___d6 = DEF_NOT_reportMemoryTraffic_responseAdapter_notEmp_ETC___d6;
      }
      ++num;
      if ((backing.DEF_NOT_reportStateDbg_responseAdapter_notEmptyReg___d4) != DEF_NOT_reportStateDbg_responseAdapter_notEmptyReg___d4)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_reportStateDbg_responseAdapter_notEmptyReg___d4, 1u);
	backing.DEF_NOT_reportStateDbg_responseAdapter_notEmptyReg___d4 = DEF_NOT_reportStateDbg_responseAdapter_notEmptyReg___d4;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_methods_addrResponse_enq) != DEF_WILL_FIRE_methods_addrResponse_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_methods_addrResponse_enq, 1u);
	backing.DEF_WILL_FIRE_methods_addrResponse_enq = DEF_WILL_FIRE_methods_addrResponse_enq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_methods_error_enq) != DEF_WILL_FIRE_methods_error_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_methods_error_enq, 1u);
	backing.DEF_WILL_FIRE_methods_error_enq = DEF_WILL_FIRE_methods_error_enq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_methods_reportMemoryTraffic_enq) != DEF_WILL_FIRE_methods_reportMemoryTraffic_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_methods_reportMemoryTraffic_enq, 1u);
	backing.DEF_WILL_FIRE_methods_reportMemoryTraffic_enq = DEF_WILL_FIRE_methods_reportMemoryTraffic_enq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_methods_reportStateDbg_enq) != DEF_WILL_FIRE_methods_reportStateDbg_enq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_methods_reportStateDbg_enq, 1u);
	backing.DEF_WILL_FIRE_methods_reportStateDbg_enq = DEF_WILL_FIRE_methods_reportStateDbg_enq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_portalIfc_indications_0_deq) != DEF_WILL_FIRE_portalIfc_indications_0_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_portalIfc_indications_0_deq, 1u);
	backing.DEF_WILL_FIRE_portalIfc_indications_0_deq = DEF_WILL_FIRE_portalIfc_indications_0_deq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_portalIfc_indications_1_deq) != DEF_WILL_FIRE_portalIfc_indications_1_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_portalIfc_indications_1_deq, 1u);
	backing.DEF_WILL_FIRE_portalIfc_indications_1_deq = DEF_WILL_FIRE_portalIfc_indications_1_deq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_portalIfc_indications_2_deq) != DEF_WILL_FIRE_portalIfc_indications_2_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_portalIfc_indications_2_deq, 1u);
	backing.DEF_WILL_FIRE_portalIfc_indications_2_deq = DEF_WILL_FIRE_portalIfc_indications_2_deq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_portalIfc_indications_3_deq) != DEF_WILL_FIRE_portalIfc_indications_3_deq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_portalIfc_indications_3_deq, 1u);
	backing.DEF_WILL_FIRE_portalIfc_indications_3_deq = DEF_WILL_FIRE_portalIfc_indications_3_deq;
      }
      ++num;
      if ((backing.DEF_addrResponse_responseAdapter_notEmptyReg__h723) != DEF_addrResponse_responseAdapter_notEmptyReg__h723)
      {
	vcd_write_val(sim_hdl, num, DEF_addrResponse_responseAdapter_notEmptyReg__h723, 1u);
	backing.DEF_addrResponse_responseAdapter_notEmptyReg__h723 = DEF_addrResponse_responseAdapter_notEmptyReg__h723;
      }
      ++num;
      if ((backing.DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689) != DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689)
      {
	vcd_write_val(sim_hdl, num, DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689, 160u);
	backing.DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689 = DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689;
      }
      ++num;
      if ((backing.DEF_error_responseAdapter_notEmptyReg__h894) != DEF_error_responseAdapter_notEmptyReg__h894)
      {
	vcd_write_val(sim_hdl, num, DEF_error_responseAdapter_notEmptyReg__h894, 1u);
	backing.DEF_error_responseAdapter_notEmptyReg__h894 = DEF_error_responseAdapter_notEmptyReg__h894;
      }
      ++num;
      if ((backing.DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846) != DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846)
      {
	vcd_write_val(sim_hdl, num, DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846, 1u);
	backing.DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846 = DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846;
      }
      ++num;
      if ((backing.DEF_reportStateDbg_responseAdapter_bits_BITS_95_TO_0___h1425) != DEF_reportStateDbg_responseAdapter_bits_BITS_95_TO_0___h1425)
      {
	vcd_write_val(sim_hdl, num, DEF_reportStateDbg_responseAdapter_bits_BITS_95_TO_0___h1425, 96u);
	backing.DEF_reportStateDbg_responseAdapter_bits_BITS_95_TO_0___h1425 = DEF_reportStateDbg_responseAdapter_bits_BITS_95_TO_0___h1425;
      }
      ++num;
      if ((backing.DEF_reportStateDbg_responseAdapter_notEmptyReg__h774) != DEF_reportStateDbg_responseAdapter_notEmptyReg__h774)
      {
	vcd_write_val(sim_hdl, num, DEF_reportStateDbg_responseAdapter_notEmptyReg__h774, 1u);
	backing.DEF_reportStateDbg_responseAdapter_notEmptyReg__h774 = DEF_reportStateDbg_responseAdapter_notEmptyReg__h774;
      }
      ++num;
      if ((backing.DEF_x__h1181) != DEF_x__h1181)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1181, 64u);
	backing.DEF_x__h1181 = DEF_x__h1181;
      }
      ++num;
      if ((backing.DEF_x__h1314) != DEF_x__h1314)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1314, 128u);
	backing.DEF_x__h1314 = DEF_x__h1314;
      }
      ++num;
      if ((backing.DEF_x__h1418) != DEF_x__h1418)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1418, 128u);
	backing.DEF_x__h1418 = DEF_x__h1418;
      }
      ++num;
      if ((backing.DEF_x__h1446) != DEF_x__h1446)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1446, 64u);
	backing.DEF_x__h1446 = DEF_x__h1446;
      }
      ++num;
      if ((backing.DEF_x__h1578) != DEF_x__h1578)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1578, 192u);
	backing.DEF_x__h1578 = DEF_x__h1578;
      }
      ++num;
      if ((backing.DEF_x__h1682) != DEF_x__h1682)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1682, 192u);
	backing.DEF_x__h1682 = DEF_x__h1682;
      }
      ++num;
      if ((backing.PORT_EN_methods_addrResponse_enq) != PORT_EN_methods_addrResponse_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_methods_addrResponse_enq, 1u);
	backing.PORT_EN_methods_addrResponse_enq = PORT_EN_methods_addrResponse_enq;
      }
      ++num;
      if ((backing.PORT_EN_methods_error_enq) != PORT_EN_methods_error_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_methods_error_enq, 1u);
	backing.PORT_EN_methods_error_enq = PORT_EN_methods_error_enq;
      }
      ++num;
      if ((backing.PORT_EN_methods_reportMemoryTraffic_enq) != PORT_EN_methods_reportMemoryTraffic_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_methods_reportMemoryTraffic_enq, 1u);
	backing.PORT_EN_methods_reportMemoryTraffic_enq = PORT_EN_methods_reportMemoryTraffic_enq;
      }
      ++num;
      if ((backing.PORT_EN_methods_reportStateDbg_enq) != PORT_EN_methods_reportStateDbg_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_methods_reportStateDbg_enq, 1u);
	backing.PORT_EN_methods_reportStateDbg_enq = PORT_EN_methods_reportStateDbg_enq;
      }
      ++num;
      if ((backing.PORT_EN_portalIfc_indications_0_deq) != PORT_EN_portalIfc_indications_0_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_portalIfc_indications_0_deq, 1u);
	backing.PORT_EN_portalIfc_indications_0_deq = PORT_EN_portalIfc_indications_0_deq;
      }
      ++num;
      if ((backing.PORT_EN_portalIfc_indications_1_deq) != PORT_EN_portalIfc_indications_1_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_portalIfc_indications_1_deq, 1u);
	backing.PORT_EN_portalIfc_indications_1_deq = PORT_EN_portalIfc_indications_1_deq;
      }
      ++num;
      if ((backing.PORT_EN_portalIfc_indications_2_deq) != PORT_EN_portalIfc_indications_2_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_portalIfc_indications_2_deq, 1u);
	backing.PORT_EN_portalIfc_indications_2_deq = PORT_EN_portalIfc_indications_2_deq;
      }
      ++num;
      if ((backing.PORT_EN_portalIfc_indications_3_deq) != PORT_EN_portalIfc_indications_3_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_portalIfc_indications_3_deq, 1u);
	backing.PORT_EN_portalIfc_indications_3_deq = PORT_EN_portalIfc_indications_3_deq;
      }
      ++num;
      if ((backing.PORT_RDY_methods_addrResponse_enq) != PORT_RDY_methods_addrResponse_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_methods_addrResponse_enq, 1u);
	backing.PORT_RDY_methods_addrResponse_enq = PORT_RDY_methods_addrResponse_enq;
      }
      ++num;
      if ((backing.PORT_RDY_methods_addrResponse_notFull) != PORT_RDY_methods_addrResponse_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_methods_addrResponse_notFull, 1u);
	backing.PORT_RDY_methods_addrResponse_notFull = PORT_RDY_methods_addrResponse_notFull;
      }
      ++num;
      if ((backing.PORT_RDY_methods_error_enq) != PORT_RDY_methods_error_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_methods_error_enq, 1u);
	backing.PORT_RDY_methods_error_enq = PORT_RDY_methods_error_enq;
      }
      ++num;
      if ((backing.PORT_RDY_methods_error_notFull) != PORT_RDY_methods_error_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_methods_error_notFull, 1u);
	backing.PORT_RDY_methods_error_notFull = PORT_RDY_methods_error_notFull;
      }
      ++num;
      if ((backing.PORT_RDY_methods_reportMemoryTraffic_enq) != PORT_RDY_methods_reportMemoryTraffic_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_methods_reportMemoryTraffic_enq, 1u);
	backing.PORT_RDY_methods_reportMemoryTraffic_enq = PORT_RDY_methods_reportMemoryTraffic_enq;
      }
      ++num;
      if ((backing.PORT_RDY_methods_reportMemoryTraffic_notFull) != PORT_RDY_methods_reportMemoryTraffic_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_methods_reportMemoryTraffic_notFull, 1u);
	backing.PORT_RDY_methods_reportMemoryTraffic_notFull = PORT_RDY_methods_reportMemoryTraffic_notFull;
      }
      ++num;
      if ((backing.PORT_RDY_methods_reportStateDbg_enq) != PORT_RDY_methods_reportStateDbg_enq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_methods_reportStateDbg_enq, 1u);
	backing.PORT_RDY_methods_reportStateDbg_enq = PORT_RDY_methods_reportStateDbg_enq;
      }
      ++num;
      if ((backing.PORT_RDY_methods_reportStateDbg_notFull) != PORT_RDY_methods_reportStateDbg_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_methods_reportStateDbg_notFull, 1u);
	backing.PORT_RDY_methods_reportStateDbg_notFull = PORT_RDY_methods_reportStateDbg_notFull;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_0_deq) != PORT_RDY_portalIfc_indications_0_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_0_deq, 1u);
	backing.PORT_RDY_portalIfc_indications_0_deq = PORT_RDY_portalIfc_indications_0_deq;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_0_first) != PORT_RDY_portalIfc_indications_0_first)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_0_first, 1u);
	backing.PORT_RDY_portalIfc_indications_0_first = PORT_RDY_portalIfc_indications_0_first;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_0_notEmpty) != PORT_RDY_portalIfc_indications_0_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_0_notEmpty, 1u);
	backing.PORT_RDY_portalIfc_indications_0_notEmpty = PORT_RDY_portalIfc_indications_0_notEmpty;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_1_deq) != PORT_RDY_portalIfc_indications_1_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_1_deq, 1u);
	backing.PORT_RDY_portalIfc_indications_1_deq = PORT_RDY_portalIfc_indications_1_deq;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_1_first) != PORT_RDY_portalIfc_indications_1_first)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_1_first, 1u);
	backing.PORT_RDY_portalIfc_indications_1_first = PORT_RDY_portalIfc_indications_1_first;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_1_notEmpty) != PORT_RDY_portalIfc_indications_1_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_1_notEmpty, 1u);
	backing.PORT_RDY_portalIfc_indications_1_notEmpty = PORT_RDY_portalIfc_indications_1_notEmpty;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_2_deq) != PORT_RDY_portalIfc_indications_2_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_2_deq, 1u);
	backing.PORT_RDY_portalIfc_indications_2_deq = PORT_RDY_portalIfc_indications_2_deq;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_2_first) != PORT_RDY_portalIfc_indications_2_first)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_2_first, 1u);
	backing.PORT_RDY_portalIfc_indications_2_first = PORT_RDY_portalIfc_indications_2_first;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_2_notEmpty) != PORT_RDY_portalIfc_indications_2_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_2_notEmpty, 1u);
	backing.PORT_RDY_portalIfc_indications_2_notEmpty = PORT_RDY_portalIfc_indications_2_notEmpty;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_3_deq) != PORT_RDY_portalIfc_indications_3_deq)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_3_deq, 1u);
	backing.PORT_RDY_portalIfc_indications_3_deq = PORT_RDY_portalIfc_indications_3_deq;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_3_first) != PORT_RDY_portalIfc_indications_3_first)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_3_first, 1u);
	backing.PORT_RDY_portalIfc_indications_3_first = PORT_RDY_portalIfc_indications_3_first;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_indications_3_notEmpty) != PORT_RDY_portalIfc_indications_3_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_indications_3_notEmpty, 1u);
	backing.PORT_RDY_portalIfc_indications_3_notEmpty = PORT_RDY_portalIfc_indications_3_notEmpty;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_intr_channel) != PORT_RDY_portalIfc_intr_channel)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_intr_channel, 1u);
	backing.PORT_RDY_portalIfc_intr_channel = PORT_RDY_portalIfc_intr_channel;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_intr_status) != PORT_RDY_portalIfc_intr_status)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_intr_status, 1u);
	backing.PORT_RDY_portalIfc_intr_status = PORT_RDY_portalIfc_intr_status;
      }
      ++num;
      if ((backing.PORT_RDY_portalIfc_messageSize_size) != PORT_RDY_portalIfc_messageSize_size)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_portalIfc_messageSize_size, 1u);
	backing.PORT_RDY_portalIfc_messageSize_size = PORT_RDY_portalIfc_messageSize_size;
      }
      ++num;
      if ((backing.PORT_methods_addrResponse_enq_v) != PORT_methods_addrResponse_enq_v)
      {
	vcd_write_val(sim_hdl, num, PORT_methods_addrResponse_enq_v, 64u);
	backing.PORT_methods_addrResponse_enq_v = PORT_methods_addrResponse_enq_v;
      }
      ++num;
      if ((backing.PORT_methods_addrResponse_notFull) != PORT_methods_addrResponse_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_methods_addrResponse_notFull, 1u);
	backing.PORT_methods_addrResponse_notFull = PORT_methods_addrResponse_notFull;
      }
      ++num;
      if ((backing.PORT_methods_error_enq_v) != PORT_methods_error_enq_v)
      {
	vcd_write_val(sim_hdl, num, PORT_methods_error_enq_v, 192u);
	backing.PORT_methods_error_enq_v = PORT_methods_error_enq_v;
      }
      ++num;
      if ((backing.PORT_methods_error_notFull) != PORT_methods_error_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_methods_error_notFull, 1u);
	backing.PORT_methods_error_notFull = PORT_methods_error_notFull;
      }
      ++num;
      if ((backing.PORT_methods_reportMemoryTraffic_enq_v) != PORT_methods_reportMemoryTraffic_enq_v)
      {
	vcd_write_val(sim_hdl, num, PORT_methods_reportMemoryTraffic_enq_v, 64u);
	backing.PORT_methods_reportMemoryTraffic_enq_v = PORT_methods_reportMemoryTraffic_enq_v;
      }
      ++num;
      if ((backing.PORT_methods_reportMemoryTraffic_notFull) != PORT_methods_reportMemoryTraffic_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_methods_reportMemoryTraffic_notFull, 1u);
	backing.PORT_methods_reportMemoryTraffic_notFull = PORT_methods_reportMemoryTraffic_notFull;
      }
      ++num;
      if ((backing.PORT_methods_reportStateDbg_enq_v) != PORT_methods_reportStateDbg_enq_v)
      {
	vcd_write_val(sim_hdl, num, PORT_methods_reportStateDbg_enq_v, 128u);
	backing.PORT_methods_reportStateDbg_enq_v = PORT_methods_reportStateDbg_enq_v;
      }
      ++num;
      if ((backing.PORT_methods_reportStateDbg_notFull) != PORT_methods_reportStateDbg_notFull)
      {
	vcd_write_val(sim_hdl, num, PORT_methods_reportStateDbg_notFull, 1u);
	backing.PORT_methods_reportStateDbg_notFull = PORT_methods_reportStateDbg_notFull;
      }
      ++num;
      if ((backing.PORT_portalIfc_indications_0_first) != PORT_portalIfc_indications_0_first)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_indications_0_first, 32u);
	backing.PORT_portalIfc_indications_0_first = PORT_portalIfc_indications_0_first;
      }
      ++num;
      if ((backing.PORT_portalIfc_indications_0_notEmpty) != PORT_portalIfc_indications_0_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_indications_0_notEmpty, 1u);
	backing.PORT_portalIfc_indications_0_notEmpty = PORT_portalIfc_indications_0_notEmpty;
      }
      ++num;
      if ((backing.PORT_portalIfc_indications_1_first) != PORT_portalIfc_indications_1_first)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_indications_1_first, 32u);
	backing.PORT_portalIfc_indications_1_first = PORT_portalIfc_indications_1_first;
      }
      ++num;
      if ((backing.PORT_portalIfc_indications_1_notEmpty) != PORT_portalIfc_indications_1_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_indications_1_notEmpty, 1u);
	backing.PORT_portalIfc_indications_1_notEmpty = PORT_portalIfc_indications_1_notEmpty;
      }
      ++num;
      if ((backing.PORT_portalIfc_indications_2_first) != PORT_portalIfc_indications_2_first)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_indications_2_first, 32u);
	backing.PORT_portalIfc_indications_2_first = PORT_portalIfc_indications_2_first;
      }
      ++num;
      if ((backing.PORT_portalIfc_indications_2_notEmpty) != PORT_portalIfc_indications_2_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_indications_2_notEmpty, 1u);
	backing.PORT_portalIfc_indications_2_notEmpty = PORT_portalIfc_indications_2_notEmpty;
      }
      ++num;
      if ((backing.PORT_portalIfc_indications_3_first) != PORT_portalIfc_indications_3_first)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_indications_3_first, 32u);
	backing.PORT_portalIfc_indications_3_first = PORT_portalIfc_indications_3_first;
      }
      ++num;
      if ((backing.PORT_portalIfc_indications_3_notEmpty) != PORT_portalIfc_indications_3_notEmpty)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_indications_3_notEmpty, 1u);
	backing.PORT_portalIfc_indications_3_notEmpty = PORT_portalIfc_indications_3_notEmpty;
      }
      ++num;
      if ((backing.PORT_portalIfc_intr_channel) != PORT_portalIfc_intr_channel)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_intr_channel, 32u);
	backing.PORT_portalIfc_intr_channel = PORT_portalIfc_intr_channel;
      }
      ++num;
      if ((backing.PORT_portalIfc_intr_status) != PORT_portalIfc_intr_status)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_intr_status, 1u);
	backing.PORT_portalIfc_intr_status = PORT_portalIfc_intr_status;
      }
      ++num;
      if ((backing.PORT_portalIfc_messageSize_size) != PORT_portalIfc_messageSize_size)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_messageSize_size, 16u);
	backing.PORT_portalIfc_messageSize_size = PORT_portalIfc_messageSize_size;
      }
      ++num;
      if ((backing.PORT_portalIfc_messageSize_size_methodNumber) != PORT_portalIfc_messageSize_size_methodNumber)
      {
	vcd_write_val(sim_hdl, num, PORT_portalIfc_messageSize_size_methodNumber, 16u);
	backing.PORT_portalIfc_messageSize_size_methodNumber = PORT_portalIfc_messageSize_size_methodNumber;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_methods_addrResponse_enq, 1u);
      backing.DEF_CAN_FIRE_methods_addrResponse_enq = DEF_CAN_FIRE_methods_addrResponse_enq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_methods_addrResponse_notFull, 1u);
      backing.DEF_CAN_FIRE_methods_addrResponse_notFull = DEF_CAN_FIRE_methods_addrResponse_notFull;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_methods_error_enq, 1u);
      backing.DEF_CAN_FIRE_methods_error_enq = DEF_CAN_FIRE_methods_error_enq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_methods_error_notFull, 1u);
      backing.DEF_CAN_FIRE_methods_error_notFull = DEF_CAN_FIRE_methods_error_notFull;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_methods_reportMemoryTraffic_enq, 1u);
      backing.DEF_CAN_FIRE_methods_reportMemoryTraffic_enq = DEF_CAN_FIRE_methods_reportMemoryTraffic_enq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_methods_reportMemoryTraffic_notFull, 1u);
      backing.DEF_CAN_FIRE_methods_reportMemoryTraffic_notFull = DEF_CAN_FIRE_methods_reportMemoryTraffic_notFull;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_methods_reportStateDbg_enq, 1u);
      backing.DEF_CAN_FIRE_methods_reportStateDbg_enq = DEF_CAN_FIRE_methods_reportStateDbg_enq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_methods_reportStateDbg_notFull, 1u);
      backing.DEF_CAN_FIRE_methods_reportStateDbg_notFull = DEF_CAN_FIRE_methods_reportStateDbg_notFull;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_0_deq, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_0_deq = DEF_CAN_FIRE_portalIfc_indications_0_deq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_0_first, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_0_first = DEF_CAN_FIRE_portalIfc_indications_0_first;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_0_notEmpty, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_0_notEmpty = DEF_CAN_FIRE_portalIfc_indications_0_notEmpty;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_1_deq, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_1_deq = DEF_CAN_FIRE_portalIfc_indications_1_deq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_1_first, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_1_first = DEF_CAN_FIRE_portalIfc_indications_1_first;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_1_notEmpty, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_1_notEmpty = DEF_CAN_FIRE_portalIfc_indications_1_notEmpty;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_2_deq, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_2_deq = DEF_CAN_FIRE_portalIfc_indications_2_deq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_2_first, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_2_first = DEF_CAN_FIRE_portalIfc_indications_2_first;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_2_notEmpty, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_2_notEmpty = DEF_CAN_FIRE_portalIfc_indications_2_notEmpty;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_3_deq, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_3_deq = DEF_CAN_FIRE_portalIfc_indications_3_deq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_3_first, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_3_first = DEF_CAN_FIRE_portalIfc_indications_3_first;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_indications_3_notEmpty, 1u);
      backing.DEF_CAN_FIRE_portalIfc_indications_3_notEmpty = DEF_CAN_FIRE_portalIfc_indications_3_notEmpty;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_intr_channel, 1u);
      backing.DEF_CAN_FIRE_portalIfc_intr_channel = DEF_CAN_FIRE_portalIfc_intr_channel;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_intr_status, 1u);
      backing.DEF_CAN_FIRE_portalIfc_intr_status = DEF_CAN_FIRE_portalIfc_intr_status;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_portalIfc_messageSize_size, 1u);
      backing.DEF_CAN_FIRE_portalIfc_messageSize_size = DEF_CAN_FIRE_portalIfc_messageSize_size;
      vcd_write_val(sim_hdl, num++, DEF_NOT_addrResponse_responseAdapter_notEmptyReg___d2, 1u);
      backing.DEF_NOT_addrResponse_responseAdapter_notEmptyReg___d2 = DEF_NOT_addrResponse_responseAdapter_notEmptyReg___d2;
      vcd_write_val(sim_hdl, num++, DEF_NOT_error_responseAdapter_notEmptyReg___d8, 1u);
      backing.DEF_NOT_error_responseAdapter_notEmptyReg___d8 = DEF_NOT_error_responseAdapter_notEmptyReg___d8;
      vcd_write_val(sim_hdl, num++, DEF_NOT_reportMemoryTraffic_responseAdapter_notEmp_ETC___d6, 1u);
      backing.DEF_NOT_reportMemoryTraffic_responseAdapter_notEmp_ETC___d6 = DEF_NOT_reportMemoryTraffic_responseAdapter_notEmp_ETC___d6;
      vcd_write_val(sim_hdl, num++, DEF_NOT_reportStateDbg_responseAdapter_notEmptyReg___d4, 1u);
      backing.DEF_NOT_reportStateDbg_responseAdapter_notEmptyReg___d4 = DEF_NOT_reportStateDbg_responseAdapter_notEmptyReg___d4;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_methods_addrResponse_enq, 1u);
      backing.DEF_WILL_FIRE_methods_addrResponse_enq = DEF_WILL_FIRE_methods_addrResponse_enq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_methods_error_enq, 1u);
      backing.DEF_WILL_FIRE_methods_error_enq = DEF_WILL_FIRE_methods_error_enq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_methods_reportMemoryTraffic_enq, 1u);
      backing.DEF_WILL_FIRE_methods_reportMemoryTraffic_enq = DEF_WILL_FIRE_methods_reportMemoryTraffic_enq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_methods_reportStateDbg_enq, 1u);
      backing.DEF_WILL_FIRE_methods_reportStateDbg_enq = DEF_WILL_FIRE_methods_reportStateDbg_enq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_portalIfc_indications_0_deq, 1u);
      backing.DEF_WILL_FIRE_portalIfc_indications_0_deq = DEF_WILL_FIRE_portalIfc_indications_0_deq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_portalIfc_indications_1_deq, 1u);
      backing.DEF_WILL_FIRE_portalIfc_indications_1_deq = DEF_WILL_FIRE_portalIfc_indications_1_deq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_portalIfc_indications_2_deq, 1u);
      backing.DEF_WILL_FIRE_portalIfc_indications_2_deq = DEF_WILL_FIRE_portalIfc_indications_2_deq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_portalIfc_indications_3_deq, 1u);
      backing.DEF_WILL_FIRE_portalIfc_indications_3_deq = DEF_WILL_FIRE_portalIfc_indications_3_deq;
      vcd_write_val(sim_hdl, num++, DEF_addrResponse_responseAdapter_notEmptyReg__h723, 1u);
      backing.DEF_addrResponse_responseAdapter_notEmptyReg__h723 = DEF_addrResponse_responseAdapter_notEmptyReg__h723;
      vcd_write_val(sim_hdl, num++, DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689, 160u);
      backing.DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689 = DEF_error_responseAdapter_bits_BITS_159_TO_0___h1689;
      vcd_write_val(sim_hdl, num++, DEF_error_responseAdapter_notEmptyReg__h894, 1u);
      backing.DEF_error_responseAdapter_notEmptyReg__h894 = DEF_error_responseAdapter_notEmptyReg__h894;
      vcd_write_val(sim_hdl, num++, DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846, 1u);
      backing.DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846 = DEF_reportMemoryTraffic_responseAdapter_notEmptyReg__h846;
      vcd_write_val(sim_hdl, num++, DEF_reportStateDbg_responseAdapter_bits_BITS_95_TO_0___h1425, 96u);
      backing.DEF_reportStateDbg_responseAdapter_bits_BITS_95_TO_0___h1425 = DEF_reportStateDbg_responseAdapter_bits_BITS_95_TO_0___h1425;
      vcd_write_val(sim_hdl, num++, DEF_reportStateDbg_responseAdapter_notEmptyReg__h774, 1u);
      backing.DEF_reportStateDbg_responseAdapter_notEmptyReg__h774 = DEF_reportStateDbg_responseAdapter_notEmptyReg__h774;
      vcd_write_val(sim_hdl, num++, DEF_x__h1181, 64u);
      backing.DEF_x__h1181 = DEF_x__h1181;
      vcd_write_val(sim_hdl, num++, DEF_x__h1314, 128u);
      backing.DEF_x__h1314 = DEF_x__h1314;
      vcd_write_val(sim_hdl, num++, DEF_x__h1418, 128u);
      backing.DEF_x__h1418 = DEF_x__h1418;
      vcd_write_val(sim_hdl, num++, DEF_x__h1446, 64u);
      backing.DEF_x__h1446 = DEF_x__h1446;
      vcd_write_val(sim_hdl, num++, DEF_x__h1578, 192u);
      backing.DEF_x__h1578 = DEF_x__h1578;
      vcd_write_val(sim_hdl, num++, DEF_x__h1682, 192u);
      backing.DEF_x__h1682 = DEF_x__h1682;
      vcd_write_val(sim_hdl, num++, PORT_EN_methods_addrResponse_enq, 1u);
      backing.PORT_EN_methods_addrResponse_enq = PORT_EN_methods_addrResponse_enq;
      vcd_write_val(sim_hdl, num++, PORT_EN_methods_error_enq, 1u);
      backing.PORT_EN_methods_error_enq = PORT_EN_methods_error_enq;
      vcd_write_val(sim_hdl, num++, PORT_EN_methods_reportMemoryTraffic_enq, 1u);
      backing.PORT_EN_methods_reportMemoryTraffic_enq = PORT_EN_methods_reportMemoryTraffic_enq;
      vcd_write_val(sim_hdl, num++, PORT_EN_methods_reportStateDbg_enq, 1u);
      backing.PORT_EN_methods_reportStateDbg_enq = PORT_EN_methods_reportStateDbg_enq;
      vcd_write_val(sim_hdl, num++, PORT_EN_portalIfc_indications_0_deq, 1u);
      backing.PORT_EN_portalIfc_indications_0_deq = PORT_EN_portalIfc_indications_0_deq;
      vcd_write_val(sim_hdl, num++, PORT_EN_portalIfc_indications_1_deq, 1u);
      backing.PORT_EN_portalIfc_indications_1_deq = PORT_EN_portalIfc_indications_1_deq;
      vcd_write_val(sim_hdl, num++, PORT_EN_portalIfc_indications_2_deq, 1u);
      backing.PORT_EN_portalIfc_indications_2_deq = PORT_EN_portalIfc_indications_2_deq;
      vcd_write_val(sim_hdl, num++, PORT_EN_portalIfc_indications_3_deq, 1u);
      backing.PORT_EN_portalIfc_indications_3_deq = PORT_EN_portalIfc_indications_3_deq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_methods_addrResponse_enq, 1u);
      backing.PORT_RDY_methods_addrResponse_enq = PORT_RDY_methods_addrResponse_enq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_methods_addrResponse_notFull, 1u);
      backing.PORT_RDY_methods_addrResponse_notFull = PORT_RDY_methods_addrResponse_notFull;
      vcd_write_val(sim_hdl, num++, PORT_RDY_methods_error_enq, 1u);
      backing.PORT_RDY_methods_error_enq = PORT_RDY_methods_error_enq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_methods_error_notFull, 1u);
      backing.PORT_RDY_methods_error_notFull = PORT_RDY_methods_error_notFull;
      vcd_write_val(sim_hdl, num++, PORT_RDY_methods_reportMemoryTraffic_enq, 1u);
      backing.PORT_RDY_methods_reportMemoryTraffic_enq = PORT_RDY_methods_reportMemoryTraffic_enq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_methods_reportMemoryTraffic_notFull, 1u);
      backing.PORT_RDY_methods_reportMemoryTraffic_notFull = PORT_RDY_methods_reportMemoryTraffic_notFull;
      vcd_write_val(sim_hdl, num++, PORT_RDY_methods_reportStateDbg_enq, 1u);
      backing.PORT_RDY_methods_reportStateDbg_enq = PORT_RDY_methods_reportStateDbg_enq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_methods_reportStateDbg_notFull, 1u);
      backing.PORT_RDY_methods_reportStateDbg_notFull = PORT_RDY_methods_reportStateDbg_notFull;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_0_deq, 1u);
      backing.PORT_RDY_portalIfc_indications_0_deq = PORT_RDY_portalIfc_indications_0_deq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_0_first, 1u);
      backing.PORT_RDY_portalIfc_indications_0_first = PORT_RDY_portalIfc_indications_0_first;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_0_notEmpty, 1u);
      backing.PORT_RDY_portalIfc_indications_0_notEmpty = PORT_RDY_portalIfc_indications_0_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_1_deq, 1u);
      backing.PORT_RDY_portalIfc_indications_1_deq = PORT_RDY_portalIfc_indications_1_deq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_1_first, 1u);
      backing.PORT_RDY_portalIfc_indications_1_first = PORT_RDY_portalIfc_indications_1_first;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_1_notEmpty, 1u);
      backing.PORT_RDY_portalIfc_indications_1_notEmpty = PORT_RDY_portalIfc_indications_1_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_2_deq, 1u);
      backing.PORT_RDY_portalIfc_indications_2_deq = PORT_RDY_portalIfc_indications_2_deq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_2_first, 1u);
      backing.PORT_RDY_portalIfc_indications_2_first = PORT_RDY_portalIfc_indications_2_first;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_2_notEmpty, 1u);
      backing.PORT_RDY_portalIfc_indications_2_notEmpty = PORT_RDY_portalIfc_indications_2_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_3_deq, 1u);
      backing.PORT_RDY_portalIfc_indications_3_deq = PORT_RDY_portalIfc_indications_3_deq;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_3_first, 1u);
      backing.PORT_RDY_portalIfc_indications_3_first = PORT_RDY_portalIfc_indications_3_first;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_indications_3_notEmpty, 1u);
      backing.PORT_RDY_portalIfc_indications_3_notEmpty = PORT_RDY_portalIfc_indications_3_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_intr_channel, 1u);
      backing.PORT_RDY_portalIfc_intr_channel = PORT_RDY_portalIfc_intr_channel;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_intr_status, 1u);
      backing.PORT_RDY_portalIfc_intr_status = PORT_RDY_portalIfc_intr_status;
      vcd_write_val(sim_hdl, num++, PORT_RDY_portalIfc_messageSize_size, 1u);
      backing.PORT_RDY_portalIfc_messageSize_size = PORT_RDY_portalIfc_messageSize_size;
      vcd_write_val(sim_hdl, num++, PORT_methods_addrResponse_enq_v, 64u);
      backing.PORT_methods_addrResponse_enq_v = PORT_methods_addrResponse_enq_v;
      vcd_write_val(sim_hdl, num++, PORT_methods_addrResponse_notFull, 1u);
      backing.PORT_methods_addrResponse_notFull = PORT_methods_addrResponse_notFull;
      vcd_write_val(sim_hdl, num++, PORT_methods_error_enq_v, 192u);
      backing.PORT_methods_error_enq_v = PORT_methods_error_enq_v;
      vcd_write_val(sim_hdl, num++, PORT_methods_error_notFull, 1u);
      backing.PORT_methods_error_notFull = PORT_methods_error_notFull;
      vcd_write_val(sim_hdl, num++, PORT_methods_reportMemoryTraffic_enq_v, 64u);
      backing.PORT_methods_reportMemoryTraffic_enq_v = PORT_methods_reportMemoryTraffic_enq_v;
      vcd_write_val(sim_hdl, num++, PORT_methods_reportMemoryTraffic_notFull, 1u);
      backing.PORT_methods_reportMemoryTraffic_notFull = PORT_methods_reportMemoryTraffic_notFull;
      vcd_write_val(sim_hdl, num++, PORT_methods_reportStateDbg_enq_v, 128u);
      backing.PORT_methods_reportStateDbg_enq_v = PORT_methods_reportStateDbg_enq_v;
      vcd_write_val(sim_hdl, num++, PORT_methods_reportStateDbg_notFull, 1u);
      backing.PORT_methods_reportStateDbg_notFull = PORT_methods_reportStateDbg_notFull;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_indications_0_first, 32u);
      backing.PORT_portalIfc_indications_0_first = PORT_portalIfc_indications_0_first;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_indications_0_notEmpty, 1u);
      backing.PORT_portalIfc_indications_0_notEmpty = PORT_portalIfc_indications_0_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_indications_1_first, 32u);
      backing.PORT_portalIfc_indications_1_first = PORT_portalIfc_indications_1_first;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_indications_1_notEmpty, 1u);
      backing.PORT_portalIfc_indications_1_notEmpty = PORT_portalIfc_indications_1_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_indications_2_first, 32u);
      backing.PORT_portalIfc_indications_2_first = PORT_portalIfc_indications_2_first;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_indications_2_notEmpty, 1u);
      backing.PORT_portalIfc_indications_2_notEmpty = PORT_portalIfc_indications_2_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_indications_3_first, 32u);
      backing.PORT_portalIfc_indications_3_first = PORT_portalIfc_indications_3_first;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_indications_3_notEmpty, 1u);
      backing.PORT_portalIfc_indications_3_notEmpty = PORT_portalIfc_indications_3_notEmpty;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_intr_channel, 32u);
      backing.PORT_portalIfc_intr_channel = PORT_portalIfc_intr_channel;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_intr_status, 1u);
      backing.PORT_portalIfc_intr_status = PORT_portalIfc_intr_status;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_messageSize_size, 16u);
      backing.PORT_portalIfc_messageSize_size = PORT_portalIfc_messageSize_size;
      vcd_write_val(sim_hdl, num++, PORT_portalIfc_messageSize_size_methodNumber, 16u);
      backing.PORT_portalIfc_messageSize_size_methodNumber = PORT_portalIfc_messageSize_size_methodNumber;
    }
}

void MOD_mkMemServerIndicationOutputPipes::vcd_prims(tVCDDumpType dt,
						     MOD_mkMemServerIndicationOutputPipes &backing)
{
  INST_addrResponse_responseAdapter_bits.dump_VCD(dt, backing.INST_addrResponse_responseAdapter_bits);
  INST_addrResponse_responseAdapter_count.dump_VCD(dt,
						   backing.INST_addrResponse_responseAdapter_count);
  INST_addrResponse_responseAdapter_notEmptyReg.dump_VCD(dt,
							 backing.INST_addrResponse_responseAdapter_notEmptyReg);
  INST_addrResponse_responseAdapter_shift.dump_VCD(dt,
						   backing.INST_addrResponse_responseAdapter_shift);
  INST_error_responseAdapter_bits.dump_VCD(dt, backing.INST_error_responseAdapter_bits);
  INST_error_responseAdapter_count.dump_VCD(dt, backing.INST_error_responseAdapter_count);
  INST_error_responseAdapter_notEmptyReg.dump_VCD(dt, backing.INST_error_responseAdapter_notEmptyReg);
  INST_error_responseAdapter_shift.dump_VCD(dt, backing.INST_error_responseAdapter_shift);
  INST_reportMemoryTraffic_responseAdapter_bits.dump_VCD(dt,
							 backing.INST_reportMemoryTraffic_responseAdapter_bits);
  INST_reportMemoryTraffic_responseAdapter_count.dump_VCD(dt,
							  backing.INST_reportMemoryTraffic_responseAdapter_count);
  INST_reportMemoryTraffic_responseAdapter_notEmptyReg.dump_VCD(dt,
								backing.INST_reportMemoryTraffic_responseAdapter_notEmptyReg);
  INST_reportMemoryTraffic_responseAdapter_shift.dump_VCD(dt,
							  backing.INST_reportMemoryTraffic_responseAdapter_shift);
  INST_reportStateDbg_responseAdapter_bits.dump_VCD(dt,
						    backing.INST_reportStateDbg_responseAdapter_bits);
  INST_reportStateDbg_responseAdapter_count.dump_VCD(dt,
						     backing.INST_reportStateDbg_responseAdapter_count);
  INST_reportStateDbg_responseAdapter_notEmptyReg.dump_VCD(dt,
							   backing.INST_reportStateDbg_responseAdapter_notEmptyReg);
  INST_reportStateDbg_responseAdapter_shift.dump_VCD(dt,
						     backing.INST_reportStateDbg_responseAdapter_shift);
}
